[{"/home/jspw/Documents/Projects/Project 350/client/src/index.js":"1","/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js":"2","/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js":"3","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js":"4","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js":"5","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js":"6","/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js":"7","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js":"8","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js":"9","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js":"10","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js":"11","/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js":"12","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js":"13","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js":"14","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js":"15","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js":"16","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js":"17","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js":"18","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js":"19","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js":"20","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js":"21","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js":"22","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Loading.js":"23"},{"size":578,"mtime":1612727432119,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611434180840,"results":"26","hashOfConfig":"25"},{"size":3253,"mtime":1612791400723,"results":"27","hashOfConfig":"25"},{"size":12462,"mtime":1612851429423,"results":"28","hashOfConfig":"25"},{"size":12410,"mtime":1612844617026,"results":"29","hashOfConfig":"25"},{"size":1453,"mtime":1612844617026,"results":"30","hashOfConfig":"25"},{"size":4019,"mtime":1612635455952,"results":"31","hashOfConfig":"25"},{"size":4286,"mtime":1612116206385,"results":"32","hashOfConfig":"25"},{"size":4348,"mtime":1612851265827,"results":"33","hashOfConfig":"25"},{"size":4151,"mtime":1612703723217,"results":"34","hashOfConfig":"25"},{"size":9186,"mtime":1612703723217,"results":"35","hashOfConfig":"25"},{"size":1624,"mtime":1612559171882,"results":"36","hashOfConfig":"25"},{"size":4070,"mtime":1612751731030,"results":"37","hashOfConfig":"25"},{"size":6753,"mtime":1612703723225,"results":"38","hashOfConfig":"25"},{"size":13655,"mtime":1612851265839,"results":"39","hashOfConfig":"25"},{"size":1891,"mtime":1612840619056,"results":"40","hashOfConfig":"25"},{"size":11100,"mtime":1612801073680,"results":"41","hashOfConfig":"25"},{"size":4590,"mtime":1612851265843,"results":"42","hashOfConfig":"25"},{"size":3118,"mtime":1612748682822,"results":"43","hashOfConfig":"25"},{"size":10402,"mtime":1612849561069,"results":"44","hashOfConfig":"25"},{"size":2511,"mtime":1612851222110,"results":"45","hashOfConfig":"25"},{"size":511,"mtime":1612852176912,"results":"46","hashOfConfig":"25"},{"size":2421,"mtime":1612845317608,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"kvcbqu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jspw/Documents/Projects/Project 350/client/src/index.js",[],["107","108"],"/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js",["109","110","111","112","113","114","115","116","117","118","119","120"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js",["121","122","123","124","125","126","127","128","129","130","131","132"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nimport axios from \"axios\";\n\nimport \"./PreviousExam.css\";\n\nimport MarkSheet from \"./MarkSheet\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LinearIndeterminate from '../Generic/Loader';\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Box, CardContent, MenuList, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport ExamInfo from \"./ExamInfo\";\n\nconst PreviousExam = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const { id } = useParams();\n\n  const userId = props.userInfo._id;\n\n  const role = props.userInfo.role;\n\n  const [mcqExamData, setMcqExamData] = useState(null);\n  const [cqExamData, setCqExamData] = useState(null);\n  const [mcqExamsData, setMcqExamsData] = useState(null);\n  const [cqExamsData, setCqExamsData] = useState(null);\n\n  const [onlyExamInfo, setOnlyExamInfo] = useState(null);\n\n  let mcq;\n  let cq;\n\n  useEffect(() => {\n    let examType = \"mcq\";\n\n    let endpoint;\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\n\n    axios\n      .get(endpoint)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status == \"OK\") {\n          if (role === \"Teacher\") setMcqExamsData(response.data.result.data);\n          else setMcqExamData(response.data.result.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        axios\n          .get(`${role}/exam/${id}`)\n          .then((response) => {\n            setOnlyExamInfo(response.data.result.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n\n    examType = \"cq\";\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\n\n    axios\n      .get(endpoint)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status == \"OK\") {\n          if (role === \"Teacher\") setCqExamsData(response.data.result.data);\n          else setCqExamData(response.data.result.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        axios\n          .get(`${role}/exam/${id}`)\n          .then((response) => {\n            setOnlyExamInfo(response.data.result.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  }, []);\n\n  console.log(\"onlyExamInfo\", onlyExamInfo);\n\n  if (mcqExamData)\n    mcq = mcqExamData.studentAnswers.map((test) => {\n      return (\n        <div>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{test.mcqQuestion.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{test.mcqQuestion.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n              <MenuList>\n                {test.mcqQuestion.options.map((op) => {\n                  if (test.mcqQuestion.correctAnswers[0].answer === op.option)\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n                  if (test.studentAnswer === op.option)\n                    return <Alert variant=\"danger\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent>\n          </Card>\n          <br></br>\n        </div>\n      );\n    });\n  else if (cqExamData)\n    cq = cqExamData.studentAnswers.map((test) => {\n      return (\n        <din>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{test.cqQuestion.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{test.cqQuestion.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                    Ans :{\" \"}\n                  </Box>\n                </Form.Label>\n                <Form.Control\n                  value={test.studentAnswer}\n                  disabled\n                  as=\"textarea\"\n                  rows={3}\n                />\n              </Form.Group>\n\n              {/* <Alert variant=\"success\">{test.studentAnswer}</Alert> */}\n            </CardContent>\n          </Card>\n          <br></br>\n        </din>\n      );\n    });\n\n  if (role === \"Teacher\" && (mcqExamsData || onlyExamInfo)) {\n    return (\n      <Tab.Container\n        className=\"scroll-off\"\n        id=\"list-group-tabs-example\"\n        defaultActiveKey=\"#exam-info\"\n      >\n        <Row>\n          <Col sm={2}>\n            <ListGroup variant=\"flush\" className=\"align-items-center\">\n              <ListGroup.Item action href=\"#exam-info\">\n                Exam Info\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#mark-sheet\">\n                Mark Sheet\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#reviews\">\n                Reviews\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col sm={10}>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"#exam-info\">\n                <ExamInfo\n                  onlyExamInfo={onlyExamInfo}\n                  mcqExamData={mcqExamsData ? mcqExamsData[0] : null}\n                />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"#mark-sheet\">\n                <MarkSheet mcqExamsData={mcqExamsData} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"#reviews\">Reports</Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    );\n  } else if (mcqExamData || cqExamData)\n    return (\n      <Container style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">\n            {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\n          </h1>\n        </Alert>\n\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Participated On</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getDate()}\n                        th{\" \"}\n                        {\n                          months[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getMonth()\n                          ]\n                        }\n                        ,\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getFullYear()}{\" \"}\n                        (\n                        {\n                          days[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getDay()\n                          ]\n                        }\n                        )\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getHours() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()}\n                        :\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getMinutes() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Total Time</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalTime\n                          : cqExamData.cqExam.totalTime}{\" \"}\n                        min\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>\n                        {mcqExamData ? mcqExamData.mark : cqExamData.mark}/\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalMarks\n                          : cqExamData.cqExam.totalMarks}\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <td>Solved</td>\n                      <td>{mcqExamData ? mcqExamData.solved : \"\"}</td>\n                    </tr>\n\n                    <tr>\n                      <td>Wrong</td>\n                      <td>{mcqExamData ? mcqExamData.wrong : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col></Col>\n\n          <Col></Col>\n        </Row>\n        {mcq ? mcq : cq}\n      </Container>\n    );\n  else if (onlyExamInfo && role === \"Student\")\n    return (\n      <Container>\n        <div className=\"d-flex justify-content-center\">\n          <Alert variant=\"danger\">You Haven't Participated In This Exam</Alert>\n        </div>\n        <ExamInfo onlyExamInfo={onlyExamInfo} />\n      </Container>\n    );\n  else return <LinearIndeterminate />;\n};\n\nexport default PreviousExam;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js",["133","134","135","136","137","138","139","140","141","142","143","144"],"import { CircularProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\n/* import Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab'; */\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./Course.scss\";\nimport LinearIndeterminate from '../Generic/Loader';\n\nexport default function Course(props) {\n  let { id } = useParams();\n\n  const [courseData, setCourseData] = useState(null);\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios\n        .get(`${props.userInfo.role.toLowerCase()}/course/${id}`)\n        .then((response) => {\n          const data = response.data;\n          console.log(data);\n          if (data.status === \"OK\") setCourseData(data.result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }, []);\n\n  // console.log(\"Course Data\", courseData);\n\n  if (courseData) return <Sidebar courseData={courseData} />;\n  else return <LinearIndeterminate></LinearIndeterminate>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { useEffect, useState } from \"react\";\nimport Timer from \"../Timer/Timer\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n} from \"react-bootstrap\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  Menu,\n  MenuList,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nconst UpcomingExam = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const { id } = useParams();\n\n  console.log(props.userInfo);\n  // console.log(id);\n\n  let examInfo;\n  props.userInfo.courses.map((course) => {\n    //   console.log(course);\n    course.course.cqExams.map((exam) => {\n      //   console.log(exam.examId._id);\n      if (exam.examId._id == id) {\n        //   console.log(exam);\n        examInfo = exam.examId;\n      }\n    });\n    course.course.mcqExams.map((exam) => {\n      //   console.log(exam.examId._id);\n      if (exam.examId._id == id) examInfo = exam.examId;\n    });\n  });\n\n  console.log(examInfo);\n\n  return (\n    <Container>\n      <Alert variant=\"danger\">\n        <p className=\"text-center\">Exam Has Not Started Yet</p>\n      </Alert>\n      {/* <Alert variant=\"light\"> */}\n      <h1 className=\"text-center\">{examInfo.name}</h1>\n      {/* </Alert> */}\n\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <Table\n                // variant=\"dark\"\n                responsive\n                hover\n                bordered\n                size=\"sm\"\n                bsPrefix=\"table\"\n              >\n                <tbody>\n                  <tr>\n                    <td>Time</td>\n                    <td>\n                      {new Date(examInfo.date).getHours() < 10\n                        ? \"0\" + new Date(examInfo.date).getHours()\n                        : new Date(examInfo.date).getHours()}\n                      :\n                      {new Date(examInfo.date).getMinutes() < 10\n                        ? \"0\" + new Date(examInfo.date).getMinutes()\n                        : new Date(examInfo.date).getMinutes()}{\" \"}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Date</td>\n                    <td>\n                      {new Date(examInfo.date).getDate()}th{\" \"}\n                      {months[new Date(examInfo.date).getMonth()]},\n                      {new Date(examInfo.date).getFullYear()} (\n                      {days[new Date(examInfo.date).getDay()]})\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col>\n          <Row>\n            <Col></Col>\n            <Col>\n              <Table\n                // variant=\"dark\"\n                responsive\n                hover\n                bordered\n                size=\"sm\"\n                bsPrefix=\"table\"\n              >\n                <tbody>\n                  <tr>\n                    <td>Total Marks</td>\n                    <td>{examInfo.totalMarks}</td>\n                  </tr>\n                  <tr>\n                    <td>Total Time</td>\n                    <td>{examInfo.totalTime} min</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Timer deadline={examInfo.date} />\n    </Container>\n  );\n};\n\nexport default UpcomingExam;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js",["170","171","172","173"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://localhost:8080/\";\n\nconst Layout = (props) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  const [response, setResponse] = useState(1);\n\n  const [examInfo, setExamInfo] = useState(null);\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"test\", (data) => {\n      setResponse(data);\n      // console.log(\"Socket\", data);\n    });\n\n    socket.on(\"exam\", (data) => {\n      setExamInfo(data);\n    });\n    // return socket.disconnect();\n  }, []);\n\n  console.log(\"exam\", examInfo);\n\n  const SelectForm = () => {\n    let items = [];\n\n    if (props.universityInfo) {\n      props.universityInfo.forEach((element) => {\n        if (element.shortform === props.userInfo.varsity) {\n          element.departments.forEach((dept) => {\n            // console.log(dept);\n            items.push({\n              id: dept._id,\n              value: dept.shortform,\n            });\n          });\n        }\n      });\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl variant=\"outlined\" fullWidth required>\n        <InputLabel>{props.label}</InputLabel>\n        <Select value={props.values} label={props.label}>\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  const createCourseModal = (\n    <Modal\n      show={showModal}\n      onHide={handleCloseModal}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Create Course</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Control placeholder=\"Course Name\" />\n            </Col>\n            <Col>\n              <Form.Control placeholder=\"Code\" />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                readOnly\n                defaultValue={\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\n                }\n              />\n            </Col>\n            <Col>\n              <SelectForm />\n            </Col>\n          </Row>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\">Understood</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n  if (props.userInfo)\n    return (\n      <Container bg=\"light\" fluid>\n        {/* //   {createCourseModal}\n      //   <Row>\n      //     <Col md={3}>Courses</Col>\n      //     <Col md={6} backgroundColor=\"success\">\n      //       All Events\n      //       <Button className=\"pull-right light\" onClick={handleShowModal}>\n      //         Create Course\n      //       </Button> */}\n        <div\n          className={\n            response < 10\n              ? \"alert alert-info\"\n              : response < 20\n              ? \"alert alert-success\"\n              : response < 30\n              ? \"alert alert-primary\"\n              : response < 40\n              ? \"alert alert-secondary\"\n              : \"alert alert-danger\"\n          }\n        >\n          Time countdown : <strong>{response}</strong>\n        </div>\n        {/* //     </Col>\n      //   </Row> */}\n      </Container>\n    );\n  else {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h1>Please Login First</h1>\n      </div>\n    );\n  }\n};\n\nexport default Layout;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js",["174","175"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { FaBell } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\n\nlet navElements;\n\nexport default function Navigation(props) {\n  let history = useHistory();\n  const [showSign, setShowSign] = useState(true);\n  const navChange = () => setShowSign(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [anchor, setAnchor] = React.useState(null);\n  const isNotificationOpen = Boolean(anchor);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleNotificationMenuOpen = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setAnchor(null);\n  };\n\n  const handleSignout = () => {\n    localStorage.clear();\n    // props.login.isLogin = \"Failed\";\n    window.location.reload();\n    history.push(\"/\");\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"profile-menu\"\n      keepMounted\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      style={{ width: \"340px\" }}\n    >\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\n        Profile\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\n        Sign Out\n      </MenuItem>\n    </Menu>\n  );\n\n  const renderNotificationMenu = (\n    <Menu\n      anchorEl={anchor}\n      id=\"notification menu\"\n      open={isNotificationOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <MenuItem onClick={handleMenuClose}>Notification 1</MenuItem>\n    </Menu>\n  );\n\n  console.log(\"Login status\", props.loginStatus);\n\n  if (props.loginStatus == null) {\n    navElements = (\n      <>\n        <Spinner animation=\"grow\" />\n      </>\n    );\n  } else if (props.loginStatus == \"OK\") {\n    navElements = (\n      <>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotificationMenuOpen}\n        >\n          <Badge badgeContent={17} color=\"secondary\">\n            <FaBell style={{color: \"white\"}}/>\n          </Badge>\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          // aria-controls={menuId}\n          aria-haspopup=\"true\"\n          onClick={handleProfileMenuOpen}\n          color=\"inherit\"\n        >\n          <FaUserAlt style={{color: \"white\"}}/>\n        </IconButton>\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\n        {renderNotificationMenu}\n        {renderProfileMenu}\n      </>\n    );\n  } else {\n    navElements = (\n      <>\n        <Link to=\"signUp\" onClick={navChange}>\n          <MenuItem> Sign Up</MenuItem>\n        </Link>\n        <Link to=\"signIn\" onClick={navChange}>\n          <MenuItem>Sign In</MenuItem>\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <Navbar bg=\"\" style={{backgroundColor: \"#010302\"}} variant=\"dark\">\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\n        Name\n      </Navbar.Brand>\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\n    </Navbar>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js",["176","177","178"],"import React, { useState } from \"react\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Forms from \"./Forms\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./SignIn.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    // margin: theme.spacing(1),\n  },\n  textField: {\n    // width: \"15vw\",\n    // margin: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  shadows: [\"none\"],\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    role: \"\",\n    designation: \"\",\n    university: \"\",\n    department: \"\",\n    session: \"\",\n    regNo: \"\",\n    result: \"\",\n    error: \"\",\n  });\n\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: apiDomain + \"university/all\",\n  //   })\n  //     .then((response) => {\n  //       // console.log(\"All Universites..\");\n\n  //       // console.log(response.data);\n\n  //       const data = response.data;\n\n  //       if (data.status === \"OK\") {\n  //         setUniversities(data.result.data);\n  //       }\n  //     })\n  //     .catch((error) => console.log(error));\n  // }, []);\n\n  // console.log(\"API CALL DATA\", universities);\n  let history = useHistory();\n\n  const obj = {\n    role: values.role,\n    username: values.username,\n    email: values.email,\n    password: values.password,\n    repassword: values.confirmPassword,\n    firstName: values.firstName,\n    lastName: values.lastName,\n    department: values.department,\n    registrationNo: parseInt(values.regNo, 10),\n    session: values.session,\n    varsity: values.university,\n    designation: values.designation,\n  };\n\n  const body = JSON.stringify(obj);\n\n  const handleSignUp = (e) => {\n    // console.log('hello')\n    fetchData();\n    e.preventDefault();\n  };\n  const fetchData = async () => {\n    let endpoint;\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\n    else endpoint = \"auth/create-student\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: body,\n    };\n\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\n\n    const data = await response.json();\n\n    console.log(\"API data\",data);\n\n    if (data.status === \"FAILED\")\n      setValues({ ...values, [\"error\"]: data.result });\n    else {\n      setValues({ ...values, [\"error\"]: \"\" });\n      const userdata = {\n        token: data.result.jwt.token,\n        role: data.result.data.role.toLowerCase(),\n        id: data.result.data.id,\n      };\n\n      console.log(userdata);\n\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\n      history.push(\"/\");\n      window.location.reload();\n    }\n    \n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  // if (universities)\n  return (\n    <Container>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.textField}>\n            <h2>Hello There!!</h2>\n            <p>Lets Sign Up to continue</p>\n          </Grid>\n        </Grid>\n        {values.error !== \"\" ? (\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.root}\n          >\n            <Alert elevation={0} severity=\"error\">\n              {values.error}\n            </Alert>\n          </Grid>\n        ) : null}\n        <form onSubmit={handleSignUp}>\n          <Grid item xs={12}>\n            <Forms\n              id=\"role\"\n              type=\"select\"\n              label=\"Role\"\n              classes={classes}\n              values={values.role}\n              handleChange={handleChange}\n            />\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"university\"\n                type=\"select\"\n                label=\"University\"\n                labelWidth={117}\n                classes={classes}\n                values={values.university}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                selectedUniversity={values.university}\n                id=\"department\"\n                type=\"select\"\n                label=\"Department\"\n                labelWidth={117}\n                classes={classes}\n                values={values.department}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          {values.role !== \"Teacher\" ? (\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"session\"\n                  type=\"select\"\n                  label=\"Session\"\n                  labelWidth={117}\n                  classes={classes}\n                  values={values.session}\n                  handleChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"regNo\"\n                  type=\"text\"\n                  label=\"Registration No\"\n                  labelWidth={120}\n                  classes={classes}\n                  values={values.regNo}\n                  handleChange={handleChange}\n                  required={true}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12}>\n              <Forms\n                id=\"designation\"\n                type=\"select\"\n                label=\"Designation\"\n                labelWidth={117}\n                classes={classes}\n                values={values.designation}\n                handleChange={handleChange}\n              />\n            </Grid>\n          )}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"firstName\"\n                type=\"text\"\n                label=\"First Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.firstName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"lastName\"\n                type=\"text\"\n                label=\"Last Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.lastName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"username\"\n                type=\"text\"\n                label=\"Username\"\n                labelWidth={84}\n                classes={classes}\n                values={values.username}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                labelWidth={110}\n                classes={classes}\n                values={values.email}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                labelWidth={80}\n                classes={classes}\n                values={values.password}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                labelWidth={140}\n                classes={classes}\n                values={values.confirmPassword}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.textField}>\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\n              Sign Up\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n  // else return <h1>Loading</h1>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js",["179"],"import { useRef, useState, useEffect } from \"react\";\n\nimport './Timer.css';\n\nconst Timer = (props) => {\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n  //   console.log(props.deadline)\n  let interval = useRef();\n\n  const timer = (props) => {\n    const seconds = 1000;\n    const minutes = seconds * 60;\n    const hours = minutes * 60;\n    const days = hours * 24;\n    const deadline = new Date(props.deadline).getTime();\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = deadline - now;\n      if (timeLeft < 0) {\n        clearInterval(interval.current);\n      } else {\n        setTimerDays(Math.floor(timeLeft / days));\n        setTimerHours(Math.floor((timeLeft % days) / hours));\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    timer(props);\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  return (\n    <div className=\"timer-container\">\n      <ul>\n        <li>\n          <span id=\"days\">{timerDays}</span> Days\n        </li>\n        <li>\n          <span id=\"hours\">{timerHours}</span> Hours\n        </li>\n        <li>\n          <span id=\"minutes\">{timerMinutes}</span> Minutes\n        </li>\n        <li>\n          <span id=\"seconds\">{timerSeconds}</span> Seconds\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Timer;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js",["180","181","182","183","184","185","186"],"import React, { useState } from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Link } from \"react-router-dom\";\nimport { IoCreate } from \"react-icons/io5\";\nimport { IoClipboard } from \"react-icons/io5\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { FaInfoCircle } from \"react-icons/fa\";\n/* import Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab'; */\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport CreateExam from './CreateExam/CreateExam';\nimport \"./Sidebar.scss\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\nexport default function Sidebar(props) {\n\n    const [sidebar, setSidebar] = useState(false);\n\n    const showSidebar = () => setSidebar(!sidebar);\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n    return (\n      <>\n        <aside className={sidebar ? \"sidebar active\" : \"sidebar\"}>\n          <ul className=\"sidebar__nav\">\n            <li className=\"sidebar__logo\">\n              <Row>\n                <Link className=\"sidebar__item__link\" onClick={showSidebar}>\n                  <Col xs={4} className=\"sidebar__item__text\">\n                    {props.courseData.code}\n                  </Col>\n                  <Col xs={sidebar ? { span: 4, offset: 2 } : {}}>\n                    <FaAngleDoubleRight className=\"sidebar__item__icon\" />\n                  </Col>\n                </Link>\n              </Row>\n            </li>\n            <li className=\"sidebar__item\">\n              <Link className=\"sidebar__item__link\">\n                <IoCreate className=\"sidebar__item__icon\" />\n                <span className=\"sidebar__item__text\">Create Exam</span>\n              </Link>\n            </li>\n            <li className=\"sidebar__item\">\n              <Link className=\"sidebar__item__link\">\n                <IoClipboard className=\"sidebar__item__icon\" />\n                <span className=\"sidebar__item__text\">Exams</span>\n              </Link>\n            </li>\n            <li className=\"sidebar__item\">\n              <Link className=\"sidebar__item__link\">\n                <FaUsers className=\"sidebar__item__icon\" />\n                <span className=\"sidebar__item__text\">Students</span>\n              </Link>\n            </li>\n            <li className=\"sidebar__item\">\n              <Link className=\"sidebar__item__link\">\n                <FaChalkboardTeacher className=\"sidebar__item__icon\" />\n                <span className=\"sidebar__item__text\">Teacher</span>\n              </Link>\n            </li>\n            <li className=\"sidebar__item\">\n              <Link className=\"sidebar__item__link\">\n                <FaInfoCircle className=\"sidebar__item__icon\" />\n                <span className=\"sidebar__item__text\">Course Info</span>\n              </Link>\n            </li>\n          </ul>\n        </aside>\n        <div className={sidebar ? \"content__small\" : \"content__large\"}>\n          <CreateExam  courseData={props.courseData} />\n        </div>\n      </>\n    );\n}","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js",["187"],"import React, { useState, useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport \"./Forms.scss\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst TextFieldForm = (props) => (\n  <TextField\n  id={props.id}\n  label={props.label}\n  multiline\n  rows={props.rows}\n  variant=\"outlined\"\n  onChange={props.handleChange(props.id)}\n  labelWidth={props.labelWidth}\n  value={props.values}\n  fullWidth\n  className={props.classes.textField}\n  required={props.required}\n/>\n)\n\nconst TextForm = (props) => (\n  <FormControl\n    className={props.classes.textField}\n    variant=\"outlined\"\n    fullWidth\n    required={props.required}\n  >\n    <InputLabel>{props.label}</InputLabel>\n    <OutlinedInput\n      id={props.id}\n      onChange={props.handleChange(props.id)}\n      value={props.values}\n      labelWidth={props.labelWidth}\n    />\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      className={props.classes.textField}\n      variant=\"outlined\"\n      fullWidth\n      required\n    >\n      <InputLabel>{props.label}</InputLabel>\n      <OutlinedInput\n        id={props.id}\n        type={showPassword ? \"text\" : \"password\"}\n        value={props.values}\n        onChange={props.handleChange(props.id)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label={\"password\"}\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={props.labelWidth}\n      />\n    </FormControl>\n  );\n};\n\nconst Forms = (props) => {\n  const type = props.type;\n\n  const [universities, setUniversities] = useState(null);\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\n\n  // console.log(props);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: apiDomain + \"university/all\",\n    })\n      .then((response) => {\n        // console.log(\"All Universites..\");\n\n        // console.log(response.data);\n\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversities(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsApiLoaded(false);\n      });\n  }, []);\n\n  const SelectForm = (props) => {\n    // console.log(\"COMPONENT : select form\");\n    let items = [];\n    const id = props.id;\n\n    if (universities) {\n      // console.log(\"Univbersity\", universities);\n\n      // for (let i = 0; i < universities.length; i++) {\n      //   console.log(\"Loop\");\n      //   console.log(universities[i]);\n      // }\n\n      if (id === \"role\")\n        items = [\n          {\n            id: \"Teacher\",\n            value: \"Teacher\",\n          },\n          {\n            id: \"Student\",\n            value: \"Student\",\n          },\n        ];\n      else if (id === \"university\") {\n        items = [];\n        universities.forEach((element) => {\n          items.push({\n            id: element._id,\n            value: element.shortform,\n          });\n        });\n      } else if (id === \"department\") {\n        items = [];\n\n        if (props.selectedUniversity) {\n          // console.log(\"Selected University \", props.selectedUniversity);\n          universities.forEach((element) => {\n            if (element._id === props.selectedUniversity) {\n              element.departments.forEach((dept) => {\n                // console.log(dept);\n                items.push({\n                  id: dept._id,\n                  value: dept.shortform,\n                });\n              });\n            }\n          });\n        }\n      } else if (id === \"session\") {\n        items = [];\n        items = [\n          {\n            id: \"2016-2017\",\n            value: \"2016-2017\",\n          },\n          {\n            id: \"2017-2018\",\n            value: \"2017-2018\",\n          },\n          {\n            id: \"2018-2019\",\n            value: \"2018-2019\",\n          },\n          {\n            id: \"2020-2021\",\n            value: \"2020-2021\",\n          },\n        ];\n      } else if (id === \"designation\") {\n        items = [];\n        items = [\n          {\n            id: \"Department Head\",\n            value: \"Department Head\",\n          },\n          {\n            id: \"Professor\",\n            value: \"Professor\",\n          },\n          {\n            id: \"Assistant Professor\",\n            value: \"Assistant Professor\",\n          },\n          {\n            id: \"Lecturer\",\n            value: \"Lecturer\",\n          },\n        ];\n      } else if(id === \"options\") {\n        items = [];\n        items = [\n          {\n            id: \"optA\",\n            value: \"A\",\n          },\n          {\n            id: \"optB\",\n            value: \"B\",\n          },\n          {\n            id: \"optC\",\n            value: \"C\",\n          },\n          {\n            id: \"optD\",\n            value: \"D\",\n          },\n        ];\n      }\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl\n        variant=\"outlined\"\n        className={props.classes.textField}\n        fullWidth\n        required\n      >\n        <InputLabel>{props.label}</InputLabel>\n        <Select\n          id={id}\n          value={props.values}\n          onChange={props.handleChange(id)}\n          label={props.label}\n        >\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  if (type === \"text\") {\n    return <TextForm {...props} />;\n  } else if (type === \"password\") {\n    return <PasswordForm {...props} />;\n  } else if (type === \"select\") {\n    return <SelectForm {...props} />;\n  } else {\n    return <TextFieldForm {...props}/>\n  }\n};\n\nexport default Forms;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js",["188","189","190"],"import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Forms from \"../../Generic/Forms\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { getRenderPropValue } from \"antd/lib/_util/getRenderPropValue\";\nimport axios from \"axios\";\nimport { Toast } from \"react-bootstrap\";\n\nimport \"./CreateExam.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginTop: theme.spacing(3),\n  },\n  leftTextField: {\n    marginTop: theme.spacing(6),\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(10),\n    // backgroundColor: '#3F7CAC',\n  },\n}));\n\nconst leftStyles = makeStyles((theme) => ({\n  textField: {\n    marginTop: theme.spacing(3.5),\n  },\n  timeField: {\n    marginTop: theme.spacing(2.9),\n  },\n}));\n\nexport default function Question(props) {\n  const classes = useStyles();\n  const leftClasses = leftStyles();\n\n  let questionsCreated = 0;\n\n  const [values, setValues] = useState({\n    description: \"\",\n    question: null,\n    optA: null,\n    optB: null,\n    optC: null,\n    optD: null,\n    ans: null,\n    marks: null,\n    min: null,\n    sec: null,\n    date: Date.now(),\n    name: null,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const [questionEditDisable, setQuestionEditDisable] = useState(false);\n\n  const [showToast, setShowToast] = useState(false);\n\n  console.log(\"questionEditDisable\", questionEditDisable);\n\n  const handleClickOpen = () => {\n    if (\n      values.question &&\n      values.optA &&\n      values.optB &&\n      values.optC &&\n      values.optD &&\n      values.ans &&\n      values.marks &&\n      values.min &&\n      values.sec\n    ) {\n      setOpen(true);\n    } else {\n      setShowToast(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const createExam = () => {\n    console.log(values.name);\n    if (values.name) {\n      props.createExam(values.date, values.name);\n      setOpen(false);\n    }\n  };\n\n  const handleChange = (prop) => (event) => {\n    console.log(\"Triggered\", event.target.value);\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleQuestionAdd = (id) => {\n    props.onAdd(\n      id,\n      values.marks,\n      parseInt(values.min, 10) * 60 + parseInt(values.sec, 10)\n    );\n  };\n\n  function sendQuestion(e) {\n    e.preventDefault();\n\n    console.log(\"Form Values \", values);\n\n    axios({\n      method: \"POST\",\n      url: \"teacher/question/mcq/create\",\n\n      headers: { \"Content-Type\": \"application/json\" },\n      data: JSON.stringify({\n        description: values.description,\n        mainQuestion: values.question,\n        options: [\n          {\n            option: values.optA,\n          },\n          {\n            option: values.optB,\n          },\n          {\n            option: values.optC,\n          },\n          {\n            option: values.optD,\n          },\n        ],\n        correctAnswers: [\n          {\n            answer:\n              values.ans === \"A\"\n                ? values.optA\n                : values.ans === \"B\"\n                ? values.optB\n                : values.ans === \"C\"\n                ? values.optC\n                : values.optD,\n          },\n        ],\n        time: parseInt(values.min, 10) * 60 + parseInt(values.sec, 10),\n        marks: parseInt(values.marks, 10),\n      }),\n    })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status === \"OK\") {\n          handleQuestionAdd(response.data.result.data._id);\n          setQuestionEditDisable(true);\n          questionsCreated++;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  return (\n    <Container fluid className=\"justify-content-flex-start\">\n      <Toast\n        className=\"toast-modify\"\n        autohide\n        onClose={() => setShowToast(false)}\n        show={showToast}\n      >\n        <Toast.Header>\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n          <strong className=\"mr-auto\">Alert Message</strong>\n          <small>just now</small>\n        </Toast.Header>\n        <Toast.Body>You Have To Create At Least One Question !</Toast.Body>\n      </Toast>\n\n      <Row className=\"justify-content-center\">\n        <Col xs=\"auto\">\n          <h3>Create Your Question Here</h3>\n        </Col>\n      </Row>\n      <form onSubmit={sendQuestion}>\n        <Row>\n          <Col xs={6}>\n            <Col lg={12}>\n              <Row className=\"justify-content-flex-start\">\n                <Col xs={12} md={6} lg={12}>\n                  <Forms\n                    id=\"description\"\n                    type=\"textField\"\n                    label=\"Description\"\n                    labelWidth={80}\n                    values={values.description}\n                    handleChange={handleChange}\n                    rows={4}\n                    classes={classes}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-flex-start\">\n                <Col xs={12} md={6} lg={12}>\n                  <Forms\n                    id=\"question\"\n                    type=\"textField\"\n                    label=\"Question\"\n                    labelWidth={75}\n                    values={values.question}\n                    handleChange={handleChange}\n                    required={true}\n                    rows={3}\n                    classes={classes}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-flex-start\">\n                <Col xs={6}>\n                  <Forms\n                    id=\"optA\"\n                    type=\"text\"\n                    label=\"Option A\"\n                    labelWidth={75}\n                    values={values.optA}\n                    handleChange={handleChange}\n                    required={true}\n                    classes={classes}\n                  />\n                </Col>\n                <Col xs={6}>\n                  <Forms\n                    id=\"optB\"\n                    type=\"text\"\n                    label=\"Option B\"\n                    labelWidth={75}\n                    values={values.optB}\n                    handleChange={handleChange}\n                    required={true}\n                    classes={classes}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-flex-start\">\n                <Col xs={6}>\n                  <Forms\n                    id=\"optC\"\n                    type=\"text\"\n                    label=\"Option C\"\n                    labelWidth={75}\n                    values={values.optC}\n                    handleChange={handleChange}\n                    required={true}\n                    classes={classes}\n                  />\n                </Col>\n                <Col xs={6}>\n                  <Forms\n                    id=\"optD\"\n                    type=\"text\"\n                    label=\"Option D\"\n                    labelWidth={75}\n                    values={values.optD}\n                    handleChange={handleChange}\n                    required={true}\n                    classes={classes}\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Col>\n          <Col>\n            <Row className=\"justify-content-flex-start\">\n              <Col>\n                <FormControl\n                  component=\"fieldset\"\n                  className={classes.textField}\n                  required\n                >\n                  <FormLabel component=\"legend\">Select Correct Ans</FormLabel>\n                  <RadioGroup\n                    aria-label=\"ans\"\n                    name=\"ans\"\n                    value={values.ans}\n                    onChange={handleChange(\"ans\")}\n                  >\n                    <FormControlLabel\n                      value=\"A\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"A\"\n                    />\n                    <FormControlLabel\n                      value=\"B\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"B\"\n                    />\n                    <FormControlLabel\n                      value=\"C\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"C\"\n                    />\n                    <FormControlLabel\n                      value=\"D\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"D\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={4}>\n                <TextField\n                  type=\"number\"\n                  label=\"Marks\"\n                  variant=\"outlined\"\n                  value={values.marks}\n                  onChange={handleChange(\"marks\")}\n                  className={leftClasses.textField}\n                  required\n                />\n              </Col>\n            </Row>\n            {/*             <Row className=\"justify-content-flex-start\">\n              <Col>\n                <FormLabel component=\"legend\" className={leftClasses.timeField}>\n                  Time Limit\n                </FormLabel>\n              </Col>\n            </Row> */}\n            <Row className=\"justify-content-flex-start\">\n              <Col xs={4}>\n                <TextField\n                  id=\"min\"\n                  type=\"number\"\n                  placeholder=\"00\"\n                  label=\"Minutes\"\n                  variant=\"outlined\"\n                  value={values.min}\n                  onChange={handleChange(\"min\")}\n                  className={classes.textField}\n                  required\n                />\n              </Col>\n              <Col xs={4}>\n                <TextField\n                  id=\"sec\"\n                  min=\"0\"\n                  type=\"number\"\n                  max=\"59\"\n                  placeholder=\"00\"\n                  label=\"Seconds\"\n                  variant=\"outlined\"\n                  value={values.sec}\n                  onChange={handleChange(\"sec\")}\n                  className={classes.textField}\n                  required\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <ButtonGroup size=\"large\" color=\"primary\">\n            <Button\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<EditIcon />}\n            >\n              Edit\n            </Button>\n            <Button\n              disabled={questionEditDisable}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<SaveIcon />}\n              type=\"submit\"\n            >\n              Save\n            </Button>\n            <Button\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<LockIcon />}\n              onClick={handleClickOpen}\n            >\n              Lock Exam\n            </Button>\n          </ButtonGroup>\n        </Row>\n      </form>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Lock This Exam</DialogTitle>\n        <DialogContent>\n          <TextField\n            id=\"exam-name\"\n            type=\"text\"\n            label=\"Exam Name\"\n            value={values.name}\n            onChange={handleChange(\"name\")}\n            required={true}\n            classes={classes.textField}\n          />\n\n          <br />\n\n          <TextField\n            id=\"datetime-local\"\n            label=\"Exam Schedule\"\n            type=\"datetime-local\"\n            value={values.date}\n            onChange={handleChange(\"date\")}\n            defaultValue=\"2021-05-01T10:30\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <DialogContentText>\n            <br />\n            Total Marks: {props.totalMarks}\n            <br />\n            Total Time: {props.totalTime}\n            <br />\n            <br />\n            By clicking confirm this exam will be created as schedule.\n            <br />\n            <br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={createExam} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js",["191"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nimport axios from \"axios\";\n\nimport \"./PreviousExam.css\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  Box,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  Menu,\n  MenuList,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  DataGrid,\n  getNumericColumnOperators,\n  PreferencePanelsValue,\n} from \"@material-ui/data-grid\";\n\nconst ExamInfo = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const mcqExamData = props.mcqExamData;\n  const cqExamData = props.cqExamData;\n  const onlyExamInfo = props.onlyExamInfo;\n  let mcq;\n\n  console.log(\"mcqExamData\", mcqExamData);\n\n  if (mcqExamData)\n    mcq = mcqExamData.studentAnswers.map((test) => {\n      return (\n        <din>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{test.mcqQuestion.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{test.mcqQuestion.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n              <MenuList>\n                {test.mcqQuestion.options.map((op) => {\n                  if (test.mcqQuestion.correctAnswers[0].answer === op.option)\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent>\n          </Card>\n          <br></br>\n        </din>\n      );\n    });\n\n  if (onlyExamInfo) {\n    mcq = onlyExamInfo.mcqQuestions.map((questions) => {\n      return (\n        <din>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{questions.mcqQuestionId.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{questions.mcqQuestionId.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n              <MenuList>\n                {questions.mcqQuestionId.options.map((op) => {\n                  if (\n                    questions.mcqQuestionId.correctAnswers[0].answer ===\n                    op.option\n                  )\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent>\n          </Card>\n          <br></br>\n        </din>\n      );\n    });\n\n    return (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">Exam Name : {onlyExamInfo.name}</h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getDate()}\n                        th {months[new Date(onlyExamInfo.date).getMonth()]},\n                        {new Date(onlyExamInfo.date).getFullYear()} (\n                        {days[new Date(onlyExamInfo.date).getDay()]})\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getHours() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getHours()\n                          : new Date(onlyExamInfo.date).getHours()}\n                        :\n                        {new Date(onlyExamInfo.date).getMinutes() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getMinutes()\n                          : new Date(onlyExamInfo.date).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>{onlyExamInfo.totalMarks}</td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>{onlyExamInfo.totalTime} min</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Container className=\"scroll\">{mcq}</Container>\n      </Container>\n    );\n  } else\n    return (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">\n            Exam Name :{\" \"}\n            {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\n          </h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getDate()}\n                        th{\" \"}\n                        {\n                          months[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getMonth()\n                          ]\n                        }\n                        ,\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getFullYear()}{\" \"}\n                        (\n                        {\n                          days[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getDay()\n                          ]\n                        }\n                        )\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getHours() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()}\n                        :\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getMinutes() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalMarks\n                          : cqExamData.cqExam.totalMarks}\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalTime\n                          : cqExamData.cqExam.totalTime}{\" \"}\n                        min\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Container className=\"scroll\">{mcq}</Container>\n      </Container>\n    );\n};\n\nexport default ExamInfo;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js",["217","218","219","220","221"],"import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Exam(props) {\n  // const { match } = props;\n\n  // console.log(\"Exam id\",match);\n  console.log(\"props... \", props);\n\n  let { id } = useParams();\n  console.log(\"ID\", id);\n\n  const [examData, setExamData] = useState(null);\n\n  const [timer, setTimer] = useState(null);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios.get(`${props.userInfo.role}/exam/${id}`).then((response) => {\n        const data = response.data;\n        setExamData(data.result.data);\n      });\n  }, []);\n\n  console.log(\"Exam Data\", examData);\n\n  let examQuestionUi;\n\n  if (examData && examData.mcqQuestions) {\n    examQuestionUi = examData.mcqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.mcqQuestionId.description}</Typography>\n\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\n\n            <List>\n              {question.mcqQuestionId.options.map((options) => {\n                return (\n                  <ListItem>\n                    <CardActions Button>{options.option}</CardActions>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  } else if (examData && examData.cqQuestions) {\n    examQuestionUi = examData.cqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.cqQuestionId.description}</Typography>\n\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\n            <TextField\n              id=\"outlined-textarea\"\n              label=\"Ans\"\n              placeholder=\"Write here\"\n              multiline\n              variant=\"outlined\"\n            />\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  }\n\n  let x = 0;\n\n  if (examData)\n    setInterval(() => {\n      const date = new Date();\n      setTimer(date.getSeconds());\n    }, 1000);\n\n  if (examData)\n    return (\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={8}>\n            <Paper>\n              <Typography variant=\"h2\" component=\"h2\">\n                {examData.name}\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper>\n              {\" \"}\n              <h3>{timer}</h3>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid>{examQuestionUi}</Grid>\n        <Button onClick={() => x++}>Next</Button>\n      </Container>\n    );\n  else return <CircularProgress />;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js",["222","223","224"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Loading.js",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":23},{"ruleId":"262","severity":1,"message":"266","line":1,"column":35,"nodeType":"264","messageId":"265","endLine":1,"endColumn":44},{"ruleId":"262","severity":1,"message":"267","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"268","line":7,"column":10,"nodeType":"264","messageId":"265","endLine":7,"endColumn":21},{"ruleId":"262","severity":1,"message":"269","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":22},{"ruleId":"262","severity":1,"message":"270","line":13,"column":27,"nodeType":"264","messageId":"265","endLine":13,"endColumn":33},{"ruleId":"262","severity":1,"message":"271","line":32,"column":7,"nodeType":"264","messageId":"265","endLine":32,"endColumn":11},{"ruleId":"262","severity":1,"message":"272","line":50,"column":10,"nodeType":"264","messageId":"265","endLine":50,"endColumn":23},{"ruleId":"262","severity":1,"message":"273","line":50,"column":25,"nodeType":"264","messageId":"265","endLine":50,"endColumn":41},{"ruleId":"262","severity":1,"message":"274","line":158,"column":11,"nodeType":"264","messageId":"265","endLine":158,"endColumn":24},{"ruleId":"275","severity":1,"message":"276","line":250,"column":51,"nodeType":"277","messageId":"278","endLine":250,"endColumn":53},{"ruleId":"279","severity":1,"message":"280","line":251,"column":15,"nodeType":"281","messageId":"282","endLine":251,"endColumn":17},{"ruleId":"262","severity":1,"message":"283","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"284","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"285","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"286","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"287","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":15},{"ruleId":"262","severity":1,"message":"288","line":18,"column":3,"nodeType":"264","messageId":"265","endLine":18,"endColumn":13},{"ruleId":"262","severity":1,"message":"289","line":19,"column":3,"nodeType":"264","messageId":"265","endLine":19,"endColumn":10},{"ruleId":"262","severity":1,"message":"290","line":63,"column":9,"nodeType":"264","messageId":"265","endLine":63,"endColumn":15},{"ruleId":"262","severity":1,"message":"291","line":70,"column":10,"nodeType":"264","messageId":"265","endLine":70,"endColumn":21},{"ruleId":"279","severity":1,"message":"292","line":88,"column":34,"nodeType":"281","messageId":"282","endLine":88,"endColumn":36},{"ruleId":"279","severity":1,"message":"292","line":113,"column":34,"nodeType":"281","messageId":"282","endLine":113,"endColumn":36},{"ruleId":"293","severity":1,"message":"294","line":129,"column":6,"nodeType":"295","endLine":129,"endColumn":8,"suggestions":"296"},{"ruleId":"262","severity":1,"message":"267","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":3,"column":17,"nodeType":"264","messageId":"265","endLine":3,"endColumn":23},{"ruleId":"262","severity":1,"message":"297","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":11},{"ruleId":"262","severity":1,"message":"298","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":11},{"ruleId":"262","severity":1,"message":"299","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":12},{"ruleId":"262","severity":1,"message":"300","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":11},{"ruleId":"262","severity":1,"message":"301","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":17},{"ruleId":"262","severity":1,"message":"302","line":11,"column":10,"nodeType":"264","messageId":"265","endLine":11,"endColumn":20},{"ruleId":"262","severity":1,"message":"303","line":12,"column":8,"nodeType":"264","messageId":"265","endLine":12,"endColumn":14},{"ruleId":"262","severity":1,"message":"304","line":15,"column":8,"nodeType":"264","messageId":"265","endLine":15,"endColumn":18},{"ruleId":"262","severity":1,"message":"305","line":16,"column":8,"nodeType":"264","messageId":"265","endLine":16,"endColumn":11},{"ruleId":"293","severity":1,"message":"306","line":37,"column":6,"nodeType":"295","endLine":37,"endColumn":8,"suggestions":"307"},{"ruleId":"262","severity":1,"message":"266","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"308","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"283","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"284","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"309","line":9,"column":3,"nodeType":"264","messageId":"265","endLine":9,"endColumn":7},{"ruleId":"262","severity":1,"message":"285","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"310","line":11,"column":3,"nodeType":"264","messageId":"265","endLine":11,"endColumn":7},{"ruleId":"262","severity":1,"message":"286","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"311","line":18,"column":8,"nodeType":"264","messageId":"265","endLine":18,"endColumn":14},{"ruleId":"262","severity":1,"message":"312","line":19,"column":8,"nodeType":"264","messageId":"265","endLine":19,"endColumn":18},{"ruleId":"262","severity":1,"message":"313","line":20,"column":8,"nodeType":"264","messageId":"265","endLine":20,"endColumn":16},{"ruleId":"262","severity":1,"message":"314","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"267","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":24},{"ruleId":"262","severity":1,"message":"315","line":24,"column":3,"nodeType":"264","messageId":"265","endLine":24,"endColumn":14},{"ruleId":"262","severity":1,"message":"316","line":25,"column":3,"nodeType":"264","messageId":"265","endLine":25,"endColumn":13},{"ruleId":"262","severity":1,"message":"317","line":26,"column":3,"nodeType":"264","messageId":"265","endLine":26,"endColumn":7},{"ruleId":"262","severity":1,"message":"318","line":27,"column":3,"nodeType":"264","messageId":"265","endLine":27,"endColumn":11},{"ruleId":"262","severity":1,"message":"319","line":28,"column":3,"nodeType":"264","messageId":"265","endLine":28,"endColumn":7},{"ruleId":"262","severity":1,"message":"320","line":29,"column":3,"nodeType":"264","messageId":"265","endLine":29,"endColumn":11},{"ruleId":"262","severity":1,"message":"304","line":30,"column":3,"nodeType":"264","messageId":"265","endLine":30,"endColumn":13},{"ruleId":"275","severity":1,"message":"321","line":66,"column":39,"nodeType":"277","messageId":"322","endLine":66,"endColumn":41},{"ruleId":"275","severity":1,"message":"321","line":68,"column":38,"nodeType":"277","messageId":"322","endLine":68,"endColumn":40},{"ruleId":"279","severity":1,"message":"292","line":70,"column":27,"nodeType":"281","messageId":"282","endLine":70,"endColumn":29},{"ruleId":"275","severity":1,"message":"321","line":75,"column":39,"nodeType":"277","messageId":"322","endLine":75,"endColumn":41},{"ruleId":"279","severity":1,"message":"292","line":77,"column":27,"nodeType":"281","messageId":"282","endLine":77,"endColumn":29},{"ruleId":"262","severity":1,"message":"285","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"267","line":19,"column":8,"nodeType":"264","messageId":"265","endLine":19,"endColumn":24},{"ruleId":"262","severity":1,"message":"323","line":29,"column":9,"nodeType":"264","messageId":"265","endLine":29,"endColumn":24},{"ruleId":"262","severity":1,"message":"324","line":89,"column":9,"nodeType":"264","messageId":"265","endLine":89,"endColumn":26},{"ruleId":"325","severity":1,"message":"326","line":69,"column":43,"nodeType":"327","endLine":69,"endColumn":66},{"ruleId":"279","severity":1,"message":"292","line":103,"column":32,"nodeType":"281","messageId":"282","endLine":103,"endColumn":34},{"ruleId":"328","severity":1,"message":"329","line":26,"column":3,"nodeType":"330","messageId":"282","endLine":26,"endColumn":7},{"ruleId":"331","severity":1,"message":"332","line":120,"column":30,"nodeType":"333","messageId":"334","endLine":120,"endColumn":52,"fix":"335"},{"ruleId":"331","severity":1,"message":"332","line":122,"column":30,"nodeType":"333","messageId":"334","endLine":122,"endColumn":43,"fix":"336"},{"ruleId":"293","severity":1,"message":"337","line":38,"column":30,"nodeType":"264","endLine":38,"endColumn":37},{"ruleId":"262","severity":1,"message":"302","line":14,"column":10,"nodeType":"264","messageId":"265","endLine":14,"endColumn":20},{"ruleId":"262","severity":1,"message":"303","line":15,"column":8,"nodeType":"264","messageId":"265","endLine":15,"endColumn":14},{"ruleId":"262","severity":1,"message":"299","line":16,"column":8,"nodeType":"264","messageId":"265","endLine":16,"endColumn":12},{"ruleId":"262","severity":1,"message":"300","line":17,"column":8,"nodeType":"264","messageId":"265","endLine":17,"endColumn":11},{"ruleId":"262","severity":1,"message":"338","line":48,"column":10,"nodeType":"264","messageId":"265","endLine":48,"endColumn":19},{"ruleId":"262","severity":1,"message":"339","line":60,"column":12,"nodeType":"264","messageId":"265","endLine":60,"endColumn":17},{"ruleId":"262","severity":1,"message":"340","line":62,"column":11,"nodeType":"264","messageId":"265","endLine":62,"endColumn":23},{"ruleId":"262","severity":1,"message":"341","line":95,"column":10,"nodeType":"264","messageId":"265","endLine":95,"endColumn":21},{"ruleId":"262","severity":1,"message":"342","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":12},{"ruleId":"262","severity":1,"message":"343","line":24,"column":10,"nodeType":"264","messageId":"265","endLine":24,"endColumn":28},{"ruleId":"262","severity":1,"message":"344","line":169,"column":11,"nodeType":"264","messageId":"265","endLine":169,"endColumn":27},{"ruleId":"279","severity":1,"message":"292","line":26,"column":20,"nodeType":"281","messageId":"282","endLine":26,"endColumn":22},{"ruleId":"262","severity":1,"message":"266","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"308","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"283","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"284","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"309","line":9,"column":3,"nodeType":"264","messageId":"265","endLine":9,"endColumn":7},{"ruleId":"262","severity":1,"message":"285","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"286","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"300","line":15,"column":3,"nodeType":"264","messageId":"265","endLine":15,"endColumn":6},{"ruleId":"262","severity":1,"message":"287","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":15},{"ruleId":"262","severity":1,"message":"345","line":17,"column":3,"nodeType":"264","messageId":"265","endLine":17,"endColumn":12},{"ruleId":"262","severity":1,"message":"288","line":18,"column":3,"nodeType":"264","messageId":"265","endLine":18,"endColumn":13},{"ruleId":"262","severity":1,"message":"289","line":19,"column":3,"nodeType":"264","messageId":"265","endLine":19,"endColumn":10},{"ruleId":"262","severity":1,"message":"346","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":13},{"ruleId":"262","severity":1,"message":"311","line":27,"column":8,"nodeType":"264","messageId":"265","endLine":27,"endColumn":14},{"ruleId":"262","severity":1,"message":"312","line":28,"column":8,"nodeType":"264","messageId":"265","endLine":28,"endColumn":18},{"ruleId":"262","severity":1,"message":"314","line":30,"column":8,"nodeType":"264","messageId":"265","endLine":30,"endColumn":19},{"ruleId":"262","severity":1,"message":"267","line":31,"column":8,"nodeType":"264","messageId":"265","endLine":31,"endColumn":24},{"ruleId":"262","severity":1,"message":"316","line":35,"column":3,"nodeType":"264","messageId":"265","endLine":35,"endColumn":13},{"ruleId":"262","severity":1,"message":"317","line":36,"column":3,"nodeType":"264","messageId":"265","endLine":36,"endColumn":7},{"ruleId":"262","severity":1,"message":"318","line":37,"column":3,"nodeType":"264","messageId":"265","endLine":37,"endColumn":11},{"ruleId":"262","severity":1,"message":"319","line":38,"column":3,"nodeType":"264","messageId":"265","endLine":38,"endColumn":7},{"ruleId":"262","severity":1,"message":"347","line":42,"column":10,"nodeType":"264","messageId":"265","endLine":42,"endColumn":19},{"ruleId":"262","severity":1,"message":"348","line":45,"column":3,"nodeType":"264","messageId":"265","endLine":45,"endColumn":11},{"ruleId":"262","severity":1,"message":"349","line":46,"column":3,"nodeType":"264","messageId":"265","endLine":46,"endColumn":28},{"ruleId":"262","severity":1,"message":"350","line":47,"column":3,"nodeType":"264","messageId":"265","endLine":47,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":23},{"ruleId":"262","severity":1,"message":"319","line":15,"column":3,"nodeType":"264","messageId":"265","endLine":15,"endColumn":7},{"ruleId":"262","severity":1,"message":"313","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":11},{"ruleId":"262","severity":1,"message":"351","line":45,"column":9,"nodeType":"264","messageId":"265","endLine":45,"endColumn":16},{"ruleId":"293","severity":1,"message":"306","line":53,"column":6,"nodeType":"295","endLine":53,"endColumn":8,"suggestions":"352"},{"ruleId":"262","severity":1,"message":"267","line":14,"column":3,"nodeType":"264","messageId":"265","endLine":14,"endColumn":19},{"ruleId":"293","severity":1,"message":"353","line":140,"column":6,"nodeType":"295","endLine":140,"endColumn":8,"suggestions":"354"},{"ruleId":"279","severity":1,"message":"292","line":293,"column":34,"nodeType":"281","messageId":"282","endLine":293,"endColumn":36},{"ruleId":"262","severity":1,"message":"266","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"308","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"283","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"284","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"309","line":9,"column":3,"nodeType":"264","messageId":"265","endLine":9,"endColumn":7},{"ruleId":"262","severity":1,"message":"285","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"310","line":11,"column":3,"nodeType":"264","messageId":"265","endLine":11,"endColumn":7},{"ruleId":"262","severity":1,"message":"355","line":12,"column":3,"nodeType":"264","messageId":"265","endLine":12,"endColumn":8},{"ruleId":"262","severity":1,"message":"286","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"356","line":14,"column":3,"nodeType":"264","messageId":"265","endLine":14,"endColumn":8},{"ruleId":"262","severity":1,"message":"287","line":15,"column":3,"nodeType":"264","messageId":"265","endLine":15,"endColumn":15},{"ruleId":"262","severity":1,"message":"345","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":12},{"ruleId":"262","severity":1,"message":"288","line":17,"column":3,"nodeType":"264","messageId":"265","endLine":17,"endColumn":13},{"ruleId":"262","severity":1,"message":"289","line":18,"column":3,"nodeType":"264","messageId":"265","endLine":18,"endColumn":10},{"ruleId":"262","severity":1,"message":"346","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":13},{"ruleId":"262","severity":1,"message":"311","line":25,"column":8,"nodeType":"264","messageId":"265","endLine":25,"endColumn":14},{"ruleId":"262","severity":1,"message":"312","line":26,"column":8,"nodeType":"264","messageId":"265","endLine":26,"endColumn":18},{"ruleId":"262","severity":1,"message":"313","line":27,"column":8,"nodeType":"264","messageId":"265","endLine":27,"endColumn":16},{"ruleId":"262","severity":1,"message":"314","line":28,"column":8,"nodeType":"264","messageId":"265","endLine":28,"endColumn":19},{"ruleId":"262","severity":1,"message":"267","line":29,"column":8,"nodeType":"264","messageId":"265","endLine":29,"endColumn":24},{"ruleId":"262","severity":1,"message":"305","line":31,"column":3,"nodeType":"264","messageId":"265","endLine":31,"endColumn":6},{"ruleId":"262","severity":1,"message":"315","line":32,"column":3,"nodeType":"264","messageId":"265","endLine":32,"endColumn":14},{"ruleId":"262","severity":1,"message":"316","line":33,"column":3,"nodeType":"264","messageId":"265","endLine":33,"endColumn":13},{"ruleId":"262","severity":1,"message":"317","line":34,"column":3,"nodeType":"264","messageId":"265","endLine":34,"endColumn":7},{"ruleId":"262","severity":1,"message":"318","line":35,"column":3,"nodeType":"264","messageId":"265","endLine":35,"endColumn":11},{"ruleId":"262","severity":1,"message":"319","line":36,"column":3,"nodeType":"264","messageId":"265","endLine":36,"endColumn":7},{"ruleId":"262","severity":1,"message":"320","line":37,"column":3,"nodeType":"264","messageId":"265","endLine":37,"endColumn":11},{"ruleId":"262","severity":1,"message":"357","line":38,"column":3,"nodeType":"264","messageId":"265","endLine":38,"endColumn":8},{"ruleId":"262","severity":1,"message":"304","line":39,"column":3,"nodeType":"264","messageId":"265","endLine":39,"endColumn":13},{"ruleId":"262","severity":1,"message":"347","line":41,"column":10,"nodeType":"264","messageId":"265","endLine":41,"endColumn":19},{"ruleId":"262","severity":1,"message":"348","line":46,"column":3,"nodeType":"264","messageId":"265","endLine":46,"endColumn":11},{"ruleId":"262","severity":1,"message":"349","line":47,"column":3,"nodeType":"264","messageId":"265","endLine":47,"endColumn":28},{"ruleId":"262","severity":1,"message":"350","line":48,"column":3,"nodeType":"264","messageId":"265","endLine":48,"endColumn":24},"no-native-reassign",["358"],"no-negated-in-lhs",["359"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'CircularProgress' is defined but never used.","'HiClipboard' is defined but never used.","'AssignmentIcon' is defined but never used.","'Router' is defined but never used.","'days' is assigned a value but never used.","'timerDeadline' is assigned a value but never used.","'setTimerDeadLine' is assigned a value but never used.","'reloadHandler' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Modal' is defined but never used.","'Spinner' is defined but never used.","'Jumbotron' is defined but never used.","'TabContainer' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'userId' is assigned a value but never used.","'cqExamsData' is assigned a value but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array.","ArrayExpression",["360"],"'Row' is defined but never used.","'Col' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.",["361"],"'useState' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'handleShowModal' is assigned a value but never used.","'createCourseModal' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"362","text":"363"},{"range":"364","text":"363"},"The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'isApiLoaded' is assigned a value but never used.","'Grid' is defined but never used.","'getRenderPropValue' is defined but never used.","'questionsCreated' is assigned a value but never used.","'ListGroup' is defined but never used.","'axios' is defined but never used.","'useParams' is defined but never used.","'DataGrid' is defined but never used.","'getNumericColumnOperators' is defined but never used.","'PreferencePanelsValue' is defined but never used.","'classes' is assigned a value but never used.",["365"],"React Hook useEffect has missing dependencies: 'id', 'index', 'seconds', and 'submitAnswers'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSeconds' needs the current value of 'index'.",["366"],"'Alert' is defined but never used.","'Table' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},[2867,2876],"\"error\"",[2934,2943],{"desc":"369","fix":"371"},{"desc":"372","fix":"373"},"Update the dependencies array to be: [id, role]",{"range":"374","text":"375"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"376","text":"377"},{"range":"378","text":"377"},"Update the dependencies array to be: [id, index, seconds, submitAnswers]",{"range":"379","text":"380"},[2941,2943],"[id, role]",[1278,1280],"[id, props.userInfo]",[1038,1040],[3609,3611],"[id, index, seconds, submitAnswers]"]