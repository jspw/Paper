<<<<<<< HEAD
[{"/home/jspw/Documents/Projects/Project 350/client/src/index.js":"1","/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js":"2","/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js":"3","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js":"4","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js":"5","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js":"6","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js":"7","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js":"8","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/Forms.js":"9"},{"size":578,"mtime":1611948253249,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611434180840,"results":"12","hashOfConfig":"11"},{"size":2140,"mtime":1611938881512,"results":"13","hashOfConfig":"11"},{"size":3992,"mtime":1611939825497,"results":"14","hashOfConfig":"11"},{"size":4176,"mtime":1611948227433,"results":"15","hashOfConfig":"11"},{"size":4142,"mtime":1611948344771,"results":"16","hashOfConfig":"11"},{"size":87,"mtime":1611935820521,"results":"17","hashOfConfig":"11"},{"size":9177,"mtime":1611948353123,"results":"18","hashOfConfig":"11"},{"size":5956,"mtime":1611866114311,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kvcbqu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},"/home/jspw/Documents/Projects/Project 350/client/src/index.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js",[],["42","43"],"/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js",["44"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"../Components/Navbar/Navbar\";\n// import  MCQ  from \"../Components/Exam/MCQs/MCQ/MCQ\";\nimport SignIn from \"../Components/Authentication/SignIn\";\nimport SignUp from \"../Components/Authentication/SignUp\";\nimport Home from \"../Components/Home/Home\";\nimport axios from \"axios\";\nimport Layout from \"../Components/Layout/Layout\";\n\nlet userdata = localStorage.getItem(\"data\");\nuserdata = JSON.parse(userdata);\n\nfunction App() {\n  const [loginStatus, setloginStatus] = useState(null);\n\n  const [universityInfo, setUniversityInfo] = useState(null);\n\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"university/all\")\n      .then((response) => {\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversityInfo(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    if (userdata) {\n      axios\n        .get(`${userdata.role}/user/${userdata.id}`)\n        .then((result) => {\n          setloginStatus(result.data.status);\n          setUserInfo(result.data.result.data);\n          console.log(result);\n        })\n        .catch((error) => console.log(error));\n    } else setloginStatus(\"Failed\");\n  }, []);\n  // console.log(isLogin)\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route\n          path=\"/\"\n          render={(props) => <Navigation loginStatus={loginStatus} />}\n        />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <Layout universityInfo={universityInfo} userInfo={userInfo} />\n          )}\n        />\n        <Switch>\n          {/* <Route exact path=\"/\" component={Home} /> */}\n          <Route path=\"/signUp\" exact component={SignUp} />\n          <Route path=\"/signIn\" exact component={SignIn} />\n        </Switch>{\" \"}\n        {/* <Home loginStatus={loginStatus} /> */}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js",["45","46"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\n\nlet navElements;\n\nexport default function Navigation(props) {\n  let history = useHistory();\n  const [showSign, setShowSign] = useState(true);\n  const navChange = () => setShowSign(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [anchor, setAnchor] = React.useState(null);\n  const isNotificationOpen = Boolean(anchor);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleNotificationMenuOpen = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setAnchor(null);\n  };\n\n  const handleSignout = () => {\n    localStorage.clear();\n    // props.login.isLogin = \"Failed\";\n    window.location.reload();\n    history.push(\"/\");\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"profile-menu\"\n      keepMounted\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      style={{ width: \"340px\" }}\n    >\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\n        Profile\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\n        Sign Out\n      </MenuItem>\n    </Menu>\n  );\n\n  const renderNotificationMenu = (\n    <Menu\n      anchorEl={anchor}\n      id=\"notification menu\"\n      open={isNotificationOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <MenuItem onClick={handleMenuClose}>Notification 1</MenuItem>\n    </Menu>\n  );\n\n  console.log(\"Login status\", props.loginStatus);\n\n  if (props.loginStatus == null) {\n    navElements = (\n      <>\n        <Spinner animation=\"grow\" />\n      </>\n    );\n  } else if (props.loginStatus == \"OK\") {\n    navElements = (\n      <>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotificationMenuOpen}\n        >\n          <Badge badgeContent={17} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          // aria-controls={menuId}\n          aria-haspopup=\"true\"\n          onClick={handleProfileMenuOpen}\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\n        {renderNotificationMenu}\n        {renderProfileMenu}\n      </>\n    );\n  } else {\n    navElements = (\n      <>\n        <Link to=\"signUp\" onClick={navChange}>\n          <MenuItem> Sign Up</MenuItem>\n        </Link>\n        <Link to=\"signIn\" onClick={navChange}>\n          <MenuItem>Sign In</MenuItem>\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <Navbar bg=\"light\">\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\n        Name\n      </Navbar.Brand>\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\n    </Navbar>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js",["47","48"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js",["49","50","51"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/Forms.js",["52"],"import React, { useState, useEffect } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport \"./SignIn.css\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst TextForm = (props) => (\n  <FormControl\n    className={props.classes.textField}\n    variant=\"outlined\"\n    fullWidth\n    /* error={props.error} */ required={props.required}\n  >\n    <InputLabel>{props.label}</InputLabel>\n    <OutlinedInput\n      id={props.id}\n      onChange={props.handleChange(props.id)}\n      value={props.values}\n      labelWidth={props.labelWidth}\n    />\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      className={props.classes.textField}\n      variant=\"outlined\"\n      fullWidth\n      required\n    >\n      <InputLabel>{props.label}</InputLabel>\n      <OutlinedInput\n        id={props.id}\n        type={showPassword ? \"text\" : \"password\"}\n        value={props.values}\n        onChange={props.handleChange(props.id)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label={\"password\"}\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={props.labelWidth}\n      />\n    </FormControl>\n  );\n};\n\nconst Forms = (props) => {\n  const type = props.type;\n\n  const [universities, setUniversities] = useState(null);\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\n\n  // console.log(props);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: apiDomain + \"university/all\",\n    })\n      .then((response) => {\n        // console.log(\"All Universites..\");\n\n        // console.log(response.data);\n\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversities(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsApiLoaded(false);\n      });\n  }, []);\n\n  const SelectForm = (props) => {\n    // console.log(\"COMPONENT : select form\");\n    let items = [];\n    const id = props.id;\n\n    if (universities) {\n      // console.log(\"Univbersity\", universities);\n\n      // for (let i = 0; i < universities.length; i++) {\n      //   console.log(\"Loop\");\n      //   console.log(universities[i]);\n      // }\n\n      if (id === \"role\")\n        items = [\n          {\n            id: \"Teacher\",\n            value: \"Teacher\",\n          },\n          {\n            id: \"Student\",\n            value: \"Student\",\n          },\n        ];\n      else if (id === \"university\") {\n        items = [];\n        universities.forEach((element) => {\n          items.push({\n            id: element._id,\n            value: element.shortform,\n          });\n        });\n      } else if (id === \"department\") {\n        items = [];\n\n        if (props.selectedUniversity) {\n          // console.log(\"Selected University \", props.selectedUniversity);\n          universities.forEach((element) => {\n            if (element._id === props.selectedUniversity) {\n              element.departments.forEach((dept) => {\n                // console.log(dept);\n                items.push({\n                  id: dept._id,\n                  value: dept.shortform,\n                });\n              });\n            }\n          });\n        }\n      } else if (id === \"session\") {\n        items = [];\n        items = [\n          {\n            id: \"2016-2017\",\n            value: \"2016-2017\",\n          },\n          {\n            id: \"2017-2018\",\n            value: \"2017-2018\",\n          },\n          {\n            id: \"2018-2019\",\n            value: \"2018-2019\",\n          },\n          {\n            id: \"2020-2021\",\n            value: \"2020-2021\",\n          },\n        ];\n      } else if (id === \"designation\") {\n        items = [];\n        items = [\n          {\n            id: \"Department Head\",\n            value: \"Department Head\",\n          },\n          {\n            id: \"Professor\",\n            value: \"Professor\",\n          },\n          {\n            id: \"Assistant Professor\",\n            value: \"Assistant Professor\",\n          },\n          {\n            id: \"Lecturer\",\n            value: \"Lecturer\",\n          },\n        ];\n      }\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl\n        variant=\"outlined\"\n        className={props.classes.textField}\n        fullWidth\n        required\n      >\n        <InputLabel>{props.label}</InputLabel>\n        <Select\n          id={id}\n          value={props.values}\n          onChange={props.handleChange(id)}\n          label={props.label}\n        >\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  if (type === \"text\") {\n    return <TextForm {...props} />;\n  } else if (type === \"password\") {\n    return <PasswordForm {...props} />;\n  } else {\n    return <SelectForm {...props} />;\n  }\n};\n\nexport default Forms;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":69,"column":43,"nodeType":"63","endLine":69,"endColumn":66},{"ruleId":"64","severity":1,"message":"65","line":103,"column":32,"nodeType":"66","messageId":"67","endLine":103,"endColumn":34},{"ruleId":"57","severity":1,"message":"68","line":10,"column":3,"nodeType":"59","messageId":"60","endLine":10,"endColumn":10},{"ruleId":"57","severity":1,"message":"69","line":19,"column":8,"nodeType":"59","messageId":"60","endLine":19,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":26,"column":3,"nodeType":"72","messageId":"67","endLine":26,"endColumn":7},{"ruleId":"73","severity":1,"message":"74","line":120,"column":30,"nodeType":"75","messageId":"76","endLine":120,"endColumn":52,"fix":"77"},{"ruleId":"73","severity":1,"message":"74","line":122,"column":30,"nodeType":"75","messageId":"76","endLine":122,"endColumn":43,"fix":"78"},{"ruleId":"57","severity":1,"message":"79","line":78,"column":10,"nodeType":"59","messageId":"60","endLine":78,"endColumn":21},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Spinner' is defined but never used.","'CircularProgress' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"82","text":"83"},{"range":"84","text":"83"},"'isApiLoaded' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2867,2876],"\"error\"",[2934,2943]]
=======
[{"E:\\Project 350\\WillChange\\client\\src\\index.js":"1","E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js":"2","E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js":"3","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js":"4","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js":"5","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js":"6","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\Forms.js":"7","E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js":"8","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js":"9"},{"size":604,"mtime":1611851509922,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1611586567836,"results":"12","hashOfConfig":"11"},{"size":2091,"mtime":1611951800355,"results":"13","hashOfConfig":"11"},{"size":4296,"mtime":1611918736868,"results":"14","hashOfConfig":"11"},{"size":9501,"mtime":1611918828693,"results":"15","hashOfConfig":"11"},{"size":4143,"mtime":1611950494552,"results":"16","hashOfConfig":"11"},{"size":6193,"mtime":1611918736660,"results":"17","hashOfConfig":"11"},{"size":3218,"mtime":1611949199407,"results":"18","hashOfConfig":"11"},{"size":3562,"mtime":1611950494537,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vw26ma",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"E:\\Project 350\\WillChange\\client\\src\\index.js",[],["44","45"],"E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js",[],"E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js",["46","47","48"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js",["49","50","51"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Forms from \"./Forms\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"./SignIn.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    // width: \"15vw\",\r\n    // margin: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  shadows: [\"none\"],\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    role: \"\",\r\n    designation: \"\",\r\n    university: \"\",\r\n    department: \"\",\r\n    session: \"\",\r\n    regNo: \"\",\r\n    result: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: apiDomain + \"university/all\",\r\n  //   })\r\n  //     .then((response) => {\r\n  //       // console.log(\"All Universites..\");\r\n\r\n  //       // console.log(response.data);\r\n\r\n  //       const data = response.data;\r\n\r\n  //       if (data.status === \"OK\") {\r\n  //         setUniversities(data.result.data);\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  // console.log(\"API CALL DATA\", universities);\r\n  let history = useHistory();\r\n\r\n  const obj = {\r\n    role: values.role,\r\n    username: values.username,\r\n    email: values.email,\r\n    password: values.password,\r\n    repassword: values.confirmPassword,\r\n    firstName: values.firstName,\r\n    lastName: values.lastName,\r\n    department: values.department,\r\n    registrationNo: parseInt(values.regNo, 10),\r\n    session: values.session,\r\n    varsity: values.university,\r\n    designation: values.designation,\r\n  };\r\n\r\n  const body = JSON.stringify(obj);\r\n\r\n  const handleSignUp = (e) => {\r\n    // console.log('hello')\r\n    fetchData();\r\n    e.preventDefault();\r\n  };\r\n  const fetchData = async () => {\r\n    let endpoint;\r\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\r\n    else endpoint = \"auth/create-student\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: body,\r\n    };\r\n\r\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(\"API data\",data);\r\n\r\n    if (data.status === \"FAILED\")\r\n      setValues({ ...values, [\"error\"]: data.result });\r\n    else {\r\n      setValues({ ...values, [\"error\"]: \"\" });\r\n      const userdata = {\r\n        token: data.result.jwt.token,\r\n        role: data.result.data.role.toLowerCase(),\r\n        id: data.result.data.id,\r\n      };\r\n\r\n      console.log(userdata);\r\n\r\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    }\r\n    \r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  // if (universities)\r\n  return (\r\n    <Container>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item className={classes.textField}>\r\n            <h2>Hello There!!</h2>\r\n            <p>Lets Sign Up to continue</p>\r\n          </Grid>\r\n        </Grid>\r\n        {values.error !== \"\" ? (\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.root}\r\n          >\r\n            <Alert elevation={0} severity=\"error\">\r\n              {values.error}\r\n            </Alert>\r\n          </Grid>\r\n        ) : null}\r\n        <form onSubmit={handleSignUp}>\r\n          <Grid item xs={12}>\r\n            <Forms\r\n              id=\"role\"\r\n              type=\"select\"\r\n              label=\"Role\"\r\n              classes={classes}\r\n              values={values.role}\r\n              handleChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"university\"\r\n                type=\"select\"\r\n                label=\"University\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.university}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                selectedUniversity={values.university}\r\n                id=\"department\"\r\n                type=\"select\"\r\n                label=\"Department\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.department}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {values.role !== \"Teacher\" ? (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"session\"\r\n                  type=\"select\"\r\n                  label=\"Session\"\r\n                  labelWidth={117}\r\n                  classes={classes}\r\n                  values={values.session}\r\n                  handleChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"regNo\"\r\n                  type=\"text\"\r\n                  label=\"Registration No\"\r\n                  labelWidth={120}\r\n                  classes={classes}\r\n                  values={values.regNo}\r\n                  handleChange={handleChange}\r\n                  required={true}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Forms\r\n                id=\"designation\"\r\n                type=\"select\"\r\n                label=\"Designation\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.designation}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"firstName\"\r\n                type=\"text\"\r\n                label=\"First Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.firstName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"lastName\"\r\n                type=\"text\"\r\n                label=\"Last Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.lastName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"username\"\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                labelWidth={84}\r\n                classes={classes}\r\n                values={values.username}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"email\"\r\n                type=\"text\"\r\n                label=\"Email Address\"\r\n                labelWidth={110}\r\n                classes={classes}\r\n                values={values.email}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                labelWidth={80}\r\n                classes={classes}\r\n                values={values.password}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                labelWidth={140}\r\n                classes={classes}\r\n                values={values.confirmPassword}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.textField}>\r\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\r\n              Sign Up\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n  // else return <h1>Loading</h1>;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js",["52"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nlet navElements;\r\n\r\nexport default function Navigation(props) {\r\n  let history = useHistory();\r\n  const [showSign, setShowSign] = useState(true);\r\n  const navChange = () => setShowSign(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const [anchor, setAnchor] = React.useState(null);\r\n  const isNotificationOpen = Boolean(anchor);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleNotificationMenuOpen = (event) => {\r\n    setAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setAnchor(null);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    localStorage.clear();\r\n    // props.login.isLogin = \"Failed\";\r\n    window.location.reload();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderProfileMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      id=\"profile-menu\"\r\n      keepMounted\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n      style={{ width: \"340px\" }}\r\n    >\r\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\r\n        Profile\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\r\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\r\n        Sign Out\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const renderNotificationMenu = (\r\n    <Menu\r\n      anchorEl={anchor}\r\n      id=\"notification menu\"\r\n      open={isNotificationOpen}\r\n      onClose={handleMenuClose}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Notification 1</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  console.log(\"Login status\", props.loginStatus);\r\n\r\n  if (props.loginStatus == null) {\r\n    navElements = (\r\n      <>\r\n        <Spinner animation=\"grow\" />\r\n      </>\r\n    );\r\n  } else if (props.loginStatus == \"OK\") {\r\n    navElements = (\r\n      <>\r\n        <IconButton\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n          onClick={handleNotificationMenuOpen}\r\n        >\r\n          <Badge badgeContent={17} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          // aria-controls={menuId}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleProfileMenuOpen}\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\r\n        {renderNotificationMenu}\r\n        {renderProfileMenu}\r\n      </>\r\n    );\r\n  } else {\r\n    navElements = (\r\n      <>\r\n        <Link to=\"signUp\" onClick={navChange}>\r\n          <MenuItem> Sign Up</MenuItem>\r\n        </Link>\r\n        <Link to=\"signIn\" onClick={navChange}>\r\n          <MenuItem>Sign In</MenuItem>\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"light\">\r\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\r\n        Name\r\n      </Navbar.Brand>\r\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\r\n    </Navbar>\r\n  );\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\Forms.js",["53"],"import React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport axios from \"axios\";\r\nimport \"./SignIn.css\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst TextForm = (props) => (\r\n  <FormControl\r\n    className={props.classes.textField}\r\n    variant=\"outlined\"\r\n    fullWidth\r\n    /* error={props.error} */ required={props.required}\r\n  >\r\n    <InputLabel>{props.label}</InputLabel>\r\n    <OutlinedInput\r\n      id={props.id}\r\n      onChange={props.handleChange(props.id)}\r\n      value={props.values}\r\n      labelWidth={props.labelWidth}\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nconst PasswordForm = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <FormControl\r\n      className={props.classes.textField}\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      required\r\n    >\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <OutlinedInput\r\n        id={props.id}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={props.values}\r\n        onChange={props.handleChange(props.id)}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label={\"password\"}\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n              edge=\"end\"\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={props.labelWidth}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Forms = (props) => {\r\n  const type = props.type;\r\n\r\n  const [universities, setUniversities] = useState(null);\r\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: apiDomain + \"university/all\",\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"All Universites..\");\r\n\r\n        // console.log(response.data);\r\n\r\n        const data = response.data;\r\n\r\n        if (data.status === \"OK\") {\r\n          setUniversities(data.result.data.universities);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsApiLoaded(false);\r\n      });\r\n  }, []);\r\n\r\n  const SelectForm = (props) => {\r\n    // console.log(\"COMPONENT : select form\");\r\n    let items = [];\r\n    const id = props.id;\r\n\r\n    if (universities) {\r\n      // console.log(\"Univbersity\", universities);\r\n\r\n      // for (let i = 0; i < universities.length; i++) {\r\n      //   console.log(\"Loop\");\r\n      //   console.log(universities[i]);\r\n      // }\r\n\r\n      if (id === \"role\")\r\n        items = [\r\n          {\r\n            id: \"Teacher\",\r\n            value: \"Teacher\",\r\n          },\r\n          {\r\n            id: \"Student\",\r\n            value: \"Student\",\r\n          },\r\n        ];\r\n      else if (id === \"university\") {\r\n        items = [];\r\n        universities.forEach((element) => {\r\n          items.push({\r\n            id: element._id,\r\n            value: element.shortform,\r\n          });\r\n        });\r\n      } else if (id === \"department\") {\r\n        items = [];\r\n\r\n        if (props.selectedUniversity) {\r\n          // console.log(\"Selected University \", props.selectedUniversity);\r\n          universities.forEach((element) => {\r\n            if (element._id === props.selectedUniversity) {\r\n              element.departments.forEach((dept) => {\r\n                // console.log(dept);\r\n                items.push({\r\n                  id: dept._id,\r\n                  value: dept.shortform,\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else if (id === \"session\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"2016-2017\",\r\n            value: \"2016-2017\",\r\n          },\r\n          {\r\n            id: \"2017-2018\",\r\n            value: \"2017-2018\",\r\n          },\r\n          {\r\n            id: \"2018-2019\",\r\n            value: \"2018-2019\",\r\n          },\r\n          {\r\n            id: \"2020-2021\",\r\n            value: \"2020-2021\",\r\n          },\r\n        ];\r\n      } else if (id === \"designation\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"Department Head\",\r\n            value: \"Department Head\",\r\n          },\r\n          {\r\n            id: \"Professor\",\r\n            value: \"Professor\",\r\n          },\r\n          {\r\n            id: \"Assistant Professor\",\r\n            value: \"Assistant Professor\",\r\n          },\r\n          {\r\n            id: \"Lecturer\",\r\n            value: \"Lecturer\",\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl\r\n        variant=\"outlined\"\r\n        className={props.classes.textField}\r\n        fullWidth\r\n        required\r\n      >\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select\r\n          id={id}\r\n          value={props.values}\r\n          onChange={props.handleChange(id)}\r\n          label={props.label}\r\n        >\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  if (type === \"text\") {\r\n    return <TextForm {...props} />;\r\n  } else if (type === \"password\") {\r\n    return <PasswordForm {...props} />;\r\n  } else {\r\n    return <SelectForm {...props} />;\r\n  }\r\n};\r\n\r\nexport default Forms;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js",["54"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport './Home.css';\r\nexport default function Home() {\r\n  const [timerDays, setTimerDays] = useState(\"00\");\r\n  const [timerHours, setTimerHours] = useState(\"00\");\r\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\r\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n  let interval = useRef();\r\n\r\n  const timer = () => {\r\n    const seconds = 1000;\r\n    const minutes = seconds * 60;\r\n    const hours = minutes * 60;\r\n    const days = hours * 24;\r\n    const deadline = new Date(\"January 31, 2021 00:00:00\").getTime();\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const timeLeft = deadline - now;\r\n      if (timeLeft < 0) {\r\n        clearInterval(interval.current);\r\n      } else {\r\n        setTimerDays(Math.floor(timeLeft / days));\r\n        setTimerHours(Math.floor((timeLeft % days) / hours));\r\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\r\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\r\n      }\r\n    }, 1000);\r\n  };\r\n  useEffect(() => {\r\n    timer();\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n  // console.log(values.hoursLeft)\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm>\r\n          <h5>My Courses</h5>\r\n          <hr />\r\n          <div>\r\n              <Grid container alignItems='flex-start'>\r\n                  <Grid item><SubjectIcon /></Grid>\r\n                  <Grid item><p>Course Name</p></Grid>\r\n              </Grid>\r\n              <Grid container alignItems='flex-start'>\r\n                  <Grid item><SubjectIcon /></Grid>\r\n                  <Grid item><p>Course Name</p></Grid>\r\n              </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={5}>\r\n          <h5>Upcoming Exams</h5>\r\n          <hr />\r\n          <h6>Exam Name</h6>\r\n          <div className=\"timer-container\">\r\n            <ul>\r\n              <li>\r\n                <span id=\"days\">{timerDays}</span> Days\r\n              </li>\r\n              <li>\r\n                <span id=\"hours\">{timerHours}</span> Hours\r\n              </li>\r\n              <li>\r\n                <span id=\"minutes\">{timerMinutes}</span> Minutes\r\n              </li>\r\n              <li>\r\n                <span id=\"seconds\">{timerSeconds}</span> Seconds\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm>\r\n          <h5>Previous Exams</h5>\r\n          <hr />\r\n          <div>\r\n              <Grid container alignItems='flex-start'>\r\n                  <Grid item><AssignmentIcon /></Grid>\r\n                  <Grid item><p>Exam Name</p></Grid>\r\n              </Grid>\r\n              <Grid container alignItems='flex-start'>\r\n                  <Grid item><AssignmentIcon /></Grid>\r\n                  <Grid item><p>Exam Name</p></Grid>\r\n              </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js",["55","56"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Layout = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  //   console.log(props.userInfo.userInfo.varsity);\r\n\r\n  const SelectForm = () => {\r\n    // console.log(\"COMPONENT : select form\");\r\n    let items = [];\r\n    console.log(props.universityInfo);\r\n\r\n    if (props.universityInfo) {\r\n      props.universityInfo.forEach((element) => {\r\n        if (element.shortform === props.userInfo.varsity) {\r\n          element.departments.forEach((dept) => {\r\n            // console.log(dept);\r\n            items.push({\r\n              id: dept._id,\r\n              value: dept.shortform,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl variant=\"outlined\" fullWidth required>\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select value={props.values} label={props.label}>\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  const createCourseModal = (\r\n    <Modal\r\n      show={showModal}\r\n      onHide={handleCloseModal}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Create Course</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control placeholder=\"Course Name\" />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control placeholder=\"Code\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control\r\n                readOnly\r\n                defaultValue={\r\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\r\n                }\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <SelectForm />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\">Understood</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n  if (props.userInfo)\r\n    return (\r\n      <Container bg=\"light\" fluid>\r\n        {createCourseModal}\r\n        <Row>\r\n          <Col md={3}>Courses</Col>\r\n          <Col md={6} backgroundColor=\"success\">\r\n            All Events\r\n            <Button className=\"pull-right light\" onClick={handleShowModal}>\r\n              Create Course\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  else {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1>Please Login First</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Layout;\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":18,"column":10,"nodeType":"63","messageId":"64","endLine":18,"endColumn":24},{"ruleId":"61","severity":1,"message":"66","line":20,"column":10,"nodeType":"63","messageId":"64","endLine":20,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":26,"column":3,"nodeType":"69","messageId":"70","endLine":26,"endColumn":7},{"ruleId":"71","severity":1,"message":"72","line":120,"column":30,"nodeType":"73","messageId":"74","endLine":120,"endColumn":52,"fix":"75"},{"ruleId":"71","severity":1,"message":"72","line":122,"column":30,"nodeType":"73","messageId":"74","endLine":122,"endColumn":43,"fix":"76"},{"ruleId":"77","severity":1,"message":"78","line":68,"column":43,"nodeType":"79","endLine":68,"endColumn":66},{"ruleId":"61","severity":1,"message":"80","line":78,"column":10,"nodeType":"63","messageId":"64","endLine":78,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":37,"column":30,"nodeType":"63","endLine":37,"endColumn":37},{"ruleId":"61","severity":1,"message":"83","line":10,"column":3,"nodeType":"63","messageId":"64","endLine":10,"endColumn":10},{"ruleId":"61","severity":1,"message":"84","line":19,"column":8,"nodeType":"63","messageId":"64","endLine":19,"endColumn":24},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'universityInfo' is assigned a value but never used.","'userInfo' is assigned a value but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"87","text":"88"},{"range":"89","text":"88"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isApiLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'Spinner' is defined but never used.","'CircularProgress' is defined but never used.","no-global-assign","no-unsafe-negation",[2986,2995],"\"error\"",[3055,3064]]
>>>>>>> e7fb91a1fd31bd75ed28f69c2683db515efbfce6
