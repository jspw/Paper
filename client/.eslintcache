[{"/home/jspw/Documents/Projects/Project 350/client/src/index.js":"1","/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js":"2","/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js":"3","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js":"4","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js":"5","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js":"6","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js":"7","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js":"8","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/Forms.js":"9"},{"size":578,"mtime":1611948253249,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611434180840,"results":"12","hashOfConfig":"11"},{"size":2140,"mtime":1611938881512,"results":"13","hashOfConfig":"11"},{"size":3992,"mtime":1611939825497,"results":"14","hashOfConfig":"11"},{"size":4176,"mtime":1611948227433,"results":"15","hashOfConfig":"11"},{"size":4142,"mtime":1611948344771,"results":"16","hashOfConfig":"11"},{"size":87,"mtime":1611935820521,"results":"17","hashOfConfig":"11"},{"size":9177,"mtime":1611948353123,"results":"18","hashOfConfig":"11"},{"size":5956,"mtime":1611866114311,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kvcbqu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},"/home/jspw/Documents/Projects/Project 350/client/src/index.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js",[],["42","43"],"/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js",["44"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"../Components/Navbar/Navbar\";\n// import  MCQ  from \"../Components/Exam/MCQs/MCQ/MCQ\";\nimport SignIn from \"../Components/Authentication/SignIn\";\nimport SignUp from \"../Components/Authentication/SignUp\";\nimport Home from \"../Components/Home/Home\";\nimport axios from \"axios\";\nimport Layout from \"../Components/Layout/Layout\";\n\nlet userdata = localStorage.getItem(\"data\");\nuserdata = JSON.parse(userdata);\n\nfunction App() {\n  const [loginStatus, setloginStatus] = useState(null);\n\n  const [universityInfo, setUniversityInfo] = useState(null);\n\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"university/all\")\n      .then((response) => {\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversityInfo(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    if (userdata) {\n      axios\n        .get(`${userdata.role}/user/${userdata.id}`)\n        .then((result) => {\n          setloginStatus(result.data.status);\n          setUserInfo(result.data.result.data);\n          console.log(result);\n        })\n        .catch((error) => console.log(error));\n    } else setloginStatus(\"Failed\");\n  }, []);\n  // console.log(isLogin)\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route\n          path=\"/\"\n          render={(props) => <Navigation loginStatus={loginStatus} />}\n        />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <Layout universityInfo={universityInfo} userInfo={userInfo} />\n          )}\n        />\n        <Switch>\n          {/* <Route exact path=\"/\" component={Home} /> */}\n          <Route path=\"/signUp\" exact component={SignUp} />\n          <Route path=\"/signIn\" exact component={SignIn} />\n        </Switch>{\" \"}\n        {/* <Home loginStatus={loginStatus} /> */}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js",["45","46"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\n\nlet navElements;\n\nexport default function Navigation(props) {\n  let history = useHistory();\n  const [showSign, setShowSign] = useState(true);\n  const navChange = () => setShowSign(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [anchor, setAnchor] = React.useState(null);\n  const isNotificationOpen = Boolean(anchor);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleNotificationMenuOpen = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setAnchor(null);\n  };\n\n  const handleSignout = () => {\n    localStorage.clear();\n    // props.login.isLogin = \"Failed\";\n    window.location.reload();\n    history.push(\"/\");\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"profile-menu\"\n      keepMounted\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      style={{ width: \"340px\" }}\n    >\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\n        Profile\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\n        Sign Out\n      </MenuItem>\n    </Menu>\n  );\n\n  const renderNotificationMenu = (\n    <Menu\n      anchorEl={anchor}\n      id=\"notification menu\"\n      open={isNotificationOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <MenuItem onClick={handleMenuClose}>Notification 1</MenuItem>\n    </Menu>\n  );\n\n  console.log(\"Login status\", props.loginStatus);\n\n  if (props.loginStatus == null) {\n    navElements = (\n      <>\n        <Spinner animation=\"grow\" />\n      </>\n    );\n  } else if (props.loginStatus == \"OK\") {\n    navElements = (\n      <>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotificationMenuOpen}\n        >\n          <Badge badgeContent={17} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          // aria-controls={menuId}\n          aria-haspopup=\"true\"\n          onClick={handleProfileMenuOpen}\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\n        {renderNotificationMenu}\n        {renderProfileMenu}\n      </>\n    );\n  } else {\n    navElements = (\n      <>\n        <Link to=\"signUp\" onClick={navChange}>\n          <MenuItem> Sign Up</MenuItem>\n        </Link>\n        <Link to=\"signIn\" onClick={navChange}>\n          <MenuItem>Sign In</MenuItem>\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <Navbar bg=\"light\">\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\n        Name\n      </Navbar.Brand>\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\n    </Navbar>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js",["47","48"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js",["49","50","51"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/Forms.js",["52"],"import React, { useState, useEffect } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport \"./SignIn.css\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst TextForm = (props) => (\n  <FormControl\n    className={props.classes.textField}\n    variant=\"outlined\"\n    fullWidth\n    /* error={props.error} */ required={props.required}\n  >\n    <InputLabel>{props.label}</InputLabel>\n    <OutlinedInput\n      id={props.id}\n      onChange={props.handleChange(props.id)}\n      value={props.values}\n      labelWidth={props.labelWidth}\n    />\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      className={props.classes.textField}\n      variant=\"outlined\"\n      fullWidth\n      required\n    >\n      <InputLabel>{props.label}</InputLabel>\n      <OutlinedInput\n        id={props.id}\n        type={showPassword ? \"text\" : \"password\"}\n        value={props.values}\n        onChange={props.handleChange(props.id)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label={\"password\"}\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={props.labelWidth}\n      />\n    </FormControl>\n  );\n};\n\nconst Forms = (props) => {\n  const type = props.type;\n\n  const [universities, setUniversities] = useState(null);\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\n\n  // console.log(props);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: apiDomain + \"university/all\",\n    })\n      .then((response) => {\n        // console.log(\"All Universites..\");\n\n        // console.log(response.data);\n\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversities(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsApiLoaded(false);\n      });\n  }, []);\n\n  const SelectForm = (props) => {\n    // console.log(\"COMPONENT : select form\");\n    let items = [];\n    const id = props.id;\n\n    if (universities) {\n      // console.log(\"Univbersity\", universities);\n\n      // for (let i = 0; i < universities.length; i++) {\n      //   console.log(\"Loop\");\n      //   console.log(universities[i]);\n      // }\n\n      if (id === \"role\")\n        items = [\n          {\n            id: \"Teacher\",\n            value: \"Teacher\",\n          },\n          {\n            id: \"Student\",\n            value: \"Student\",\n          },\n        ];\n      else if (id === \"university\") {\n        items = [];\n        universities.forEach((element) => {\n          items.push({\n            id: element._id,\n            value: element.shortform,\n          });\n        });\n      } else if (id === \"department\") {\n        items = [];\n\n        if (props.selectedUniversity) {\n          // console.log(\"Selected University \", props.selectedUniversity);\n          universities.forEach((element) => {\n            if (element._id === props.selectedUniversity) {\n              element.departments.forEach((dept) => {\n                // console.log(dept);\n                items.push({\n                  id: dept._id,\n                  value: dept.shortform,\n                });\n              });\n            }\n          });\n        }\n      } else if (id === \"session\") {\n        items = [];\n        items = [\n          {\n            id: \"2016-2017\",\n            value: \"2016-2017\",\n          },\n          {\n            id: \"2017-2018\",\n            value: \"2017-2018\",\n          },\n          {\n            id: \"2018-2019\",\n            value: \"2018-2019\",\n          },\n          {\n            id: \"2020-2021\",\n            value: \"2020-2021\",\n          },\n        ];\n      } else if (id === \"designation\") {\n        items = [];\n        items = [\n          {\n            id: \"Department Head\",\n            value: \"Department Head\",\n          },\n          {\n            id: \"Professor\",\n            value: \"Professor\",\n          },\n          {\n            id: \"Assistant Professor\",\n            value: \"Assistant Professor\",\n          },\n          {\n            id: \"Lecturer\",\n            value: \"Lecturer\",\n          },\n        ];\n      }\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl\n        variant=\"outlined\"\n        className={props.classes.textField}\n        fullWidth\n        required\n      >\n        <InputLabel>{props.label}</InputLabel>\n        <Select\n          id={id}\n          value={props.values}\n          onChange={props.handleChange(id)}\n          label={props.label}\n        >\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  if (type === \"text\") {\n    return <TextForm {...props} />;\n  } else if (type === \"password\") {\n    return <PasswordForm {...props} />;\n  } else {\n    return <SelectForm {...props} />;\n  }\n};\n\nexport default Forms;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":69,"column":43,"nodeType":"63","endLine":69,"endColumn":66},{"ruleId":"64","severity":1,"message":"65","line":103,"column":32,"nodeType":"66","messageId":"67","endLine":103,"endColumn":34},{"ruleId":"57","severity":1,"message":"68","line":10,"column":3,"nodeType":"59","messageId":"60","endLine":10,"endColumn":10},{"ruleId":"57","severity":1,"message":"69","line":19,"column":8,"nodeType":"59","messageId":"60","endLine":19,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":26,"column":3,"nodeType":"72","messageId":"67","endLine":26,"endColumn":7},{"ruleId":"73","severity":1,"message":"74","line":120,"column":30,"nodeType":"75","messageId":"76","endLine":120,"endColumn":52,"fix":"77"},{"ruleId":"73","severity":1,"message":"74","line":122,"column":30,"nodeType":"75","messageId":"76","endLine":122,"endColumn":43,"fix":"78"},{"ruleId":"57","severity":1,"message":"79","line":78,"column":10,"nodeType":"59","messageId":"60","endLine":78,"endColumn":21},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Spinner' is defined but never used.","'CircularProgress' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"82","text":"83"},{"range":"84","text":"83"},"'isApiLoaded' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2867,2876],"\"error\"",[2934,2943]]