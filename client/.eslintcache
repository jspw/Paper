[{"E:\\Project 350\\WillChange\\client\\src\\index.js":"1","E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js":"2","E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js":"3","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js":"4","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js":"5","E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js":"6","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js":"7","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js":"8","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js":"9","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js":"10","E:\\Project 350\\WillChange\\client\\src\\Components\\UpcomingExam\\UpcomingExam.js":"11","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\PreviousExam.js":"12","E:\\Project 350\\WillChange\\client\\src\\Components\\Timer\\Timer.js":"13","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Forms.js":"14","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\CreateExam.js":"15","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\Question.js":"16"},{"size":604,"mtime":1611851509922,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1611586567836,"results":"19","hashOfConfig":"18"},{"size":3450,"mtime":1612725153121,"results":"20","hashOfConfig":"18"},{"size":9510,"mtime":1612632223425,"results":"21","hashOfConfig":"18"},{"size":4305,"mtime":1612648460035,"results":"22","hashOfConfig":"18"},{"size":5096,"mtime":1612710674099,"results":"23","hashOfConfig":"18"},{"size":4457,"mtime":1612272425155,"results":"24","hashOfConfig":"18"},{"size":1436,"mtime":1612725356189,"results":"25","hashOfConfig":"18"},{"size":4180,"mtime":1612436439788,"results":"26","hashOfConfig":"18"},{"size":4156,"mtime":1612725203544,"results":"27","hashOfConfig":"18"},{"size":4183,"mtime":1612710674104,"results":"28","hashOfConfig":"18"},{"size":9184,"mtime":1612710674101,"results":"29","hashOfConfig":"18"},{"size":1686,"mtime":1612627248471,"results":"30","hashOfConfig":"18"},{"size":7029,"mtime":1612723876313,"results":"31","hashOfConfig":"18"},{"size":1946,"mtime":1612724703993,"results":"32","hashOfConfig":"18"},{"size":11091,"mtime":1612728726585,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1vw26ma",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Project 350\\WillChange\\client\\src\\index.js",[],["75","76"],"E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js",[],"E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js",["77","78","79"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Forms from \"../Generic/Forms\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"./SignIn.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    // width: \"15vw\",\r\n    // margin: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  shadows: [\"none\"],\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    role: \"\",\r\n    designation: \"\",\r\n    university: \"\",\r\n    department: \"\",\r\n    session: \"\",\r\n    regNo: \"\",\r\n    result: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: apiDomain + \"university/all\",\r\n  //   })\r\n  //     .then((response) => {\r\n  //       // console.log(\"All Universites..\");\r\n\r\n  //       // console.log(response.data);\r\n\r\n  //       const data = response.data;\r\n\r\n  //       if (data.status === \"OK\") {\r\n  //         setUniversities(data.result.data);\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  // console.log(\"API CALL DATA\", universities);\r\n  let history = useHistory();\r\n\r\n  const obj = {\r\n    role: values.role,\r\n    username: values.username,\r\n    email: values.email,\r\n    password: values.password,\r\n    repassword: values.confirmPassword,\r\n    firstName: values.firstName,\r\n    lastName: values.lastName,\r\n    department: values.department,\r\n    registrationNo: parseInt(values.regNo, 10),\r\n    session: values.session,\r\n    varsity: values.university,\r\n    designation: values.designation,\r\n  };\r\n\r\n  const body = JSON.stringify(obj);\r\n\r\n  const handleSignUp = (e) => {\r\n    // console.log('hello')\r\n    fetchData();\r\n    e.preventDefault();\r\n  };\r\n  const fetchData = async () => {\r\n    let endpoint;\r\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\r\n    else endpoint = \"auth/create-student\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: body,\r\n    };\r\n\r\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(\"API data\",data);\r\n\r\n    if (data.status === \"FAILED\")\r\n      setValues({ ...values, [\"error\"]: data.result });\r\n    else {\r\n      setValues({ ...values, [\"error\"]: \"\" });\r\n      const userdata = {\r\n        token: data.result.jwt.token,\r\n        role: data.result.data.role.toLowerCase(),\r\n        id: data.result.data.id,\r\n      };\r\n\r\n      console.log(userdata);\r\n\r\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    }\r\n    \r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  // if (universities)\r\n  return (\r\n    <Container>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item className={classes.textField}>\r\n            <h2>Hello There!!</h2>\r\n            <p>Lets Sign Up to continue</p>\r\n          </Grid>\r\n        </Grid>\r\n        {values.error !== \"\" ? (\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.root}\r\n          >\r\n            <Alert elevation={0} severity=\"error\">\r\n              {values.error}\r\n            </Alert>\r\n          </Grid>\r\n        ) : null}\r\n        <form onSubmit={handleSignUp}>\r\n          <Grid item xs={12}>\r\n            <Forms\r\n              id=\"role\"\r\n              type=\"select\"\r\n              label=\"Role\"\r\n              classes={classes}\r\n              values={values.role}\r\n              handleChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"university\"\r\n                type=\"select\"\r\n                label=\"University\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.university}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                selectedUniversity={values.university}\r\n                id=\"department\"\r\n                type=\"select\"\r\n                label=\"Department\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.department}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {values.role !== \"Teacher\" ? (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"session\"\r\n                  type=\"select\"\r\n                  label=\"Session\"\r\n                  labelWidth={117}\r\n                  classes={classes}\r\n                  values={values.session}\r\n                  handleChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"regNo\"\r\n                  type=\"text\"\r\n                  label=\"Registration No\"\r\n                  labelWidth={120}\r\n                  classes={classes}\r\n                  values={values.regNo}\r\n                  handleChange={handleChange}\r\n                  required={true}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Forms\r\n                id=\"designation\"\r\n                type=\"select\"\r\n                label=\"Designation\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.designation}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"firstName\"\r\n                type=\"text\"\r\n                label=\"First Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.firstName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"lastName\"\r\n                type=\"text\"\r\n                label=\"Last Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.lastName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"username\"\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                labelWidth={84}\r\n                classes={classes}\r\n                values={values.username}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"email\"\r\n                type=\"text\"\r\n                label=\"Email Address\"\r\n                labelWidth={110}\r\n                classes={classes}\r\n                values={values.email}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                labelWidth={80}\r\n                classes={classes}\r\n                values={values.password}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                labelWidth={140}\r\n                classes={classes}\r\n                values={values.confirmPassword}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.textField}>\r\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\r\n              Sign Up\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n  // else return <h1>Loading</h1>;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js",["80","81","82"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport \"./Home.css\";\r\nexport default function Home(props) {\r\n\r\n  const courseHandler = (event) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const [timerDays, setTimerDays] = useState(\"00\");\r\n  const [timerHours, setTimerHours] = useState(\"00\");\r\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\r\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n  let interval = useRef();\r\n\r\n  const timer = () => {\r\n    const seconds = 1000;\r\n    const minutes = seconds * 60;\r\n    const hours = minutes * 60;\r\n    const days = hours * 24;\r\n    const deadline = new Date(\"January 31, 2021 00:00:00\").getTime();\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const timeLeft = deadline - now;\r\n      if (timeLeft < 0) {\r\n        clearInterval(interval.current);\r\n      } else {\r\n        setTimerDays(Math.floor(timeLeft / days));\r\n        setTimerHours(Math.floor((timeLeft % days) / hours));\r\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\r\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\r\n      }\r\n    }, 1000);\r\n  };\r\n  useEffect(() => {\r\n    timer();\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n\r\n  let courseUI;\r\n  let cqExamUI;\r\n  let mcqExamUI;\r\n\r\n  if (props.userInfo) {\r\n    courseUI = props.userInfo.courses.map((course, k) => {\r\n      // console.log(items);\r\n      return (\r\n        <Grid key={k} container alignItems=\"flex-start\">\r\n          <Grid item>\r\n            <SubjectIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <Link href={`/course/${course.course._id}`} >\r\n              <p>{course.course.name}</p>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    cqExamUI = props.userInfo.courses.map((course, i) => {\r\n      return course.course.cqExams.map((exam, j) => {\r\n        console.log(\"EXAM\", exam);\r\n        return (\r\n          <Grid key={i+j} container alignItems=\"flex-start\">\r\n            <Grid item>\r\n              <SubjectIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <p>{exam.examId.name}</p>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      });\r\n    });\r\n\r\n    mcqExamUI = props.userInfo.courses.map((course, i) => {\r\n      return course.course.mcqExams.map((exam, j) => {\r\n        console.log(\"EXAM\", exam);\r\n        return (\r\n          <Grid key={i+j} container alignItems=\"flex-start\">\r\n            <Grid item>\r\n              <SubjectIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <p>{exam.examId.name}</p>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm>\r\n          <h5>My Courses</h5>\r\n          <hr />\r\n          <div>{courseUI}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={5}>\r\n          <h5>Upcoming Exams</h5>\r\n          <hr />\r\n          <div>{mcqExamUI}</div>\r\n          <div className=\"timer-container\">\r\n            <ul>\r\n              <li>\r\n                <span id=\"days\">{timerDays}</span> Days\r\n              </li>\r\n              <li>\r\n                <span id=\"hours\">{timerHours}</span> Hours\r\n              </li>\r\n              <li>\r\n                <span id=\"minutes\">{timerMinutes}</span> Minutes\r\n              </li>\r\n              <li>\r\n                <span id=\"seconds\">{timerSeconds}</span> Seconds\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm>\r\n          <h5>Previous Exams</h5>\r\n          <hr />\r\n          <div>{cqExamUI}</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js",["83","84","85","86"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://localhost:8080/\";\r\n\r\nconst Layout = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [response, setResponse] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"mcqTimeLimit\", (data) => {\r\n      setResponse(data);\r\n      console.log(\"Socket\", data);\r\n    });\r\n    // return socket.disconnect();\r\n  }, []);\r\n\r\n  console.log(\"OO\",response);\r\n\r\n  const SelectForm = () => {\r\n    let items = [];\r\n\r\n    if (props.universityInfo) {\r\n      props.universityInfo.forEach((element) => {\r\n        if (element.shortform === props.userInfo.varsity) {\r\n          element.departments.forEach((dept) => {\r\n            // console.log(dept);\r\n            items.push({\r\n              id: dept._id,\r\n              value: dept.shortform,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl variant=\"outlined\" fullWidth required>\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select value={props.values} label={props.label}>\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  const createCourseModal = (\r\n    <Modal\r\n      show={showModal}\r\n      onHide={handleCloseModal}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Create Course</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control placeholder=\"Course Name\" />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control placeholder=\"Code\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control\r\n                readOnly\r\n                defaultValue={\r\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\r\n                }\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <SelectForm />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\">Understood</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n  if (props.userInfo)\r\n    return (\r\n      <Container bg=\"light\" fluid>\r\n      {/* //   {createCourseModal}\r\n      //   <Row>\r\n      //     <Col md={3}>Courses</Col>\r\n      //     <Col md={6} backgroundColor=\"success\">\r\n      //       All Events\r\n      //       <Button className=\"pull-right light\" onClick={handleShowModal}>\r\n      //         Create Course\r\n      //       </Button> */}\r\n            <div\r\n              className={\r\n                response < 10\r\n                  ? \"alert alert-info\"\r\n                  : response < 20\r\n                  ? \"alert alert-success\"\r\n                  : response < 30\r\n                  ? \"alert alert-primary\"\r\n                  : response < 40\r\n                  ? \"alert alert-secondary\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n            >\r\n              Time countdown : <strong>{response}</strong>\r\n            </div>\r\n      {/* //     </Col>\r\n      //   </Row> */}\r\n       </Container>\r\n    );\r\n  else {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1>Please Login First</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Layout;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js",["87","88","89","90","91","92","93","94","95","96","97"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js",["98","99"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport { FaBell } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nlet navElements;\r\n\r\nexport default function Navigation(props) {\r\n  let history = useHistory();\r\n  const [showSign, setShowSign] = useState(true);\r\n  const navChange = () => setShowSign(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const [anchor, setAnchor] = React.useState(null);\r\n  const isNotificationOpen = Boolean(anchor);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleNotificationMenuOpen = (event) => {\r\n    setAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setAnchor(null);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    localStorage.clear();\r\n    // props.login.isLogin = \"Failed\";\r\n    window.location.reload();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderProfileMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      id=\"profile-menu\"\r\n      keepMounted\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n      style={{ width: \"340px\" }}\r\n    >\r\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\r\n        Profile\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\r\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\r\n        Sign Out\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const renderNotificationMenu = (\r\n    <Menu\r\n      anchorEl={anchor}\r\n      id=\"notification menu\"\r\n      open={isNotificationOpen}\r\n      onClose={handleMenuClose}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Notification 1</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  console.log(\"Login status\", props.loginStatus);\r\n\r\n  if (props.loginStatus == null) {\r\n    navElements = (\r\n      <>\r\n        <Spinner animation=\"grow\" />\r\n      </>\r\n    );\r\n  } else if (props.loginStatus == \"OK\") {\r\n    navElements = (\r\n      <>\r\n        <IconButton\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n          onClick={handleNotificationMenuOpen}\r\n        >\r\n          <Badge badgeContent={17} color=\"secondary\">\r\n            <FaBell style={{color: \"white\"}}/>\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          // aria-controls={menuId}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleProfileMenuOpen}\r\n          color=\"inherit\"\r\n        >\r\n          <FaUserAlt style={{color: \"white\"}}/>\r\n        </IconButton>\r\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\r\n        {renderNotificationMenu}\r\n        {renderProfileMenu}\r\n      </>\r\n    );\r\n  } else {\r\n    navElements = (\r\n      <>\r\n        <Link to=\"signUp\" onClick={navChange}>\r\n          <MenuItem> Sign Up</MenuItem>\r\n        </Link>\r\n        <Link to=\"signIn\" onClick={navChange}>\r\n          <MenuItem>Sign In</MenuItem>\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"\" style={{backgroundColor: \"#010302\"}} variant=\"dark\">\r\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\r\n        Name\r\n      </Navbar.Brand>\r\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\r\n    </Navbar>\r\n  );\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js",["100","101","102","103","104","105","106"],"E:\\Project 350\\WillChange\\client\\src\\Components\\UpcomingExam\\UpcomingExam.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, { useEffect, useState } from \"react\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n  Card,\r\n  Alert,\r\n  Jumbotron,\r\n  Table,\r\n} from \"react-bootstrap\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  CardContent,\r\n  CardHeader,\r\n  List,\r\n  ListItem,\r\n  Menu,\r\n  MenuList,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst UpcomingExam = (props) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const { id } = useParams();\r\n\r\n  console.log(props.userInfo);\r\n  // console.log(id);\r\n\r\n  let examInfo;\r\n  props.userInfo.courses.map((course) => {\r\n    //   console.log(course);\r\n    course.course.cqExams.map((exam) => {\r\n      //   console.log(exam.examId._id);\r\n      if (exam.examId._id == id) {\r\n        //   console.log(exam);\r\n        examInfo = exam.examId;\r\n      }\r\n    });\r\n    course.course.mcqExams.map((exam) => {\r\n      //   console.log(exam.examId._id);\r\n      if (exam.examId._id == id) examInfo = exam.examId;\r\n    });\r\n  });\r\n\r\n  console.log(examInfo);\r\n\r\n  return (\r\n    <Container>\r\n      <Alert variant=\"danger\">\r\n        <p className=\"text-center\">Exam Has Not Started Yet</p>\r\n      </Alert>\r\n      {/* <Alert variant=\"light\"> */}\r\n      <h1 className=\"text-center\">{examInfo.name}</h1>\r\n      {/* </Alert> */}\r\n\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col>\r\n              <Table\r\n                // variant=\"dark\"\r\n                responsive\r\n                hover\r\n                bordered\r\n                size=\"sm\"\r\n                bsPrefix=\"table\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Time</td>\r\n                    <td>\r\n                      {new Date(examInfo.date).getHours() < 10\r\n                        ? \"0\" + new Date(examInfo.date).getHours()\r\n                        : new Date(examInfo.date).getHours()}\r\n                      :\r\n                      {new Date(examInfo.date).getMinutes() < 10\r\n                        ? \"0\" + new Date(examInfo.date).getMinutes()\r\n                        : new Date(examInfo.date).getMinutes()}{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Date</td>\r\n                    <td>\r\n                      {new Date(examInfo.date).getDate()}th{\" \"}\r\n                      {months[new Date(examInfo.date).getMonth()]},\r\n                      {new Date(examInfo.date).getFullYear()} (\r\n                      {days[new Date(examInfo.date).getDay()]})\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* \r\n          <Alert variant=\"warning\">\r\n            <div className=\"text-left\">\r\n              Date :{\" \"}\r\n              {new Date(examInfo.date).getHours() < 10\r\n                ? \"0\" + new Date(examInfo.date).getHours()\r\n                : new Date(examInfo.date).getHours()}\r\n              :\r\n              {new Date(examInfo.date).getMinutes() < 10\r\n                ? \"0\" + new Date(examInfo.date).getMinutes()\r\n                : new Date(examInfo.date).getMinutes()}{\" \"}\r\n\r\n              {new Date(examInfo.date).getDate()}th{\" \"}\r\n              {months[new Date(examInfo.date).getMonth()]},\r\n              {new Date(examInfo.date).getFullYear()} (\r\n              {days[new Date(examInfo.date).getDay()]})\r\n            </div>\r\n          </Alert> */}\r\n        </Col>\r\n\r\n        <Col>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col>\r\n              <Table\r\n                // variant=\"dark\"\r\n                responsive\r\n                hover\r\n                bordered\r\n                size=\"sm\"\r\n                bsPrefix=\"table\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total Marks</td>\r\n                    <td>{examInfo.totalMarks}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total Time</td>\r\n                    <td>{examInfo.totalTime} min</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Timer deadline={examInfo.date} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpcomingExam;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\PreviousExam.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n  Card,\r\n  Alert,\r\n  Jumbotron,\r\n} from \"react-bootstrap\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  CardContent,\r\n  CardHeader,\r\n  List,\r\n  ListItem,\r\n  Menu,\r\n  MenuList,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PreviousExam = (props) => {\r\n\r\n  const id = useParams();\r\n\r\n  const examData = {\r\n    _id: \"60158e6e5e798487dd0d985f\",\r\n    name: \"Compipitive Programming TT1\",\r\n    totalMarks: 10,\r\n    totalTime: 30,\r\n    mcqQuestions: [\r\n      {\r\n        mcqQuestionId: {\r\n          description:\r\n            \"Jokhon porbe na mor payer chinho ei pothe.Ami baibo na baibonago kheya tori ei ghat e.Jokhon porbe na mor payer chinho ei pothe.Ami baibo na baibonago kheya tori ei ghat eJokhon porbe na mor payer chinho ei pothe.Ami baibo na baibonago kheya tori ei ghat e\",\r\n          mainQuestion: \"What is the name of the movie?\",\r\n          marks: 2,\r\n          options: [\r\n            {\r\n              option: \"Sania\",\r\n            },\r\n            {\r\n              option: \"Vxd\",\r\n            },\r\n            {\r\n              option: \"Abul\",\r\n            },\r\n            {\r\n              option: \"Vxd\",\r\n            },\r\n          ],\r\n          selected: \"Vxd\",\r\n          correctAnswer: \"Sania\",\r\n        },\r\n      },\r\n      {\r\n        mcqQuestionId: {\r\n          description: \"How are doy ? ds soow ad . sda sdsda\",\r\n          mainQuestion: \"What is your name ?\",\r\n          marks: 2,\r\n          options: [\r\n            {\r\n              option: \"Abul\",\r\n            },\r\n            {\r\n              option: \"Vxd\",\r\n            },\r\n            {\r\n              option: \"Shifat\",\r\n            },\r\n          ],\r\n          selected: \"Abul\",\r\n          correctAnswer: \"Shifat\",\r\n        },\r\n      },\r\n      {\r\n        mcqQuestionId: {\r\n          description: \"\",\r\n          mainQuestion: \"What is your name ?\",\r\n          marks: 2,\r\n          options: [\r\n            {\r\n              option: \"Abul\",\r\n            },\r\n            {\r\n              option: \"Vxd\",\r\n            },\r\n          ],\r\n          selected: \"Vxd\",\r\n          correctAnswer: \"Vxd\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const mcq = examData.mcqQuestions.map((exam) => {\r\n    return (\r\n      <Card>\r\n        <Jumbotron>\r\n          <Typography>{exam.mcqQuestionId.description}</Typography>\r\n          {/* <Alert variant=\"primary\"> */}\r\n          <Typography>{exam.mcqQuestionId.mainQuestion}</Typography>\r\n          {/* </Alert> */}\r\n        </Jumbotron>\r\n\r\n        <CardContent>\r\n          <MenuList>\r\n            {exam.mcqQuestionId.options.map((op) => {\r\n              if (exam.mcqQuestionId.correctAnswer === op.option)\r\n                return <Alert variant=\"success\">{op.option}</Alert>;\r\n              if (exam.mcqQuestionId.selected === op.option)\r\n                return <Alert variant=\"danger\">{op.option}</Alert>;\r\n              return <MenuItem>{op.option}</MenuItem>;\r\n            })}\r\n          </MenuList>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"text-center\">{examData.name}</h1>\r\n      <Row>\r\n        <Col></Col>\r\n\r\n        <Col></Col>\r\n      </Row>\r\n      {mcq}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PreviousExam;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Timer\\Timer.js",["147"],"import { useRef, useState, useEffect } from \"react\";\r\n\r\nimport './Timer.css';\r\n\r\nconst Timer = (props) => {\r\n  const [timerDays, setTimerDays] = useState(\"00\");\r\n  const [timerHours, setTimerHours] = useState(\"00\");\r\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\r\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n\r\n  //   console.log(props.deadline)\r\n  let interval = useRef();\r\n\r\n  const timer = (props) => {\r\n    const seconds = 1000;\r\n    const minutes = seconds * 60;\r\n    const hours = minutes * 60;\r\n    const days = hours * 24;\r\n    const deadline = new Date(props.deadline).getTime();\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const timeLeft = deadline - now;\r\n      if (timeLeft < 0) {\r\n        clearInterval(interval.current);\r\n      } else {\r\n        setTimerDays(Math.floor(timeLeft / days));\r\n        setTimerHours(Math.floor((timeLeft % days) / hours));\r\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\r\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    timer(props);\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <ul>\r\n        <li>\r\n          <span id=\"days\">{timerDays}</span> Days\r\n        </li>\r\n        <li>\r\n          <span id=\"hours\">{timerHours}</span> Hours\r\n        </li>\r\n        <li>\r\n          <span id=\"minutes\">{timerMinutes}</span> Minutes\r\n        </li>\r\n        <li>\r\n          <span id=\"seconds\">{timerSeconds}</span> Seconds\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Forms.js",["148"],"import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport axios from \"axios\";\r\nimport \"./Forms.scss\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst TextFieldForm = (props) => (\r\n  <TextField\r\n  id={props.id}\r\n  label={props.label}\r\n  multiline\r\n  rows={props.rows}\r\n  variant=\"outlined\"\r\n  onChange={props.handleChange(props.id)}\r\n  labelWidth={props.labelWidth}\r\n  value={props.values}\r\n  fullWidth\r\n  className={props.classes.textField}\r\n  required={props.required}\r\n/>\r\n)\r\n\r\nconst TextForm = (props) => (\r\n  <FormControl\r\n    className={props.classes.textField}\r\n    variant=\"outlined\"\r\n    fullWidth\r\n    required={props.required}\r\n  >\r\n    <InputLabel>{props.label}</InputLabel>\r\n    <OutlinedInput\r\n      id={props.id}\r\n      onChange={props.handleChange(props.id)}\r\n      value={props.values}\r\n      labelWidth={props.labelWidth}\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nconst PasswordForm = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <FormControl\r\n      className={props.classes.textField}\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      required\r\n    >\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <OutlinedInput\r\n        id={props.id}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={props.values}\r\n        onChange={props.handleChange(props.id)}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label={\"password\"}\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n              edge=\"end\"\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={props.labelWidth}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Forms = (props) => {\r\n  const type = props.type;\r\n\r\n  const [universities, setUniversities] = useState(null);\r\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: apiDomain + \"university/all\",\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"All Universites..\");\r\n\r\n        // console.log(response.data);\r\n\r\n        const data = response.data;\r\n\r\n        if (data.status === \"OK\") {\r\n          setUniversities(data.result.data.universities);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsApiLoaded(false);\r\n      });\r\n  }, []);\r\n\r\n  const SelectForm = (props) => {\r\n    // console.log(\"COMPONENT : select form\");\r\n    let items = [];\r\n    const id = props.id;\r\n\r\n    if (universities) {\r\n      // console.log(\"Univbersity\", universities);\r\n\r\n      // for (let i = 0; i < universities.length; i++) {\r\n      //   console.log(\"Loop\");\r\n      //   console.log(universities[i]);\r\n      // }\r\n\r\n      if (id === \"role\")\r\n        items = [\r\n          {\r\n            id: \"Teacher\",\r\n            value: \"Teacher\",\r\n          },\r\n          {\r\n            id: \"Student\",\r\n            value: \"Student\",\r\n          },\r\n        ];\r\n      else if (id === \"university\") {\r\n        items = [];\r\n        universities.forEach((element) => {\r\n          items.push({\r\n            id: element._id,\r\n            value: element.shortform,\r\n          });\r\n        });\r\n      } else if (id === \"department\") {\r\n        items = [];\r\n\r\n        if (props.selectedUniversity) {\r\n          // console.log(\"Selected University \", props.selectedUniversity);\r\n          universities.forEach((element) => {\r\n            if (element._id === props.selectedUniversity) {\r\n              element.departments.forEach((dept) => {\r\n                // console.log(dept);\r\n                items.push({\r\n                  id: dept._id,\r\n                  value: dept.shortform,\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else if (id === \"session\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"2016-2017\",\r\n            value: \"2016-2017\",\r\n          },\r\n          {\r\n            id: \"2017-2018\",\r\n            value: \"2017-2018\",\r\n          },\r\n          {\r\n            id: \"2018-2019\",\r\n            value: \"2018-2019\",\r\n          },\r\n          {\r\n            id: \"2020-2021\",\r\n            value: \"2020-2021\",\r\n          },\r\n        ];\r\n      } else if (id === \"designation\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"Department Head\",\r\n            value: \"Department Head\",\r\n          },\r\n          {\r\n            id: \"Professor\",\r\n            value: \"Professor\",\r\n          },\r\n          {\r\n            id: \"Assistant Professor\",\r\n            value: \"Assistant Professor\",\r\n          },\r\n          {\r\n            id: \"Lecturer\",\r\n            value: \"Lecturer\",\r\n          },\r\n        ];\r\n      } else if(id === \"options\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"optA\",\r\n            value: \"A\",\r\n          },\r\n          {\r\n            id: \"optB\",\r\n            value: \"B\",\r\n          },\r\n          {\r\n            id: \"optC\",\r\n            value: \"C\",\r\n          },\r\n          {\r\n            id: \"optD\",\r\n            value: \"D\",\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl\r\n        variant=\"outlined\"\r\n        className={props.classes.textField}\r\n        fullWidth\r\n        required\r\n      >\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select\r\n          id={id}\r\n          value={props.values}\r\n          onChange={props.handleChange(id)}\r\n          label={props.label}\r\n        >\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  if (type === \"text\") {\r\n    return <TextForm {...props} />;\r\n  } else if (type === \"password\") {\r\n    return <PasswordForm {...props} />;\r\n  } else if (type === \"select\") {\r\n    return <SelectForm {...props} />;\r\n  } else {\r\n    return <TextFieldForm {...props}/>\r\n  }\r\n};\r\n\r\nexport default Forms;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\CreateExam.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\Question.js",["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":26,"column":3,"nodeType":"157","messageId":"158","endLine":26,"endColumn":7},{"ruleId":"159","severity":1,"message":"160","line":120,"column":30,"nodeType":"161","messageId":"162","endLine":120,"endColumn":52,"fix":"163"},{"ruleId":"159","severity":1,"message":"160","line":122,"column":30,"nodeType":"161","messageId":"162","endLine":122,"endColumn":43,"fix":"164"},{"ruleId":"165","severity":1,"message":"166","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":22},{"ruleId":"165","severity":1,"message":"169","line":10,"column":9,"nodeType":"167","messageId":"168","endLine":10,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":43,"column":30,"nodeType":"167","endLine":43,"endColumn":37},{"ruleId":"165","severity":1,"message":"172","line":10,"column":3,"nodeType":"167","messageId":"168","endLine":10,"endColumn":10},{"ruleId":"165","severity":1,"message":"173","line":19,"column":8,"nodeType":"167","messageId":"168","endLine":19,"endColumn":24},{"ruleId":"165","severity":1,"message":"174","line":29,"column":9,"nodeType":"167","messageId":"168","endLine":29,"endColumn":24},{"ruleId":"165","severity":1,"message":"175","line":83,"column":9,"nodeType":"167","messageId":"168","endLine":83,"endColumn":26},{"ruleId":"165","severity":1,"message":"176","line":3,"column":17,"nodeType":"167","messageId":"168","endLine":3,"endColumn":23},{"ruleId":"165","severity":1,"message":"177","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"178","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":11},{"ruleId":"165","severity":1,"message":"179","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":12},{"ruleId":"165","severity":1,"message":"180","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":11},{"ruleId":"165","severity":1,"message":"181","line":10,"column":8,"nodeType":"167","messageId":"168","endLine":10,"endColumn":17},{"ruleId":"165","severity":1,"message":"182","line":11,"column":10,"nodeType":"167","messageId":"168","endLine":11,"endColumn":20},{"ruleId":"165","severity":1,"message":"183","line":12,"column":8,"nodeType":"167","messageId":"168","endLine":12,"endColumn":14},{"ruleId":"165","severity":1,"message":"184","line":15,"column":8,"nodeType":"167","messageId":"168","endLine":15,"endColumn":18},{"ruleId":"165","severity":1,"message":"185","line":16,"column":8,"nodeType":"167","messageId":"168","endLine":16,"endColumn":11},{"ruleId":"170","severity":1,"message":"186","line":36,"column":6,"nodeType":"187","endLine":36,"endColumn":8,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":69,"column":43,"nodeType":"191","endLine":69,"endColumn":66},{"ruleId":"192","severity":1,"message":"193","line":103,"column":32,"nodeType":"194","messageId":"158","endLine":103,"endColumn":34},{"ruleId":"165","severity":1,"message":"182","line":14,"column":10,"nodeType":"167","messageId":"168","endLine":14,"endColumn":20},{"ruleId":"165","severity":1,"message":"183","line":15,"column":8,"nodeType":"167","messageId":"168","endLine":15,"endColumn":14},{"ruleId":"165","severity":1,"message":"179","line":16,"column":8,"nodeType":"167","messageId":"168","endLine":16,"endColumn":12},{"ruleId":"165","severity":1,"message":"180","line":17,"column":8,"nodeType":"167","messageId":"168","endLine":17,"endColumn":11},{"ruleId":"165","severity":1,"message":"195","line":48,"column":10,"nodeType":"167","messageId":"168","endLine":48,"endColumn":19},{"ruleId":"165","severity":1,"message":"196","line":60,"column":12,"nodeType":"167","messageId":"168","endLine":60,"endColumn":17},{"ruleId":"165","severity":1,"message":"197","line":62,"column":11,"nodeType":"167","messageId":"168","endLine":62,"endColumn":23},{"ruleId":"165","severity":1,"message":"198","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"199","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"200","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":9},{"ruleId":"165","severity":1,"message":"201","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":8},{"ruleId":"165","severity":1,"message":"202","line":9,"column":3,"nodeType":"167","messageId":"168","endLine":9,"endColumn":7},{"ruleId":"165","severity":1,"message":"172","line":10,"column":3,"nodeType":"167","messageId":"168","endLine":10,"endColumn":10},{"ruleId":"165","severity":1,"message":"203","line":11,"column":3,"nodeType":"167","messageId":"168","endLine":11,"endColumn":7},{"ruleId":"165","severity":1,"message":"204","line":13,"column":3,"nodeType":"167","messageId":"168","endLine":13,"endColumn":12},{"ruleId":"165","severity":1,"message":"205","line":18,"column":8,"nodeType":"167","messageId":"168","endLine":18,"endColumn":14},{"ruleId":"165","severity":1,"message":"206","line":19,"column":8,"nodeType":"167","messageId":"168","endLine":19,"endColumn":18},{"ruleId":"165","severity":1,"message":"207","line":20,"column":8,"nodeType":"167","messageId":"168","endLine":20,"endColumn":16},{"ruleId":"165","severity":1,"message":"208","line":21,"column":8,"nodeType":"167","messageId":"168","endLine":21,"endColumn":19},{"ruleId":"165","severity":1,"message":"173","line":22,"column":8,"nodeType":"167","messageId":"168","endLine":22,"endColumn":24},{"ruleId":"165","severity":1,"message":"209","line":24,"column":3,"nodeType":"167","messageId":"168","endLine":24,"endColumn":14},{"ruleId":"165","severity":1,"message":"210","line":25,"column":3,"nodeType":"167","messageId":"168","endLine":25,"endColumn":13},{"ruleId":"165","severity":1,"message":"211","line":26,"column":3,"nodeType":"167","messageId":"168","endLine":26,"endColumn":7},{"ruleId":"165","severity":1,"message":"212","line":27,"column":3,"nodeType":"167","messageId":"168","endLine":27,"endColumn":11},{"ruleId":"165","severity":1,"message":"213","line":28,"column":3,"nodeType":"167","messageId":"168","endLine":28,"endColumn":7},{"ruleId":"165","severity":1,"message":"214","line":29,"column":3,"nodeType":"167","messageId":"168","endLine":29,"endColumn":11},{"ruleId":"165","severity":1,"message":"184","line":30,"column":3,"nodeType":"167","messageId":"168","endLine":30,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":66,"column":39,"nodeType":"217","messageId":"218","endLine":66,"endColumn":41},{"ruleId":"215","severity":1,"message":"216","line":68,"column":38,"nodeType":"217","messageId":"218","endLine":68,"endColumn":40},{"ruleId":"192","severity":1,"message":"193","line":70,"column":27,"nodeType":"194","messageId":"158","endLine":70,"endColumn":29},{"ruleId":"215","severity":1,"message":"216","line":75,"column":39,"nodeType":"217","messageId":"218","endLine":75,"endColumn":41},{"ruleId":"192","severity":1,"message":"193","line":77,"column":27,"nodeType":"194","messageId":"158","endLine":77,"endColumn":29},{"ruleId":"165","severity":1,"message":"198","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"199","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"200","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":9},{"ruleId":"165","severity":1,"message":"201","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":8},{"ruleId":"165","severity":1,"message":"202","line":9,"column":3,"nodeType":"167","messageId":"168","endLine":9,"endColumn":7},{"ruleId":"165","severity":1,"message":"172","line":10,"column":3,"nodeType":"167","messageId":"168","endLine":10,"endColumn":10},{"ruleId":"165","severity":1,"message":"205","line":17,"column":8,"nodeType":"167","messageId":"168","endLine":17,"endColumn":14},{"ruleId":"165","severity":1,"message":"206","line":18,"column":8,"nodeType":"167","messageId":"168","endLine":18,"endColumn":18},{"ruleId":"165","severity":1,"message":"208","line":20,"column":8,"nodeType":"167","messageId":"168","endLine":20,"endColumn":19},{"ruleId":"165","severity":1,"message":"173","line":21,"column":8,"nodeType":"167","messageId":"168","endLine":21,"endColumn":24},{"ruleId":"165","severity":1,"message":"210","line":24,"column":3,"nodeType":"167","messageId":"168","endLine":24,"endColumn":13},{"ruleId":"165","severity":1,"message":"211","line":25,"column":3,"nodeType":"167","messageId":"168","endLine":25,"endColumn":7},{"ruleId":"165","severity":1,"message":"212","line":26,"column":3,"nodeType":"167","messageId":"168","endLine":26,"endColumn":11},{"ruleId":"165","severity":1,"message":"213","line":27,"column":3,"nodeType":"167","messageId":"168","endLine":27,"endColumn":7},{"ruleId":"165","severity":1,"message":"219","line":35,"column":9,"nodeType":"167","messageId":"168","endLine":35,"endColumn":11},{"ruleId":"170","severity":1,"message":"171","line":38,"column":30,"nodeType":"167","endLine":38,"endColumn":37},{"ruleId":"165","severity":1,"message":"220","line":95,"column":10,"nodeType":"167","messageId":"168","endLine":95,"endColumn":21},{"ruleId":"165","severity":1,"message":"221","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":12},{"ruleId":"165","severity":1,"message":"222","line":24,"column":10,"nodeType":"167","messageId":"168","endLine":24,"endColumn":28},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"225","text":"226"},{"range":"227","text":"226"},"no-unused-vars","'AssignmentIcon' is defined but never used.","Identifier","unusedVar","'courseHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'Spinner' is defined but never used.","'CircularProgress' is defined but never used.","'handleShowModal' is assigned a value but never used.","'createCourseModal' is assigned a value but never used.","'useRef' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["228"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'Jumbotron' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'id' is assigned a value but never used.","'isApiLoaded' is assigned a value but never used.","'Grid' is defined but never used.","'getRenderPropValue' is defined but never used.","no-global-assign","no-unsafe-negation",[2995,3004],"\"error\"",[3064,3073],{"desc":"229","fix":"230"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"231","text":"232"},[1260,1262],"[id, props.userInfo]"]