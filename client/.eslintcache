[{"E:\\Project 350\\WillChange\\client\\src\\index.js":"1","E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js":"2","E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js":"3","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js":"4","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js":"5","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js":"6","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js":"7","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js":"8","E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js":"9","E:\\Project 350\\WillChange\\client\\src\\Components\\UpcomingExam\\UpcomingExam.js":"10","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\PreviousExam.js":"11","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Forms.js":"12","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js":"13","E:\\Project 350\\WillChange\\client\\src\\Components\\Timer\\Timer.js":"14","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\MarkSheet.js":"15","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\ExamInfo.js":"16","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\CreateExam.js":"17","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\Question.js":"18","E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\LiveExam.js":"19","E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\Exam.js":"20","E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\Result.js":"21","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Loader.js":"22","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\ExamType.js":"23"},{"size":604,"mtime":1611851509922,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1611586567836,"results":"26","hashOfConfig":"25"},{"size":3571,"mtime":1612911884882,"results":"27","hashOfConfig":"25"},{"size":2812,"mtime":1612912100934,"results":"28","hashOfConfig":"25"},{"size":4305,"mtime":1612648460035,"results":"29","hashOfConfig":"25"},{"size":9510,"mtime":1612632223425,"results":"30","hashOfConfig":"25"},{"size":4732,"mtime":1612911207082,"results":"31","hashOfConfig":"25"},{"size":930,"mtime":1612911677292,"results":"32","hashOfConfig":"25"},{"size":15672,"mtime":1612912010746,"results":"33","hashOfConfig":"25"},{"size":3614,"mtime":1612912333409,"results":"34","hashOfConfig":"25"},{"size":12856,"mtime":1612911207082,"results":"35","hashOfConfig":"25"},{"size":7029,"mtime":1612723876313,"results":"36","hashOfConfig":"25"},{"size":3987,"mtime":1612911731164,"results":"37","hashOfConfig":"25"},{"size":2157,"mtime":1612911207084,"results":"38","hashOfConfig":"25"},{"size":1970,"mtime":1612852777582,"results":"39","hashOfConfig":"25"},{"size":10788,"mtime":1612912292521,"results":"40","hashOfConfig":"25"},{"size":5022,"mtime":1612911628575,"results":"41","hashOfConfig":"25"},{"size":15263,"mtime":1612911653990,"results":"42","hashOfConfig":"25"},{"size":11437,"mtime":1612859831628,"results":"43","hashOfConfig":"25"},{"size":3254,"mtime":1612764301992,"results":"44","hashOfConfig":"25"},{"size":1198,"mtime":1612912215331,"results":"45","hashOfConfig":"25"},{"size":536,"mtime":1612900218747,"results":"46","hashOfConfig":"25"},{"size":2959,"mtime":1612911586010,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1vw26ma",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Project 350\\WillChange\\client\\src\\index.js",[],["103","104"],"E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js",[],"E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js",["105","106","107","108"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js",["109"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js",["110","111","112"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Forms from \"../Generic/Forms\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"./SignIn.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    // width: \"15vw\",\r\n    // margin: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  shadows: [\"none\"],\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    role: \"\",\r\n    designation: \"\",\r\n    university: \"\",\r\n    department: \"\",\r\n    session: \"\",\r\n    regNo: \"\",\r\n    result: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: apiDomain + \"university/all\",\r\n  //   })\r\n  //     .then((response) => {\r\n  //       // console.log(\"All Universites..\");\r\n\r\n  //       // console.log(response.data);\r\n\r\n  //       const data = response.data;\r\n\r\n  //       if (data.status === \"OK\") {\r\n  //         setUniversities(data.result.data);\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  // console.log(\"API CALL DATA\", universities);\r\n  let history = useHistory();\r\n\r\n  const obj = {\r\n    role: values.role,\r\n    username: values.username,\r\n    email: values.email,\r\n    password: values.password,\r\n    repassword: values.confirmPassword,\r\n    firstName: values.firstName,\r\n    lastName: values.lastName,\r\n    department: values.department,\r\n    registrationNo: parseInt(values.regNo, 10),\r\n    session: values.session,\r\n    varsity: values.university,\r\n    designation: values.designation,\r\n  };\r\n\r\n  const body = JSON.stringify(obj);\r\n\r\n  const handleSignUp = (e) => {\r\n    // console.log('hello')\r\n    fetchData();\r\n    e.preventDefault();\r\n  };\r\n  const fetchData = async () => {\r\n    let endpoint;\r\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\r\n    else endpoint = \"auth/create-student\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: body,\r\n    };\r\n\r\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(\"API data\",data);\r\n\r\n    if (data.status === \"FAILED\")\r\n      setValues({ ...values, [\"error\"]: data.result });\r\n    else {\r\n      setValues({ ...values, [\"error\"]: \"\" });\r\n      const userdata = {\r\n        token: data.result.jwt.token,\r\n        role: data.result.data.role.toLowerCase(),\r\n        id: data.result.data.id,\r\n      };\r\n\r\n      console.log(userdata);\r\n\r\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    }\r\n    \r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  // if (universities)\r\n  return (\r\n    <Container>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item className={classes.textField}>\r\n            <h2>Hello There!!</h2>\r\n            <p>Lets Sign Up to continue</p>\r\n          </Grid>\r\n        </Grid>\r\n        {values.error !== \"\" ? (\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.root}\r\n          >\r\n            <Alert elevation={0} severity=\"error\">\r\n              {values.error}\r\n            </Alert>\r\n          </Grid>\r\n        ) : null}\r\n        <form onSubmit={handleSignUp}>\r\n          <Grid item xs={12}>\r\n            <Forms\r\n              id=\"role\"\r\n              type=\"select\"\r\n              label=\"Role\"\r\n              classes={classes}\r\n              values={values.role}\r\n              handleChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"university\"\r\n                type=\"select\"\r\n                label=\"University\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.university}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                selectedUniversity={values.university}\r\n                id=\"department\"\r\n                type=\"select\"\r\n                label=\"Department\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.department}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {values.role !== \"Teacher\" ? (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"session\"\r\n                  type=\"select\"\r\n                  label=\"Session\"\r\n                  labelWidth={117}\r\n                  classes={classes}\r\n                  values={values.session}\r\n                  handleChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"regNo\"\r\n                  type=\"text\"\r\n                  label=\"Registration No\"\r\n                  labelWidth={120}\r\n                  classes={classes}\r\n                  values={values.regNo}\r\n                  handleChange={handleChange}\r\n                  required={true}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Forms\r\n                id=\"designation\"\r\n                type=\"select\"\r\n                label=\"Designation\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.designation}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"firstName\"\r\n                type=\"text\"\r\n                label=\"First Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.firstName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"lastName\"\r\n                type=\"text\"\r\n                label=\"Last Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.lastName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"username\"\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                labelWidth={84}\r\n                classes={classes}\r\n                values={values.username}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"email\"\r\n                type=\"text\"\r\n                label=\"Email Address\"\r\n                labelWidth={110}\r\n                classes={classes}\r\n                values={values.email}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                labelWidth={80}\r\n                classes={classes}\r\n                values={values.password}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                labelWidth={140}\r\n                classes={classes}\r\n                values={values.confirmPassword}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.textField}>\r\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\r\n              Sign Up\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n  // else return <h1>Loading</h1>;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js",["113","114","115"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport { FaBell } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nlet navElements;\r\n\r\nexport default function Navigation(props) {\r\n  let history = useHistory();\r\n  const [showSign, setShowSign] = useState(true);\r\n  const navChange = () => setShowSign(false);\r\n\r\n  const [notifications, setnotifications] = useState(null);\r\n\r\n  if (props.notifications) setnotifications(props.notifications);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const [anchor, setAnchor] = React.useState(null);\r\n  const isNotificationOpen = Boolean(anchor);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleNotificationMenuOpen = (event) => {\r\n    setAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setAnchor(null);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    localStorage.clear();\r\n    // props.login.isLogin = \"Failed\";\r\n    window.location.reload();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderProfileMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      id=\"profile-menu\"\r\n      keepMounted\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n      style={{ width: \"340px\" }}\r\n    >\r\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\r\n        Profile\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\r\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\r\n        Sign Out\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const renderNotificationMenu = (\r\n    <Menu\r\n      anchorEl={anchor}\r\n      id=\"notification menu\"\r\n      open={isNotificationOpen}\r\n      onClose={handleMenuClose}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        {notifications ? notifications : \"No Notifications\"}\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  console.log(\"Login status\", props.loginStatus);\r\n\r\n  if (props.loginStatus == null) {\r\n    navElements = (\r\n      <>\r\n        <Spinner animation=\"grow\" />\r\n      </>\r\n    );\r\n  } else if (props.loginStatus == \"OK\") {\r\n    navElements = (\r\n      <>\r\n        <IconButton\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n          onClick={handleNotificationMenuOpen}\r\n        >\r\n          <Badge badgeContent={17} color=\"secondary\">\r\n            <FaBell style={{ color: \"white\" }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          // aria-controls={menuId}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleProfileMenuOpen}\r\n          color=\"inherit\"\r\n        >\r\n          <FaUserAlt style={{ color: \"white\" }} />\r\n        </IconButton>\r\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\r\n        {renderNotificationMenu}\r\n        {renderProfileMenu}\r\n      </>\r\n    );\r\n  } else {\r\n    navElements = (\r\n      <>\r\n        <Link to=\"signUp\" onClick={navChange}>\r\n          <MenuItem> Sign Up</MenuItem>\r\n        </Link>\r\n        <Link to=\"signIn\" onClick={navChange}>\r\n          <MenuItem>Sign In</MenuItem>\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"\" style={{ backgroundColor: \"#010302\" }} variant=\"dark\">\r\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\r\n        <>\r\n          <img\r\n            src={\"/static/paper.png\"}\r\n            width={\"38\"}\r\n            height={\"38\"}\r\n            className={\"d-inline-block align-top\"}\r\n            className=\"nav__logo\"\r\n            alt={\"logo\"}\r\n          />\r\n          <span className=\"nav__heading\" style={{ fontSize: \"122%\" }}>\r\n            paper\r\n          </span>\r\n        </>\r\n      </Navbar.Brand>\r\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\r\n    </Navbar>\r\n  );\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js",["116","117"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js",["118","119","120","121","122","123","124"],"E:\\Project 350\\WillChange\\client\\src\\Components\\UpcomingExam\\UpcomingExam.js",["125","126","127","128","129"],"E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\PreviousExam.js",["130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n  Card,\r\n  Alert,\r\n  Jumbotron,\r\n  Table,\r\n  Tab,\r\n  TabContainer,\r\n  ListGroup,\r\n  TabContent,\r\n  TabPane,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./PreviousExam.css\";\r\n\r\nimport MarkSheet from \"./MarkSheet\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  Box,\r\n  CardContent,\r\n  MenuList,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ExamInfo from \"./ExamInfo\";\r\n\r\nconst PreviousExam = (props) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const { id } = useParams();\r\n\r\n  const userId = props.userInfo._id;\r\n\r\n  const role = props.userInfo.role;\r\n\r\n  const [mcqExamData, setMcqExamData] = useState(null);\r\n  const [cqExamData, setCqExamData] = useState(null);\r\n  const [mcqExamsData, setMcqExamsData] = useState(null);\r\n  const [cqExamsData, setCqExamsData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let examType = \"mcq\";\r\n\r\n    let endpoint;\r\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\r\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\r\n\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status == \"OK\") {\r\n          if (role === \"Teacher\") setMcqExamsData(response.data.result.data);\r\n          else setMcqExamData(response.data.result.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    examType = \"cq\";\r\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\r\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\r\n\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status == \"OK\") {\r\n          if (role === \"Teacher\") setCqExamsData(response.data.result.data);\r\n          else setCqExamData(response.data.result.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  let mcq;\r\n  let cq;\r\n\r\n  if (mcqExamData)\r\n    mcq = mcqExamData.studentAnswers.map((test) => {\r\n      return (\r\n        <div>\r\n          <Card>\r\n            <Box fontWeight=\"fontWeightBold\" m={1}>\r\n              {\" \"}\r\n              Question :{\" \"}\r\n            </Box>\r\n            <div className=\"card card-body bg-light\">\r\n              <Typography>{test.mcqQuestion.description}</Typography>\r\n              {/* <Alert variant=\"primary\"> */}\r\n              <Typography>{test.mcqQuestion.mainQuestion}</Typography>\r\n              {/* </Alert> */}\r\n            </div>\r\n\r\n            <CardContent>\r\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\r\n              <MenuList>\r\n                {test.mcqQuestion.options.map((op) => {\r\n                  if (test.mcqQuestion.correctAnswers[0].answer === op.option)\r\n                    return <Alert variant=\"success\">{op.option}</Alert>;\r\n                  if (test.studentAnswer === op.option)\r\n                    return <Alert variant=\"danger\">{op.option}</Alert>;\r\n\r\n                  return <MenuItem>{op.option}</MenuItem>;\r\n                })}\r\n              </MenuList>\r\n            </CardContent>\r\n          </Card>\r\n          <br></br>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  if (cqExamData)\r\n    cq = cqExamData.studentAnswers.map((test) => {\r\n      return (\r\n        <din>\r\n          <Card>\r\n            <Box fontWeight=\"fontWeightBold\" m={1}>\r\n              {\" \"}\r\n              Question :{\" \"}\r\n            </Box>\r\n            <div className=\"card card-body bg-light\">\r\n              <Typography>{test.cqQuestion.description}</Typography>\r\n              {/* <Alert variant=\"primary\"> */}\r\n              <Typography>{test.cqQuestion.mainQuestion}</Typography>\r\n              {/* </Alert> */}\r\n            </div>\r\n\r\n            <CardContent>\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>\r\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\r\n                    Ans :{\" \"}\r\n                  </Box>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  value={test.studentAnswer}\r\n                  disabled\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                />\r\n              </Form.Group>\r\n\r\n              {/* <Alert variant=\"success\">{test.studentAnswer}</Alert> */}\r\n            </CardContent>\r\n          </Card>\r\n          <br></br>\r\n        </din>\r\n      );\r\n    });\r\n\r\n  if (mcqExamsData) {\r\n    return (\r\n      <Tab.Container\r\n        className=\"scroll-off\"\r\n        id=\"list-group-tabs-example\"\r\n        defaultActiveKey=\"#link1\"\r\n      >\r\n        <Row>\r\n          <Col sm={2} >\r\n            <ListGroup variant=\"flush\" className='align-items-center'>\r\n              <ListGroup.Item action href=\"#link1\">\r\n                Exam Info\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action href=\"#link2\">\r\n                Mark Sheet\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action href=\"#link3\">\r\n                Reviews\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col sm={10}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"#link1\">\r\n                <ExamInfo mcqExamData={mcqExamsData[0]} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"#link2\">\r\n                <MarkSheet mcqExamsData={mcqExamsData} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"#link3\">Reports</Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    );\r\n  } else if (mcqExamData || cqExamData)\r\n    return (\r\n      <Container style={{ marginTop: \"5px\" }}>\r\n        <Alert variant=\"light\">\r\n          <h1 className=\"text-center\">\r\n            {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\r\n          </h1>\r\n        </Alert>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  // variant=\"dark\"\r\n                  responsive\r\n                  hover\r\n                  bordered\r\n                  size=\"sm\"\r\n                  bsPrefix=\"table\"\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Participated On</td>\r\n                      <td>\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.submitOn\r\n                            : cqExamData.submitOn\r\n                        ).getDate()}\r\n                        th{\" \"}\r\n                        {\r\n                          months[\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.submitOn\r\n                                : cqExamData.submitOn\r\n                            ).getMonth()\r\n                          ]\r\n                        }\r\n                        ,\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.submitOn\r\n                            : cqExamData.submitOn\r\n                        ).getFullYear()}{\" \"}\r\n                        (\r\n                        {\r\n                          days[\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.submitOn\r\n                                : cqExamData.submitOn\r\n                            ).getDay()\r\n                          ]\r\n                        }\r\n                        )\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>At</td>\r\n                      <td>\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.mcqExam.date\r\n                            : cqExamData.cqExam.date\r\n                        ).getHours() < 10\r\n                          ? \"0\" +\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getHours()\r\n                          : new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getHours()}\r\n                        :\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.mcqExam.date\r\n                            : cqExamData.cqExam.date\r\n                        ).getMinutes() < 10\r\n                          ? \"0\" +\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getMinutes()\r\n                          : new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getMinutes()}{\" \"}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Total Time</td>\r\n                      <td>\r\n                        {mcqExamData\r\n                          ? mcqExamData.mcqExam.totalTime\r\n                          : cqExamData.cqExam.totalTime}{\" \"}\r\n                        min\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Row>\r\n              <Col></Col>\r\n              <Col>\r\n                <Table\r\n                  // variant=\"dark\"\r\n                  responsive\r\n                  hover\r\n                  bordered\r\n                  size=\"sm\"\r\n                  bsPrefix=\"table\"\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Total Marks</td>\r\n                      <td>\r\n                        {mcqExamData ? mcqExamData.mark : cqExamData.mark}/\r\n                        {mcqExamData\r\n                          ? mcqExamData.mcqExam.totalMarks\r\n                          : cqExamData.cqExam.totalMarks}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>Solved</td>\r\n                      <td>{mcqExamData ? mcqExamData.solved : \"\"}</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>Wrong</td>\r\n                      <td>{mcqExamData ? mcqExamData.wrong : \"\"}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col></Col>\r\n\r\n          <Col></Col>\r\n        </Row>\r\n        {mcq ? mcq : cq}\r\n      </Container>\r\n    );\r\n  else return <CircularProgress />;\r\n};\r\n\r\nexport default PreviousExam;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Forms.js",["142"],"import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport axios from \"axios\";\r\nimport \"./Forms.scss\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst TextFieldForm = (props) => (\r\n  <TextField\r\n  id={props.id}\r\n  label={props.label}\r\n  multiline\r\n  rows={props.rows}\r\n  variant=\"outlined\"\r\n  onChange={props.handleChange(props.id)}\r\n  labelWidth={props.labelWidth}\r\n  value={props.values}\r\n  fullWidth\r\n  className={props.classes.textField}\r\n  required={props.required}\r\n/>\r\n)\r\n\r\nconst TextForm = (props) => (\r\n  <FormControl\r\n    className={props.classes.textField}\r\n    variant=\"outlined\"\r\n    fullWidth\r\n    required={props.required}\r\n  >\r\n    <InputLabel>{props.label}</InputLabel>\r\n    <OutlinedInput\r\n      id={props.id}\r\n      onChange={props.handleChange(props.id)}\r\n      value={props.values}\r\n      labelWidth={props.labelWidth}\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nconst PasswordForm = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <FormControl\r\n      className={props.classes.textField}\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      required\r\n    >\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <OutlinedInput\r\n        id={props.id}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={props.values}\r\n        onChange={props.handleChange(props.id)}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label={\"password\"}\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n              edge=\"end\"\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={props.labelWidth}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Forms = (props) => {\r\n  const type = props.type;\r\n\r\n  const [universities, setUniversities] = useState(null);\r\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: apiDomain + \"university/all\",\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"All Universites..\");\r\n\r\n        // console.log(response.data);\r\n\r\n        const data = response.data;\r\n\r\n        if (data.status === \"OK\") {\r\n          setUniversities(data.result.data.universities);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsApiLoaded(false);\r\n      });\r\n  }, []);\r\n\r\n  const SelectForm = (props) => {\r\n    // console.log(\"COMPONENT : select form\");\r\n    let items = [];\r\n    const id = props.id;\r\n\r\n    if (universities) {\r\n      // console.log(\"Univbersity\", universities);\r\n\r\n      // for (let i = 0; i < universities.length; i++) {\r\n      //   console.log(\"Loop\");\r\n      //   console.log(universities[i]);\r\n      // }\r\n\r\n      if (id === \"role\")\r\n        items = [\r\n          {\r\n            id: \"Teacher\",\r\n            value: \"Teacher\",\r\n          },\r\n          {\r\n            id: \"Student\",\r\n            value: \"Student\",\r\n          },\r\n        ];\r\n      else if (id === \"university\") {\r\n        items = [];\r\n        universities.forEach((element) => {\r\n          items.push({\r\n            id: element._id,\r\n            value: element.shortform,\r\n          });\r\n        });\r\n      } else if (id === \"department\") {\r\n        items = [];\r\n\r\n        if (props.selectedUniversity) {\r\n          // console.log(\"Selected University \", props.selectedUniversity);\r\n          universities.forEach((element) => {\r\n            if (element._id === props.selectedUniversity) {\r\n              element.departments.forEach((dept) => {\r\n                // console.log(dept);\r\n                items.push({\r\n                  id: dept._id,\r\n                  value: dept.shortform,\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else if (id === \"session\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"2016-2017\",\r\n            value: \"2016-2017\",\r\n          },\r\n          {\r\n            id: \"2017-2018\",\r\n            value: \"2017-2018\",\r\n          },\r\n          {\r\n            id: \"2018-2019\",\r\n            value: \"2018-2019\",\r\n          },\r\n          {\r\n            id: \"2020-2021\",\r\n            value: \"2020-2021\",\r\n          },\r\n        ];\r\n      } else if (id === \"designation\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"Department Head\",\r\n            value: \"Department Head\",\r\n          },\r\n          {\r\n            id: \"Professor\",\r\n            value: \"Professor\",\r\n          },\r\n          {\r\n            id: \"Assistant Professor\",\r\n            value: \"Assistant Professor\",\r\n          },\r\n          {\r\n            id: \"Lecturer\",\r\n            value: \"Lecturer\",\r\n          },\r\n        ];\r\n      } else if(id === \"options\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"optA\",\r\n            value: \"A\",\r\n          },\r\n          {\r\n            id: \"optB\",\r\n            value: \"B\",\r\n          },\r\n          {\r\n            id: \"optC\",\r\n            value: \"C\",\r\n          },\r\n          {\r\n            id: \"optD\",\r\n            value: \"D\",\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl\r\n        variant=\"outlined\"\r\n        className={props.classes.textField}\r\n        fullWidth\r\n        required\r\n      >\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select\r\n          id={id}\r\n          value={props.values}\r\n          onChange={props.handleChange(id)}\r\n          label={props.label}\r\n        >\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  if (type === \"text\") {\r\n    return <TextForm {...props} />;\r\n  } else if (type === \"password\") {\r\n    return <PasswordForm {...props} />;\r\n  } else if (type === \"select\") {\r\n    return <SelectForm {...props} />;\r\n  } else {\r\n    return <TextFieldForm {...props}/>\r\n  }\r\n};\r\n\r\nexport default Forms;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js",["143","144"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Timer\\Timer.js",["145"],"import { useRef, useState, useEffect } from \"react\";\r\n\r\nimport './Timer.css';\r\n\r\nconst Timer = (props) => {\r\n  const [timerDays, setTimerDays] = useState(\"00\");\r\n  const [timerHours, setTimerHours] = useState(\"00\");\r\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\r\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n\r\n  //   console.log(props.deadline)\r\n  let interval = useRef();\r\n\r\n  const timer = (props) => {\r\n    const seconds = 1000;\r\n    const minutes = seconds * 60;\r\n    const hours = minutes * 60;\r\n    const days = hours * 24;\r\n    const deadline = new Date(props.deadline).getTime();\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const timeLeft = deadline - now;\r\n      if (timeLeft < 0) {\r\n        clearInterval(interval.current);\r\n      } else {\r\n        setTimerDays(Math.floor(timeLeft / days));\r\n        setTimerHours(Math.floor((timeLeft % days) / hours));\r\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\r\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    timer(props);\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <ul>\r\n        <li>\r\n          <span id=\"days\">{timerDays}</span> Days\r\n        </li>\r\n        <li>\r\n          <span id=\"hours\">{timerHours}</span> Hours\r\n        </li>\r\n        <li>\r\n          <span id=\"minutes\">{timerMinutes}</span> Minutes\r\n        </li>\r\n        <li>\r\n          <span id=\"seconds\">{timerSeconds}</span> Seconds\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\MarkSheet.js",["146"],"import React from \"react\";\r\n\r\nconst MarkSheet = (props) => {\r\n  const mcqExamsData = props.mcqExamsData;\r\n  let x = 1;\r\n\r\n  const tableBody = mcqExamsData.map((data) => {\r\n    console.log(data);\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td>{x++}</td>\r\n          <td>\r\n            <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\r\n              {x == 2 ? \"👑\" : \"\"}\r\n            </span>\r\n            {`${data.student.firstName} ${data.student.lastName} ${data.student.username}`}\r\n          </td>\r\n          <td>{data.student.registrationNo}</td>\r\n\r\n          <td>\r\n            <a href={`mailto: ${data.student.email}`}>{data.student.email}</a>\r\n          </td>\r\n          <td>{data.solved}</td>\r\n          <td>{data.wrong}</td>\r\n          <td>{data.mark}</td>\r\n          <td>\r\n            <a href={`${data.student._id}`}>View</a>\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <table\r\n      className=\"table table-hover table-striped table-light\"\r\n      style={{ textAlign: \"center\" }}\r\n    >\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Registration No</th>\r\n          <th>Email</th>\r\n          <th>Solved</th>\r\n          <th>Wrong</th>\r\n          <th>Mark</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{tableBody}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default MarkSheet;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\ExamInfo.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\CreateExam.js",["147"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\Question.js",["148"],"E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\LiveExam.js",["149"],"import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from '@material-ui/core/Button';\r\nimport './LiveExam.scss';\r\n\r\n\r\nexport default function LiveExam(props) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [index, setIndex] = React.useState(0);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  \r\n  const questions = [\r\n    {\r\n      q: \"what is the question?\",\r\n      optA: \"option a\",\r\n      optB: \"option b\",\r\n      optC: \"option c\",\r\n      optD: \"option d\",\r\n    },\r\n    {\r\n      q: \"what is the question? 2\",\r\n      optA: \"option a\",\r\n      optB: \"option b\",\r\n      optC: \"option c\",\r\n      optD: \"option d\",\r\n    },\r\n  ];\r\n\r\n  const nextQuestion = (event) => {\r\n      if(index <= questions.length) setIndex(index + 1);\r\n      else setIndex(index);\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"root \">\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={7} className=\"exam\">\r\n          <Row className=\"exam__title justify-content-center\">\r\n            <Col xs=\"auto\">\r\n              <h4>Exam Name</h4>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"exam__question\">\r\n            <Col>\r\n              <h5>{questions[index].q}</h5>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"exam__options\">\r\n            <Col xs={12}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <RadioGroup\r\n                  aria-label=\"ans\"\r\n                  name=\"ans\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                >\r\n                  <Row className=\"option\" xs={12}>\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optA\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option A\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"option\">\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optB\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option B\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"option\">\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optC\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option C\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"option\">\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optD\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option D\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"exam__buttons d-flex justify-content-between\">\r\n            <Col>\r\n              <span className=\"timer\">\r\n                <b>00:00</b>\r\n              </span>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"contained\" color=\"default\" onClick={nextQuestion} disableElevation disabled={index+1 == questions.length && true}>\r\n                Next\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\Exam.js",["150","151","152","153","154"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Exam(props) {\r\n  // const { match } = props;\r\n\r\n  // console.log(\"Exam id\",match);\r\n  console.log(\"props... \", props);\r\n\r\n  let { id } = useParams();\r\n  console.log(\"ID\", id);\r\n\r\n  const [examData, setExamData] = useState(null);\r\n\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props.userInfo)\r\n      axios.get(`${props.userInfo.role}/exam/${id}`).then((response) => {\r\n        const data = response.data;\r\n        setExamData(data.result.data);\r\n      });\r\n  }, []);\r\n\r\n  console.log(\"Exam Data\", examData);\r\n\r\n  let examQuestionUi;\r\n\r\n  if (examData && examData.mcqQuestions) {\r\n    examQuestionUi = examData.mcqQuestions.map((question) => {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography>{question.mcqQuestionId.description}</Typography>\r\n\r\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\r\n\r\n            <List>\r\n              {question.mcqQuestionId.options.map((options) => {\r\n                return (\r\n                  <ListItem>\r\n                    <CardActions Button>{options.option}</CardActions>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </CardContent>\r\n          <Divider />\r\n        </Card>\r\n      );\r\n    });\r\n  } else if (examData && examData.cqQuestions) {\r\n    examQuestionUi = examData.cqQuestions.map((question) => {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography>{question.cqQuestionId.description}</Typography>\r\n\r\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\r\n            <TextField\r\n              id=\"outlined-textarea\"\r\n              label=\"Ans\"\r\n              placeholder=\"Write here\"\r\n              multiline\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n          <Divider />\r\n        </Card>\r\n      );\r\n    });\r\n  }\r\n\r\n  let x = 0;\r\n\r\n  if (examData)\r\n    setInterval(() => {\r\n      const date = new Date();\r\n      setTimer(date.getSeconds());\r\n    }, 1000);\r\n\r\n  if (examData)\r\n    return (\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <Paper>\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                {examData.name}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper>\r\n              {\" \"}\r\n              <h3>{timer}</h3>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid>{examQuestionUi}</Grid>\r\n        <Button onClick={() => x++}>Next</Button>\r\n      </Container>\r\n    );\r\n  else return <CircularProgress />;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\Result.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Loader.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\ExamType.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":22},{"ruleId":"159","severity":1,"message":"163","line":28,"column":9,"nodeType":"161","messageId":"162","endLine":28,"endColumn":17},{"ruleId":"159","severity":1,"message":"164","line":30,"column":25,"nodeType":"161","messageId":"162","endLine":30,"endColumn":41},{"ruleId":"159","severity":1,"message":"165","line":32,"column":7,"nodeType":"161","messageId":"162","endLine":32,"endColumn":16},{"ruleId":"159","severity":1,"message":"166","line":60,"column":9,"nodeType":"161","messageId":"162","endLine":60,"endColumn":26},{"ruleId":"167","severity":1,"message":"168","line":26,"column":3,"nodeType":"169","messageId":"170","endLine":26,"endColumn":7},{"ruleId":"171","severity":1,"message":"172","line":120,"column":30,"nodeType":"173","messageId":"174","endLine":120,"endColumn":52,"fix":"175"},{"ruleId":"171","severity":1,"message":"172","line":122,"column":30,"nodeType":"173","messageId":"174","endLine":122,"endColumn":43,"fix":"176"},{"ruleId":"177","severity":1,"message":"178","line":69,"column":43,"nodeType":"179","endLine":69,"endColumn":66},{"ruleId":"180","severity":1,"message":"181","line":103,"column":32,"nodeType":"182","messageId":"170","endLine":103,"endColumn":34},{"ruleId":"177","severity":1,"message":"178","line":152,"column":13,"nodeType":"179","endLine":152,"endColumn":34},{"ruleId":"159","severity":1,"message":"183","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":25,"column":6,"nodeType":"186","endLine":25,"endColumn":8,"suggestions":"187"},{"ruleId":"167","severity":1,"message":"168","line":36,"column":3,"nodeType":"169","messageId":"170","endLine":36,"endColumn":7},{"ruleId":"159","severity":1,"message":"188","line":81,"column":7,"nodeType":"161","messageId":"162","endLine":81,"endColumn":11},{"ruleId":"159","severity":1,"message":"189","line":99,"column":10,"nodeType":"161","messageId":"162","endLine":99,"endColumn":23},{"ruleId":"159","severity":1,"message":"190","line":99,"column":25,"nodeType":"161","messageId":"162","endLine":99,"endColumn":41},{"ruleId":"159","severity":1,"message":"191","line":220,"column":11,"nodeType":"161","messageId":"162","endLine":220,"endColumn":24},{"ruleId":"192","severity":1,"message":"193","line":273,"column":51,"nodeType":"194","messageId":"195","endLine":273,"endColumn":53},{"ruleId":"180","severity":1,"message":"196","line":274,"column":15,"nodeType":"182","messageId":"170","endLine":274,"endColumn":17},{"ruleId":"192","severity":1,"message":"197","line":44,"column":39,"nodeType":"194","messageId":"198","endLine":44,"endColumn":41},{"ruleId":"192","severity":1,"message":"197","line":46,"column":38,"nodeType":"194","messageId":"198","endLine":46,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":48,"column":27,"nodeType":"182","messageId":"170","endLine":48,"endColumn":29},{"ruleId":"192","severity":1,"message":"197","line":53,"column":39,"nodeType":"194","messageId":"198","endLine":53,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":55,"column":27,"nodeType":"182","messageId":"170","endLine":55,"endColumn":29},{"ruleId":"159","severity":1,"message":"199","line":4,"column":3,"nodeType":"161","messageId":"162","endLine":4,"endColumn":9},{"ruleId":"159","severity":1,"message":"200","line":8,"column":3,"nodeType":"161","messageId":"162","endLine":8,"endColumn":8},{"ruleId":"159","severity":1,"message":"201","line":10,"column":3,"nodeType":"161","messageId":"162","endLine":10,"endColumn":10},{"ruleId":"159","severity":1,"message":"202","line":13,"column":3,"nodeType":"161","messageId":"162","endLine":13,"endColumn":12},{"ruleId":"159","severity":1,"message":"203","line":16,"column":3,"nodeType":"161","messageId":"162","endLine":16,"endColumn":15},{"ruleId":"159","severity":1,"message":"204","line":18,"column":3,"nodeType":"161","messageId":"162","endLine":18,"endColumn":13},{"ruleId":"159","severity":1,"message":"205","line":19,"column":3,"nodeType":"161","messageId":"162","endLine":19,"endColumn":10},{"ruleId":"159","severity":1,"message":"206","line":68,"column":9,"nodeType":"161","messageId":"162","endLine":68,"endColumn":15},{"ruleId":"159","severity":1,"message":"207","line":75,"column":10,"nodeType":"161","messageId":"162","endLine":75,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":88,"column":34,"nodeType":"182","messageId":"170","endLine":88,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":105,"column":34,"nodeType":"182","messageId":"170","endLine":105,"endColumn":36},{"ruleId":"184","severity":1,"message":"208","line":113,"column":6,"nodeType":"186","endLine":113,"endColumn":8,"suggestions":"209"},{"ruleId":"159","severity":1,"message":"210","line":95,"column":10,"nodeType":"161","messageId":"162","endLine":95,"endColumn":21},{"ruleId":"159","severity":1,"message":"211","line":20,"column":12,"nodeType":"161","messageId":"162","endLine":20,"endColumn":17},{"ruleId":"159","severity":1,"message":"212","line":22,"column":11,"nodeType":"161","messageId":"162","endLine":22,"endColumn":23},{"ruleId":"184","severity":1,"message":"213","line":38,"column":30,"nodeType":"161","endLine":38,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":15,"column":18,"nodeType":"182","messageId":"170","endLine":15,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":13,"column":3,"nodeType":"216","messageId":"217","endLine":15,"endColumn":4},{"ruleId":"159","severity":1,"message":"218","line":173,"column":11,"nodeType":"161","messageId":"162","endLine":173,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":113,"column":117,"nodeType":"182","messageId":"170","endLine":113,"endColumn":119},{"ruleId":"159","severity":1,"message":"183","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":23},{"ruleId":"159","severity":1,"message":"219","line":15,"column":3,"nodeType":"161","messageId":"162","endLine":15,"endColumn":7},{"ruleId":"159","severity":1,"message":"220","line":16,"column":3,"nodeType":"161","messageId":"162","endLine":16,"endColumn":11},{"ruleId":"159","severity":1,"message":"221","line":45,"column":9,"nodeType":"161","messageId":"162","endLine":45,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":53,"column":6,"nodeType":"186","endLine":53,"endColumn":8,"suggestions":"222"},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'socketIOClient' is defined but never used.","Identifier","unusedVar","'ENDPOINT' is assigned a value but never used.","'setnotifications' is assigned a value but never used.","'socketRef' is assigned a value but never used.","'createCourseModal' is assigned a value but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"225","text":"226"},{"range":"227","text":"226"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["228"],"'days' is assigned a value but never used.","'timerDeadline' is assigned a value but never used.","'setTimerDeadLine' is assigned a value but never used.","'reloadHandler' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Button' is defined but never used.","'Modal' is defined but never used.","'Spinner' is defined but never used.","'Jumbotron' is defined but never used.","'TabContainer' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'userId' is assigned a value but never used.","'cqExamsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array.",["229"],"'isApiLoaded' is assigned a value but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'questionsCreated' is assigned a value but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.",["230"],"no-global-assign","no-unsafe-negation",[2995,3004],"\"error\"",[3064,3073],{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"231","fix":"235"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"236","text":"237"},"Update the dependencies array to be: [id, role]",{"range":"238","text":"239"},{"range":"240","text":"237"},[766,768],"[id, props.userInfo]",[2525,2527],"[id, role]",[1090,1092]]