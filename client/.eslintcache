<<<<<<< HEAD
[{"E:\\Project 350\\WillChange\\client\\src\\index.js":"1","E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js":"2","E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js":"3","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js":"4","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js":"5","E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js":"6","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js":"7","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js":"8","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js":"9","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\Forms.js":"10","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js":"11","E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\Exam.js":"12"},{"size":604,"mtime":1611851509922,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1611586567836,"results":"15","hashOfConfig":"14"},{"size":2921,"mtime":1612440252525,"results":"16","hashOfConfig":"14"},{"size":9501,"mtime":1611918828693,"results":"17","hashOfConfig":"14"},{"size":4296,"mtime":1611918736868,"results":"18","hashOfConfig":"14"},{"size":4523,"mtime":1612434400513,"results":"19","hashOfConfig":"14"},{"size":4457,"mtime":1612272425155,"results":"20","hashOfConfig":"14"},{"size":869,"mtime":1612439044071,"results":"21","hashOfConfig":"14"},{"size":4180,"mtime":1612436439788,"results":"22","hashOfConfig":"14"},{"size":6193,"mtime":1611918736660,"results":"23","hashOfConfig":"14"},{"size":2591,"mtime":1612438299092,"results":"24","hashOfConfig":"14"},{"size":3254,"mtime":1612434400512,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vw26ma",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"E:\\Project 350\\WillChange\\client\\src\\index.js",[],["56","57"],"E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js",[],"E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js",["58","59","60"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Forms from \"./Forms\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"./SignIn.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    // width: \"15vw\",\r\n    // margin: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  shadows: [\"none\"],\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    role: \"\",\r\n    designation: \"\",\r\n    university: \"\",\r\n    department: \"\",\r\n    session: \"\",\r\n    regNo: \"\",\r\n    result: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: apiDomain + \"university/all\",\r\n  //   })\r\n  //     .then((response) => {\r\n  //       // console.log(\"All Universites..\");\r\n\r\n  //       // console.log(response.data);\r\n\r\n  //       const data = response.data;\r\n\r\n  //       if (data.status === \"OK\") {\r\n  //         setUniversities(data.result.data);\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  // console.log(\"API CALL DATA\", universities);\r\n  let history = useHistory();\r\n\r\n  const obj = {\r\n    role: values.role,\r\n    username: values.username,\r\n    email: values.email,\r\n    password: values.password,\r\n    repassword: values.confirmPassword,\r\n    firstName: values.firstName,\r\n    lastName: values.lastName,\r\n    department: values.department,\r\n    registrationNo: parseInt(values.regNo, 10),\r\n    session: values.session,\r\n    varsity: values.university,\r\n    designation: values.designation,\r\n  };\r\n\r\n  const body = JSON.stringify(obj);\r\n\r\n  const handleSignUp = (e) => {\r\n    // console.log('hello')\r\n    fetchData();\r\n    e.preventDefault();\r\n  };\r\n  const fetchData = async () => {\r\n    let endpoint;\r\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\r\n    else endpoint = \"auth/create-student\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: body,\r\n    };\r\n\r\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(\"API data\",data);\r\n\r\n    if (data.status === \"FAILED\")\r\n      setValues({ ...values, [\"error\"]: data.result });\r\n    else {\r\n      setValues({ ...values, [\"error\"]: \"\" });\r\n      const userdata = {\r\n        token: data.result.jwt.token,\r\n        role: data.result.data.role.toLowerCase(),\r\n        id: data.result.data.id,\r\n      };\r\n\r\n      console.log(userdata);\r\n\r\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    }\r\n    \r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  // if (universities)\r\n  return (\r\n    <Container>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item className={classes.textField}>\r\n            <h2>Hello There!!</h2>\r\n            <p>Lets Sign Up to continue</p>\r\n          </Grid>\r\n        </Grid>\r\n        {values.error !== \"\" ? (\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.root}\r\n          >\r\n            <Alert elevation={0} severity=\"error\">\r\n              {values.error}\r\n            </Alert>\r\n          </Grid>\r\n        ) : null}\r\n        <form onSubmit={handleSignUp}>\r\n          <Grid item xs={12}>\r\n            <Forms\r\n              id=\"role\"\r\n              type=\"select\"\r\n              label=\"Role\"\r\n              classes={classes}\r\n              values={values.role}\r\n              handleChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"university\"\r\n                type=\"select\"\r\n                label=\"University\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.university}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                selectedUniversity={values.university}\r\n                id=\"department\"\r\n                type=\"select\"\r\n                label=\"Department\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.department}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {values.role !== \"Teacher\" ? (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"session\"\r\n                  type=\"select\"\r\n                  label=\"Session\"\r\n                  labelWidth={117}\r\n                  classes={classes}\r\n                  values={values.session}\r\n                  handleChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"regNo\"\r\n                  type=\"text\"\r\n                  label=\"Registration No\"\r\n                  labelWidth={120}\r\n                  classes={classes}\r\n                  values={values.regNo}\r\n                  handleChange={handleChange}\r\n                  required={true}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Forms\r\n                id=\"designation\"\r\n                type=\"select\"\r\n                label=\"Designation\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.designation}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"firstName\"\r\n                type=\"text\"\r\n                label=\"First Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.firstName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"lastName\"\r\n                type=\"text\"\r\n                label=\"Last Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.lastName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"username\"\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                labelWidth={84}\r\n                classes={classes}\r\n                values={values.username}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"email\"\r\n                type=\"text\"\r\n                label=\"Email Address\"\r\n                labelWidth={110}\r\n                classes={classes}\r\n                values={values.email}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                labelWidth={80}\r\n                classes={classes}\r\n                values={values.password}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                labelWidth={140}\r\n                classes={classes}\r\n                values={values.confirmPassword}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.textField}>\r\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\r\n              Sign Up\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n  // else return <h1>Loading</h1>;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js",["61","62","63"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport \"./Home.css\";\r\nexport default function Home(props) {\r\n\r\n  const courseHandler = (event) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const [timerDays, setTimerDays] = useState(\"00\");\r\n  const [timerHours, setTimerHours] = useState(\"00\");\r\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\r\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n  let interval = useRef();\r\n\r\n  const timer = () => {\r\n    const seconds = 1000;\r\n    const minutes = seconds * 60;\r\n    const hours = minutes * 60;\r\n    const days = hours * 24;\r\n    const deadline = new Date(\"January 31, 2021 00:00:00\").getTime();\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const timeLeft = deadline - now;\r\n      if (timeLeft < 0) {\r\n        clearInterval(interval.current);\r\n      } else {\r\n        setTimerDays(Math.floor(timeLeft / days));\r\n        setTimerHours(Math.floor((timeLeft % days) / hours));\r\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\r\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\r\n      }\r\n    }, 1000);\r\n  };\r\n  useEffect(() => {\r\n    timer();\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n\r\n  let courseUI;\r\n  let cqExamUI;\r\n  let mcqExamUI;\r\n\r\n  if (props.userInfo) {\r\n    courseUI = props.userInfo.courses.map((course, k) => {\r\n      // console.log(items);\r\n      return (\r\n        <Grid key={k} container alignItems=\"flex-start\">\r\n          <Grid item>\r\n            <SubjectIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <Link href={`/course/${course.course._id}`} >\r\n              <p>{course.course.name}</p>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    cqExamUI = props.userInfo.courses.map((course, i) => {\r\n      return course.course.cqExams.map((exam, j) => {\r\n        console.log(\"EXAM\", exam);\r\n        return (\r\n          <Grid key={i+j} container alignItems=\"flex-start\">\r\n            <Grid item>\r\n              <SubjectIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <p>{exam.examId.name}</p>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      });\r\n    });\r\n\r\n    mcqExamUI = props.userInfo.courses.map((course, i) => {\r\n      return course.course.mcqExams.map((exam, j) => {\r\n        console.log(\"EXAM\", exam);\r\n        return (\r\n          <Grid key={i+j} container alignItems=\"flex-start\">\r\n            <Grid item>\r\n              <SubjectIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <p>{exam.examId.name}</p>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm>\r\n          <h5>My Courses</h5>\r\n          <hr />\r\n          <div>{courseUI}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={5}>\r\n          <h5>Upcoming Exams</h5>\r\n          <hr />\r\n          <div>{mcqExamUI}</div>\r\n          <div className=\"timer-container\">\r\n            <ul>\r\n              <li>\r\n                <span id=\"days\">{timerDays}</span> Days\r\n              </li>\r\n              <li>\r\n                <span id=\"hours\">{timerHours}</span> Hours\r\n              </li>\r\n              <li>\r\n                <span id=\"minutes\">{timerMinutes}</span> Minutes\r\n              </li>\r\n              <li>\r\n                <span id=\"seconds\">{timerSeconds}</span> Seconds\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm>\r\n          <h5>Previous Exams</h5>\r\n          <hr />\r\n          <div>{cqExamUI}</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js",["64","65","66","67"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://localhost:8080/\";\r\n\r\nconst Layout = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [response, setResponse] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"mcqTimeLimit\", (data) => {\r\n      setResponse(data);\r\n      console.log(\"Socket\", data);\r\n    });\r\n    // return socket.disconnect();\r\n  }, []);\r\n\r\n  console.log(\"OO\",response);\r\n\r\n  const SelectForm = () => {\r\n    let items = [];\r\n\r\n    if (props.universityInfo) {\r\n      props.universityInfo.forEach((element) => {\r\n        if (element.shortform === props.userInfo.varsity) {\r\n          element.departments.forEach((dept) => {\r\n            // console.log(dept);\r\n            items.push({\r\n              id: dept._id,\r\n              value: dept.shortform,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl variant=\"outlined\" fullWidth required>\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select value={props.values} label={props.label}>\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  const createCourseModal = (\r\n    <Modal\r\n      show={showModal}\r\n      onHide={handleCloseModal}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Create Course</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control placeholder=\"Course Name\" />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control placeholder=\"Code\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control\r\n                readOnly\r\n                defaultValue={\r\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\r\n                }\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <SelectForm />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\">Understood</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n  if (props.userInfo)\r\n    return (\r\n      <Container bg=\"light\" fluid>\r\n      {/* //   {createCourseModal}\r\n      //   <Row>\r\n      //     <Col md={3}>Courses</Col>\r\n      //     <Col md={6} backgroundColor=\"success\">\r\n      //       All Events\r\n      //       <Button className=\"pull-right light\" onClick={handleShowModal}>\r\n      //         Create Course\r\n      //       </Button> */}\r\n            <div\r\n              className={\r\n                response < 10\r\n                  ? \"alert alert-info\"\r\n                  : response < 20\r\n                  ? \"alert alert-success\"\r\n                  : response < 30\r\n                  ? \"alert alert-primary\"\r\n                  : response < 40\r\n                  ? \"alert alert-secondary\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n            >\r\n              Time countdown : <strong>{response}</strong>\r\n            </div>\r\n      {/* //     </Col>\r\n      //   </Row> */}\r\n       </Container>\r\n    );\r\n  else {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1>Please Login First</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Layout;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js",["68","69"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js",["70","71"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\Forms.js",["72"],"import React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport axios from \"axios\";\r\nimport \"./SignIn.css\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst TextForm = (props) => (\r\n  <FormControl\r\n    className={props.classes.textField}\r\n    variant=\"outlined\"\r\n    fullWidth\r\n    /* error={props.error} */ required={props.required}\r\n  >\r\n    <InputLabel>{props.label}</InputLabel>\r\n    <OutlinedInput\r\n      id={props.id}\r\n      onChange={props.handleChange(props.id)}\r\n      value={props.values}\r\n      labelWidth={props.labelWidth}\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nconst PasswordForm = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <FormControl\r\n      className={props.classes.textField}\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      required\r\n    >\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <OutlinedInput\r\n        id={props.id}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={props.values}\r\n        onChange={props.handleChange(props.id)}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label={\"password\"}\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n              edge=\"end\"\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={props.labelWidth}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Forms = (props) => {\r\n  const type = props.type;\r\n\r\n  const [universities, setUniversities] = useState(null);\r\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: apiDomain + \"university/all\",\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"All Universites..\");\r\n\r\n        // console.log(response.data);\r\n\r\n        const data = response.data;\r\n\r\n        if (data.status === \"OK\") {\r\n          setUniversities(data.result.data.universities);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsApiLoaded(false);\r\n      });\r\n  }, []);\r\n\r\n  const SelectForm = (props) => {\r\n    // console.log(\"COMPONENT : select form\");\r\n    let items = [];\r\n    const id = props.id;\r\n\r\n    if (universities) {\r\n      // console.log(\"Univbersity\", universities);\r\n\r\n      // for (let i = 0; i < universities.length; i++) {\r\n      //   console.log(\"Loop\");\r\n      //   console.log(universities[i]);\r\n      // }\r\n\r\n      if (id === \"role\")\r\n        items = [\r\n          {\r\n            id: \"Teacher\",\r\n            value: \"Teacher\",\r\n          },\r\n          {\r\n            id: \"Student\",\r\n            value: \"Student\",\r\n          },\r\n        ];\r\n      else if (id === \"university\") {\r\n        items = [];\r\n        universities.forEach((element) => {\r\n          items.push({\r\n            id: element._id,\r\n            value: element.shortform,\r\n          });\r\n        });\r\n      } else if (id === \"department\") {\r\n        items = [];\r\n\r\n        if (props.selectedUniversity) {\r\n          // console.log(\"Selected University \", props.selectedUniversity);\r\n          universities.forEach((element) => {\r\n            if (element._id === props.selectedUniversity) {\r\n              element.departments.forEach((dept) => {\r\n                // console.log(dept);\r\n                items.push({\r\n                  id: dept._id,\r\n                  value: dept.shortform,\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else if (id === \"session\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"2016-2017\",\r\n            value: \"2016-2017\",\r\n          },\r\n          {\r\n            id: \"2017-2018\",\r\n            value: \"2017-2018\",\r\n          },\r\n          {\r\n            id: \"2018-2019\",\r\n            value: \"2018-2019\",\r\n          },\r\n          {\r\n            id: \"2020-2021\",\r\n            value: \"2020-2021\",\r\n          },\r\n        ];\r\n      } else if (id === \"designation\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"Department Head\",\r\n            value: \"Department Head\",\r\n          },\r\n          {\r\n            id: \"Professor\",\r\n            value: \"Professor\",\r\n          },\r\n          {\r\n            id: \"Assistant Professor\",\r\n            value: \"Assistant Professor\",\r\n          },\r\n          {\r\n            id: \"Lecturer\",\r\n            value: \"Lecturer\",\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl\r\n        variant=\"outlined\"\r\n        className={props.classes.textField}\r\n        fullWidth\r\n        required\r\n      >\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select\r\n          id={id}\r\n          value={props.values}\r\n          onChange={props.handleChange(id)}\r\n          label={props.label}\r\n        >\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  if (type === \"text\") {\r\n    return <TextForm {...props} />;\r\n  } else if (type === \"password\") {\r\n    return <PasswordForm {...props} />;\r\n  } else {\r\n    return <SelectForm {...props} />;\r\n  }\r\n};\r\n\r\nexport default Forms;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\Exam.js",["73","74","75","76","77"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Exam(props) {\r\n  const { match } = props;\r\n\r\n  let { id } = match.params;\r\n  // console.log(\"ID\", id);\r\n\r\n  const [examData, setExamData] = useState(null);\r\n\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    axios.get(`student/exam/${id}`).then((response) => {\r\n      const data = response.data;\r\n      setExamData(data.result.data);\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"Exam Data\", examData);\r\n\r\n  let examQuestionUi;\r\n\r\n  if (examData && examData.mcqQuestions) {\r\n    examQuestionUi = examData.mcqQuestions.map((question) => {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography>{question.mcqQuestionId.description}</Typography>\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <List>\r\n              {question.mcqQuestionId.options.map((options) => {\r\n                return (\r\n                  <ListItem>\r\n                    <CardActions Button>{options.option}</CardActions>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </CardContent>\r\n          <Divider />\r\n        </Card>\r\n      );\r\n    });\r\n  } else if (examData && examData.cqQuestions) {\r\n    examQuestionUi = examData.cqQuestions.map((question) => {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography>{question.cqQuestionId.description}</Typography>\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <TextField\r\n              id=\"outlined-textarea\"\r\n              label=\"Ans\"\r\n              placeholder=\"Write here\"\r\n              multiline\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n          <Divider />\r\n        </Card>\r\n      );\r\n    });\r\n  }\r\n\r\n  let x = 0;\r\n\r\n  setInterval(() => {\r\n    const date = new Date();\r\n    setTimer(date.getSeconds());\r\n  }, 1000);\r\n\r\n  if (examData)\r\n    return (\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <Paper>\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                {examData.name}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper>\r\n              {\" \"}\r\n              <h3>{timer}</h3>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid>{examQuestionUi}</Grid>\r\n        <Button onClick={() => x++}>Next</Button>\r\n      </Container>\r\n    );\r\n  else return <CircularProgress />;\r\n}\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":26,"column":3,"nodeType":"84","messageId":"85","endLine":26,"endColumn":7},{"ruleId":"86","severity":1,"message":"87","line":120,"column":30,"nodeType":"88","messageId":"89","endLine":120,"endColumn":52,"fix":"90"},{"ruleId":"86","severity":1,"message":"87","line":122,"column":30,"nodeType":"88","messageId":"89","endLine":122,"endColumn":43,"fix":"91"},{"ruleId":"92","severity":1,"message":"93","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":22},{"ruleId":"92","severity":1,"message":"96","line":10,"column":9,"nodeType":"94","messageId":"95","endLine":10,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":43,"column":30,"nodeType":"94","endLine":43,"endColumn":37},{"ruleId":"92","severity":1,"message":"99","line":10,"column":3,"nodeType":"94","messageId":"95","endLine":10,"endColumn":10},{"ruleId":"92","severity":1,"message":"100","line":19,"column":8,"nodeType":"94","messageId":"95","endLine":19,"endColumn":24},{"ruleId":"92","severity":1,"message":"101","line":29,"column":9,"nodeType":"94","messageId":"95","endLine":29,"endColumn":24},{"ruleId":"92","severity":1,"message":"102","line":83,"column":9,"nodeType":"94","messageId":"95","endLine":83,"endColumn":26},{"ruleId":"92","severity":1,"message":"103","line":3,"column":17,"nodeType":"94","messageId":"95","endLine":3,"endColumn":23},{"ruleId":"97","severity":1,"message":"104","line":21,"column":6,"nodeType":"105","endLine":21,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":69,"column":43,"nodeType":"109","endLine":69,"endColumn":66},{"ruleId":"110","severity":1,"message":"111","line":103,"column":32,"nodeType":"112","messageId":"85","endLine":103,"endColumn":34},{"ruleId":"92","severity":1,"message":"113","line":78,"column":10,"nodeType":"94","messageId":"95","endLine":78,"endColumn":21},{"ruleId":"92","severity":1,"message":"103","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":23},{"ruleId":"92","severity":1,"message":"114","line":15,"column":3,"nodeType":"94","messageId":"95","endLine":15,"endColumn":7},{"ruleId":"92","severity":1,"message":"115","line":16,"column":3,"nodeType":"94","messageId":"95","endLine":16,"endColumn":11},{"ruleId":"92","severity":1,"message":"116","line":41,"column":9,"nodeType":"94","messageId":"95","endLine":41,"endColumn":16},{"ruleId":"97","severity":1,"message":"117","line":48,"column":6,"nodeType":"105","endLine":48,"endColumn":8,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"121","text":"122"},{"range":"123","text":"122"},"no-unused-vars","'AssignmentIcon' is defined but never used.","Identifier","unusedVar","'courseHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'Spinner' is defined but never used.","'CircularProgress' is defined but never used.","'handleShowModal' is assigned a value but never used.","'createCourseModal' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["124"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'isApiLoaded' is assigned a value but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["125"],"no-global-assign","no-unsafe-negation",[2986,2995],"\"error\"",[3055,3064],{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"130","text":"131"},"Update the dependencies array to be: [id]",{"range":"132","text":"133"},[696,698],"[id, props.userInfo]",[922,924],"[id]"]
=======
[{"/home/jspw/Documents/Projects/Project 350/client/src/index.js":"1","/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js":"2","/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js":"3","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js":"4","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js":"5","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js":"6","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js":"7","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js":"8","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/Forms.js":"9","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js":"10","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js":"11","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js":"12"},{"size":578,"mtime":1611951963348,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611434180840,"results":"15","hashOfConfig":"14"},{"size":2808,"mtime":1612438149952,"results":"16","hashOfConfig":"14"},{"size":4029,"mtime":1612438149952,"results":"17","hashOfConfig":"14"},{"size":4142,"mtime":1611952005316,"results":"18","hashOfConfig":"14"},{"size":4371,"mtime":1612287293930,"results":"19","hashOfConfig":"14"},{"size":4286,"mtime":1612116206385,"results":"20","hashOfConfig":"14"},{"size":9177,"mtime":1611952013500,"results":"21","hashOfConfig":"14"},{"size":5956,"mtime":1611866114311,"results":"22","hashOfConfig":"14"},{"size":842,"mtime":1612289684358,"results":"23","hashOfConfig":"14"},{"size":3118,"mtime":1612285249579,"results":"24","hashOfConfig":"14"},{"size":2287,"mtime":1612438149952,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kvcbqu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"/home/jspw/Documents/Projects/Project 350/client/src/index.js",[],["59","60"],"/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js",["61","62"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\n\nlet navElements;\n\nexport default function Navigation(props) {\n  let history = useHistory();\n  const [showSign, setShowSign] = useState(true);\n  const navChange = () => setShowSign(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [anchor, setAnchor] = React.useState(null);\n  const isNotificationOpen = Boolean(anchor);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleNotificationMenuOpen = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setAnchor(null);\n  };\n\n  const handleSignout = () => {\n    localStorage.clear();\n    // props.login.isLogin = \"Failed\";\n    window.location.reload();\n    history.push(\"/\");\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"profile-menu\"\n      keepMounted\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      style={{ width: \"340px\" }}\n    >\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\n        Profile\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\n        Sign Out\n      </MenuItem>\n    </Menu>\n  );\n\n  const renderNotificationMenu = (\n    <Menu\n      anchorEl={anchor}\n      id=\"notification menu\"\n      open={isNotificationOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <MenuItem onClick={handleMenuClose}>Notification 1</MenuItem>\n    </Menu>\n  );\n\n  console.log(\"Login status\", props.loginStatus);\n\n  if (props.loginStatus == null) {\n    navElements = (\n      <>\n        <Spinner animation=\"grow\" />\n      </>\n    );\n  } else if (props.loginStatus == \"OK\") {\n    navElements = (\n      <>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotificationMenuOpen}\n        >\n          <Badge badgeContent={17} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          // aria-controls={menuId}\n          aria-haspopup=\"true\"\n          onClick={handleProfileMenuOpen}\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\n        {renderNotificationMenu}\n        {renderProfileMenu}\n      </>\n    );\n  } else {\n    navElements = (\n      <>\n        <Link to=\"signUp\" onClick={navChange}>\n          <MenuItem> Sign Up</MenuItem>\n        </Link>\n        <Link to=\"signIn\" onClick={navChange}>\n          <MenuItem>Sign In</MenuItem>\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <Navbar bg=\"light\">\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\n        Name\n      </Navbar.Brand>\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\n    </Navbar>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js",["63","64","65","66"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n// import Link from \"@material-ui/core/Link\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport \"./Home.css\";\nexport default function Home(props) {\n  const reloadHandler = (event) => {\n    event.preventDefault();\n  };\n\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n  let interval = useRef();\n\n  const timer = () => {\n    const seconds = 1000;\n    const minutes = seconds * 60;\n    const hours = minutes * 60;\n    const days = hours * 24;\n    const deadline = new Date(\"January 31, 2021 00:00:00\").getTime();\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = deadline - now;\n      if (timeLeft < 0) {\n        clearInterval(interval.current);\n      } else {\n        setTimerDays(Math.floor(timeLeft / days));\n        setTimerHours(Math.floor((timeLeft % days) / hours));\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\n      }\n    }, 1000);\n  };\n  useEffect(() => {\n    timer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  let courseUI;\n  let cqExamUI;\n  let mcqExamUI;\n\n  // console.log(\"Userinfo\", userInfo);\n\n  if (props.userInfo) {\n    if (props.userInfo.courses)\n      courseUI = props.userInfo.courses.map((course, k) => {\n        // console.log(items);\n        return (\n          <Grid key={k} container alignItems=\"flex-start\">\n            <Grid item>\n              <SubjectIcon />\n            </Grid>\n            <Grid item>\n              <Link to={`/course/${course.course._id}`}>\n                <p>{course.course.name}</p>\n              </Link>\n\n              {/* <Link\n                onClick={reloadHandler}\n                href={`/course/${course.course._id}`}\n              >\n                <p>{course.course.name}</p>\n              </Link> */}\n            </Grid>\n          </Grid>\n        );\n      });\n\n    cqExamUI = props.userInfo.courses.map((course, i) => {\n      return course.course.cqExams.map((exam, j) => {\n        console.log(\"EXAM\", exam);\n        return (\n          <Grid key={i + j} container alignItems=\"flex-start\">\n            <Grid item>\n              <SubjectIcon />\n            </Grid>\n            <Grid item>\n              <Link to={`/exam/${exam.examId._id}`}>\n                <p>{exam.examId.name}</p>\n              </Link>\n            </Grid>\n          </Grid>\n        );\n      });\n    });\n\n    mcqExamUI = props.userInfo.courses.map((course, i) => {\n      return course.course.mcqExams.map((exam, j) => {\n        console.log(\"EXAM\", exam);\n        return (\n          <Grid key={i + j} container alignItems=\"flex-start\">\n            <Grid item>\n              <SubjectIcon />\n            </Grid>\n            <Grid item>\n              <Link to={`/exam/${exam.examId._id}`}>\n                <p>{exam.examId.name}</p>\n              </Link>\n            </Grid>\n          </Grid>\n        );\n      });\n    });\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm>\n          <h5>My Courses</h5>\n          <hr />\n          <div>{courseUI}</div>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <h5>Upcoming Exams</h5>\n          <hr />\n          <div>{mcqExamUI}</div>\n          <div className=\"timer-container\">\n            <ul>\n              <li>\n                <span id=\"days\">{timerDays}</span> Days\n              </li>\n              <li>\n                <span id=\"hours\">{timerHours}</span> Hours\n              </li>\n              <li>\n                <span id=\"minutes\">{timerMinutes}</span> Minutes\n              </li>\n              <li>\n                <span id=\"seconds\">{timerSeconds}</span> Seconds\n              </li>\n            </ul>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm>\n          <h5>Previous Exams</h5>\n          <hr />\n          <div>{cqExamUI}</div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js",["67","68","69","70"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://localhost:8080/\";\n\nconst Layout = (props) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  const [response, setResponse] = useState(1);\n\n  const [examInfo, setExamInfo] = useState(null);\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"test\", (data) => {\n      setResponse(data);\n      // console.log(\"Socket\", data);\n    });\n\n    socket.on(\"exam\", (data) => {\n      setExamInfo(data);\n    });\n    // return socket.disconnect();\n  }, []);\n\n  console.log(\"exam\", examInfo);\n\n  const SelectForm = () => {\n    let items = [];\n\n    if (props.universityInfo) {\n      props.universityInfo.forEach((element) => {\n        if (element.shortform === props.userInfo.varsity) {\n          element.departments.forEach((dept) => {\n            // console.log(dept);\n            items.push({\n              id: dept._id,\n              value: dept.shortform,\n            });\n          });\n        }\n      });\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl variant=\"outlined\" fullWidth required>\n        <InputLabel>{props.label}</InputLabel>\n        <Select value={props.values} label={props.label}>\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  const createCourseModal = (\n    <Modal\n      show={showModal}\n      onHide={handleCloseModal}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Create Course</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Control placeholder=\"Course Name\" />\n            </Col>\n            <Col>\n              <Form.Control placeholder=\"Code\" />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                readOnly\n                defaultValue={\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\n                }\n              />\n            </Col>\n            <Col>\n              <SelectForm />\n            </Col>\n          </Row>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\">Understood</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n  if (props.userInfo)\n    return (\n      <Container bg=\"light\" fluid>\n        {/* //   {createCourseModal}\n      //   <Row>\n      //     <Col md={3}>Courses</Col>\n      //     <Col md={6} backgroundColor=\"success\">\n      //       All Events\n      //       <Button className=\"pull-right light\" onClick={handleShowModal}>\n      //         Create Course\n      //       </Button> */}\n        <div\n          className={\n            response < 10\n              ? \"alert alert-info\"\n              : response < 20\n              ? \"alert alert-success\"\n              : response < 30\n              ? \"alert alert-primary\"\n              : response < 40\n              ? \"alert alert-secondary\"\n              : \"alert alert-danger\"\n          }\n        >\n          Time countdown : <strong>{response}</strong>\n        </div>\n        {/* //     </Col>\n      //   </Row> */}\n      </Container>\n    );\n  else {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h1>Please Login First</h1>\n      </div>\n    );\n  }\n};\n\nexport default Layout;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js",["71","72","73"],"import React, { useState } from \"react\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Forms from \"./Forms\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./SignIn.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    // margin: theme.spacing(1),\n  },\n  textField: {\n    // width: \"15vw\",\n    // margin: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  shadows: [\"none\"],\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    role: \"\",\n    designation: \"\",\n    university: \"\",\n    department: \"\",\n    session: \"\",\n    regNo: \"\",\n    result: \"\",\n    error: \"\",\n  });\n\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: apiDomain + \"university/all\",\n  //   })\n  //     .then((response) => {\n  //       // console.log(\"All Universites..\");\n\n  //       // console.log(response.data);\n\n  //       const data = response.data;\n\n  //       if (data.status === \"OK\") {\n  //         setUniversities(data.result.data);\n  //       }\n  //     })\n  //     .catch((error) => console.log(error));\n  // }, []);\n\n  // console.log(\"API CALL DATA\", universities);\n  let history = useHistory();\n\n  const obj = {\n    role: values.role,\n    username: values.username,\n    email: values.email,\n    password: values.password,\n    repassword: values.confirmPassword,\n    firstName: values.firstName,\n    lastName: values.lastName,\n    department: values.department,\n    registrationNo: parseInt(values.regNo, 10),\n    session: values.session,\n    varsity: values.university,\n    designation: values.designation,\n  };\n\n  const body = JSON.stringify(obj);\n\n  const handleSignUp = (e) => {\n    // console.log('hello')\n    fetchData();\n    e.preventDefault();\n  };\n  const fetchData = async () => {\n    let endpoint;\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\n    else endpoint = \"auth/create-student\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: body,\n    };\n\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\n\n    const data = await response.json();\n\n    console.log(\"API data\",data);\n\n    if (data.status === \"FAILED\")\n      setValues({ ...values, [\"error\"]: data.result });\n    else {\n      setValues({ ...values, [\"error\"]: \"\" });\n      const userdata = {\n        token: data.result.jwt.token,\n        role: data.result.data.role.toLowerCase(),\n        id: data.result.data.id,\n      };\n\n      console.log(userdata);\n\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\n      history.push(\"/\");\n      window.location.reload();\n    }\n    \n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  // if (universities)\n  return (\n    <Container>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.textField}>\n            <h2>Hello There!!</h2>\n            <p>Lets Sign Up to continue</p>\n          </Grid>\n        </Grid>\n        {values.error !== \"\" ? (\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.root}\n          >\n            <Alert elevation={0} severity=\"error\">\n              {values.error}\n            </Alert>\n          </Grid>\n        ) : null}\n        <form onSubmit={handleSignUp}>\n          <Grid item xs={12}>\n            <Forms\n              id=\"role\"\n              type=\"select\"\n              label=\"Role\"\n              classes={classes}\n              values={values.role}\n              handleChange={handleChange}\n            />\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"university\"\n                type=\"select\"\n                label=\"University\"\n                labelWidth={117}\n                classes={classes}\n                values={values.university}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                selectedUniversity={values.university}\n                id=\"department\"\n                type=\"select\"\n                label=\"Department\"\n                labelWidth={117}\n                classes={classes}\n                values={values.department}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          {values.role !== \"Teacher\" ? (\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"session\"\n                  type=\"select\"\n                  label=\"Session\"\n                  labelWidth={117}\n                  classes={classes}\n                  values={values.session}\n                  handleChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"regNo\"\n                  type=\"text\"\n                  label=\"Registration No\"\n                  labelWidth={120}\n                  classes={classes}\n                  values={values.regNo}\n                  handleChange={handleChange}\n                  required={true}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12}>\n              <Forms\n                id=\"designation\"\n                type=\"select\"\n                label=\"Designation\"\n                labelWidth={117}\n                classes={classes}\n                values={values.designation}\n                handleChange={handleChange}\n              />\n            </Grid>\n          )}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"firstName\"\n                type=\"text\"\n                label=\"First Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.firstName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"lastName\"\n                type=\"text\"\n                label=\"Last Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.lastName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"username\"\n                type=\"text\"\n                label=\"Username\"\n                labelWidth={84}\n                classes={classes}\n                values={values.username}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                labelWidth={110}\n                classes={classes}\n                values={values.email}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                labelWidth={80}\n                classes={classes}\n                values={values.password}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                labelWidth={140}\n                classes={classes}\n                values={values.confirmPassword}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.textField}>\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\n              Sign Up\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n  // else return <h1>Loading</h1>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/Forms.js",["74"],"import React, { useState, useEffect } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport \"./SignIn.css\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst TextForm = (props) => (\n  <FormControl\n    className={props.classes.textField}\n    variant=\"outlined\"\n    fullWidth\n    /* error={props.error} */ required={props.required}\n  >\n    <InputLabel>{props.label}</InputLabel>\n    <OutlinedInput\n      id={props.id}\n      onChange={props.handleChange(props.id)}\n      value={props.values}\n      labelWidth={props.labelWidth}\n    />\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      className={props.classes.textField}\n      variant=\"outlined\"\n      fullWidth\n      required\n    >\n      <InputLabel>{props.label}</InputLabel>\n      <OutlinedInput\n        id={props.id}\n        type={showPassword ? \"text\" : \"password\"}\n        value={props.values}\n        onChange={props.handleChange(props.id)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label={\"password\"}\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={props.labelWidth}\n      />\n    </FormControl>\n  );\n};\n\nconst Forms = (props) => {\n  const type = props.type;\n\n  const [universities, setUniversities] = useState(null);\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\n\n  // console.log(props);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: apiDomain + \"university/all\",\n    })\n      .then((response) => {\n        // console.log(\"All Universites..\");\n\n        // console.log(response.data);\n\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversities(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsApiLoaded(false);\n      });\n  }, []);\n\n  const SelectForm = (props) => {\n    // console.log(\"COMPONENT : select form\");\n    let items = [];\n    const id = props.id;\n\n    if (universities) {\n      // console.log(\"Univbersity\", universities);\n\n      // for (let i = 0; i < universities.length; i++) {\n      //   console.log(\"Loop\");\n      //   console.log(universities[i]);\n      // }\n\n      if (id === \"role\")\n        items = [\n          {\n            id: \"Teacher\",\n            value: \"Teacher\",\n          },\n          {\n            id: \"Student\",\n            value: \"Student\",\n          },\n        ];\n      else if (id === \"university\") {\n        items = [];\n        universities.forEach((element) => {\n          items.push({\n            id: element._id,\n            value: element.shortform,\n          });\n        });\n      } else if (id === \"department\") {\n        items = [];\n\n        if (props.selectedUniversity) {\n          // console.log(\"Selected University \", props.selectedUniversity);\n          universities.forEach((element) => {\n            if (element._id === props.selectedUniversity) {\n              element.departments.forEach((dept) => {\n                // console.log(dept);\n                items.push({\n                  id: dept._id,\n                  value: dept.shortform,\n                });\n              });\n            }\n          });\n        }\n      } else if (id === \"session\") {\n        items = [];\n        items = [\n          {\n            id: \"2016-2017\",\n            value: \"2016-2017\",\n          },\n          {\n            id: \"2017-2018\",\n            value: \"2017-2018\",\n          },\n          {\n            id: \"2018-2019\",\n            value: \"2018-2019\",\n          },\n          {\n            id: \"2020-2021\",\n            value: \"2020-2021\",\n          },\n        ];\n      } else if (id === \"designation\") {\n        items = [];\n        items = [\n          {\n            id: \"Department Head\",\n            value: \"Department Head\",\n          },\n          {\n            id: \"Professor\",\n            value: \"Professor\",\n          },\n          {\n            id: \"Assistant Professor\",\n            value: \"Assistant Professor\",\n          },\n          {\n            id: \"Lecturer\",\n            value: \"Lecturer\",\n          },\n        ];\n      }\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl\n        variant=\"outlined\"\n        className={props.classes.textField}\n        fullWidth\n        required\n      >\n        <InputLabel>{props.label}</InputLabel>\n        <Select\n          id={id}\n          value={props.values}\n          onChange={props.handleChange(id)}\n          label={props.label}\n        >\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  if (type === \"text\") {\n    return <TextForm {...props} />;\n  } else if (type === \"password\") {\n    return <PasswordForm {...props} />;\n  } else {\n    return <SelectForm {...props} />;\n  }\n};\n\nexport default Forms;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js",["75","76"],"import { CircularProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\n\nexport default function Course(props) {\n  let { id } = useParams();\n\n  const [courseData, setCourseData] = useState(null);\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios.get(`${props.userInfo.role.toLowerCase()}/course/${id}`).then((response) => {\n        const data = response.data;\n        console.log(data);\n        if (data.status === \"OK\") setCourseData(data.result.data);\n      }).catch(error=>{\n        console.log(error);\n      });\n  }, []);\n\n  console.log(\"Course Data\", courseData);\n\n  if (courseData) return <Sidebar courseData={courseData} />;\n  else return <CircularProgress></CircularProgress>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js",["77","78","79","80","81"],"import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Exam(props) {\n  // const { match } = props;\n\n  // console.log(\"Exam id\",match);\n  console.log(\"props... \", props);\n\n  let { id } = useParams();\n  console.log(\"ID\", id);\n\n  const [examData, setExamData] = useState(null);\n\n  const [timer, setTimer] = useState(null);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios.get(`${props.userInfo.role}/exam/${id}`).then((response) => {\n        const data = response.data;\n        setExamData(data.result.data);\n      });\n  }, []);\n\n  console.log(\"Exam Data\", examData);\n\n  let examQuestionUi;\n\n  if (examData && examData.mcqQuestions) {\n    examQuestionUi = examData.mcqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.mcqQuestionId.description}</Typography>\n\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\n\n            <List>\n              {question.mcqQuestionId.options.map((options) => {\n                return (\n                  <ListItem>\n                    <CardActions Button>{options.option}</CardActions>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  } else if (examData && examData.cqQuestions) {\n    examQuestionUi = examData.cqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.cqQuestionId.description}</Typography>\n\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\n            <TextField\n              id=\"outlined-textarea\"\n              label=\"Ans\"\n              placeholder=\"Write here\"\n              multiline\n              variant=\"outlined\"\n            />\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  }\n\n  let x = 0;\n\n  if (examData)\n    setInterval(() => {\n      const date = new Date();\n      setTimer(date.getSeconds());\n    }, 1000);\n\n  if (examData)\n    return (\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={8}>\n            <Paper>\n              <Typography variant=\"h2\" component=\"h2\">\n                {examData.name}\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper>\n              {\" \"}\n              <h3>{timer}</h3>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid>{examQuestionUi}</Grid>\n        <Button onClick={() => x++}>Next</Button>\n      </Container>\n    );\n  else return <CircularProgress />;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js",["82","83","84","85","86"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport \"./Course.scss\";\n\nexport default function Sidebar(props) {\n    console.log(props.courseData)\n\n    return (\n        <aside className=\"sidebar\">\n            <header className=\"sidebar__header\">{props.courseData.name}</header>\n            <ul>\n                <li><Link className=\"sidebar__link\">Create Exam</Link></li>\n                <li><Link className=\"sidebar__link\">Exams</Link></li>\n                <li><Link className=\"sidebar__link\">Students</Link></li>\n                <li><Link className=\"sidebar__link\">Teacher</Link></li>\n            </ul>\n{/*             <div className=\"btn\">\n            <KeyboardArrowRightIcon style={{color: \"white\"}} />\n            </div> */}\n        </aside>\n    );\n}",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":69,"column":43,"nodeType":"93","endLine":69,"endColumn":66},{"ruleId":"94","severity":1,"message":"95","line":103,"column":32,"nodeType":"96","messageId":"97","endLine":103,"endColumn":34},{"ruleId":"98","severity":1,"message":"99","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":22},{"ruleId":"98","severity":1,"message":"102","line":7,"column":27,"nodeType":"100","messageId":"101","endLine":7,"endColumn":33},{"ruleId":"98","severity":1,"message":"103","line":10,"column":9,"nodeType":"100","messageId":"101","endLine":10,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":43,"column":30,"nodeType":"100","endLine":43,"endColumn":37},{"ruleId":"98","severity":1,"message":"106","line":10,"column":3,"nodeType":"100","messageId":"101","endLine":10,"endColumn":10},{"ruleId":"98","severity":1,"message":"107","line":19,"column":8,"nodeType":"100","messageId":"101","endLine":19,"endColumn":24},{"ruleId":"98","severity":1,"message":"108","line":29,"column":9,"nodeType":"100","messageId":"101","endLine":29,"endColumn":24},{"ruleId":"98","severity":1,"message":"109","line":89,"column":9,"nodeType":"100","messageId":"101","endLine":89,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":26,"column":3,"nodeType":"112","messageId":"97","endLine":26,"endColumn":7},{"ruleId":"113","severity":1,"message":"114","line":120,"column":30,"nodeType":"115","messageId":"116","endLine":120,"endColumn":52,"fix":"117"},{"ruleId":"113","severity":1,"message":"114","line":122,"column":30,"nodeType":"115","messageId":"116","endLine":122,"endColumn":43,"fix":"118"},{"ruleId":"98","severity":1,"message":"119","line":78,"column":10,"nodeType":"100","messageId":"101","endLine":78,"endColumn":21},{"ruleId":"98","severity":1,"message":"120","line":3,"column":17,"nodeType":"100","messageId":"101","endLine":3,"endColumn":23},{"ruleId":"104","severity":1,"message":"121","line":21,"column":6,"nodeType":"122","endLine":21,"endColumn":8,"suggestions":"123"},{"ruleId":"98","severity":1,"message":"120","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":23},{"ruleId":"98","severity":1,"message":"124","line":15,"column":3,"nodeType":"100","messageId":"101","endLine":15,"endColumn":7},{"ruleId":"98","severity":1,"message":"125","line":16,"column":3,"nodeType":"100","messageId":"101","endLine":16,"endColumn":11},{"ruleId":"98","severity":1,"message":"126","line":45,"column":9,"nodeType":"100","messageId":"101","endLine":45,"endColumn":16},{"ruleId":"104","severity":1,"message":"121","line":53,"column":6,"nodeType":"122","endLine":53,"endColumn":8,"suggestions":"127"},{"ruleId":"98","severity":1,"message":"120","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":23},{"ruleId":"98","severity":1,"message":"128","line":1,"column":25,"nodeType":"100","messageId":"101","endLine":1,"endColumn":33},{"ruleId":"98","severity":1,"message":"129","line":1,"column":35,"nodeType":"100","messageId":"101","endLine":1,"endColumn":44},{"ruleId":"98","severity":1,"message":"130","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"98","severity":1,"message":"131","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":30},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'AssignmentIcon' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'reloadHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'Spinner' is defined but never used.","'CircularProgress' is defined but never used.","'handleShowModal' is assigned a value but never used.","'createCourseModal' is assigned a value but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"134","text":"135"},{"range":"136","text":"135"},"'isApiLoaded' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["137"],"'Menu' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.",["138"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[2867,2876],"\"error\"",[2934,2943],{"desc":"139","fix":"140"},{"desc":"139","fix":"141"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"142","text":"143"},{"range":"144","text":"143"},[676,678],"[id, props.userInfo]",[1038,1040]]
>>>>>>> 2c3afb3629c6903b3e36740d8bc17209e25cba9a
