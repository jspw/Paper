[{"/home/jspw/Documents/Projects/Project 350/client/src/index.js":"1","/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js":"2","/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js":"3","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js":"4","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js":"5","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js":"6","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js":"7","/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js":"8","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js":"9","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js":"10","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js":"11","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js":"12","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js":"13","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js":"14","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js":"15","/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js":"16","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js":"17","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js":"18","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js":"19","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js":"20","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/ExamType.js":"21","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js":"22","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js":"23","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Exams.js":"24","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Students.js":"25","/home/jspw/Documents/Projects/Project 350/client/src/Components/Profile/Profile.js":"26","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/Examine.js":"27","/home/jspw/Documents/Projects/Project 350/client/src/Components/404/Error404.js":"28"},{"size":582,"mtime":1612986795083,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1611434180840,"results":"31","hashOfConfig":"30"},{"size":4127,"mtime":1613015888197,"results":"32","hashOfConfig":"30"},{"size":3118,"mtime":1612748682822,"results":"33","hashOfConfig":"30"},{"size":8849,"mtime":1613029961416,"results":"34","hashOfConfig":"30"},{"size":2701,"mtime":1612942178175,"results":"35","hashOfConfig":"30"},{"size":1034,"mtime":1612987197886,"results":"36","hashOfConfig":"30"},{"size":3597,"mtime":1613002385462,"results":"37","hashOfConfig":"30"},{"size":4198,"mtime":1613029845290,"results":"38","hashOfConfig":"30"},{"size":19299,"mtime":1613027946659,"results":"39","hashOfConfig":"30"},{"size":9675,"mtime":1613029845286,"results":"40","hashOfConfig":"30"},{"size":12934,"mtime":1613013394303,"results":"41","hashOfConfig":"30"},{"size":16232,"mtime":1613013527658,"results":"42","hashOfConfig":"30"},{"size":4407,"mtime":1612987399069,"results":"43","hashOfConfig":"30"},{"size":511,"mtime":1612852176912,"results":"44","hashOfConfig":"30"},{"size":2655,"mtime":1613002385454,"results":"45","hashOfConfig":"30"},{"size":6926,"mtime":1613002385454,"results":"46","hashOfConfig":"30"},{"size":3225,"mtime":1613016268843,"results":"47","hashOfConfig":"30"},{"size":1436,"mtime":1613011288375,"results":"48","hashOfConfig":"30"},{"size":13535,"mtime":1613013310296,"results":"49","hashOfConfig":"30"},{"size":2869,"mtime":1612942178171,"results":"50","hashOfConfig":"30"},{"size":5311,"mtime":1612943409402,"results":"51","hashOfConfig":"30"},{"size":14856,"mtime":1612943960812,"results":"52","hashOfConfig":"30"},{"size":4367,"mtime":1613002385450,"results":"53","hashOfConfig":"30"},{"size":2287,"mtime":1612972660959,"results":"54","hashOfConfig":"30"},{"size":7743,"mtime":1613004175503,"results":"55","hashOfConfig":"30"},{"size":11584,"mtime":1613030560248,"results":"56","hashOfConfig":"30"},{"size":714,"mtime":1613012721054,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"kvcbqu",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jspw/Documents/Projects/Project 350/client/src/index.js",[],["127","128"],"/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js",["129","130","131","132"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js",["133","134","135","136","137"],"import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Exam(props) {\n  // const { match } = props;\n\n  // console.log(\"Exam id\",match);\n  console.log(\"props... \", props);\n\n  let { id } = useParams();\n  console.log(\"ID\", id);\n\n  const [examData, setExamData] = useState(null);\n\n  const [timer, setTimer] = useState(null);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios.get(`${props.userInfo.role}/exam/${id}`).then((response) => {\n        const data = response.data;\n        setExamData(data.result.data);\n      });\n  }, []);\n\n  console.log(\"Exam Data\", examData);\n\n  let examQuestionUi;\n\n  if (examData && examData.mcqQuestions) {\n    examQuestionUi = examData.mcqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.mcqQuestionId.description}</Typography>\n\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\n\n            <List>\n              {question.mcqQuestionId.options.map((options) => {\n                return (\n                  <ListItem>\n                    <CardActions Button>{options.option}</CardActions>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  } else if (examData && examData.cqQuestions) {\n    examQuestionUi = examData.cqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.cqQuestionId.description}</Typography>\n\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\n            <TextField\n              id=\"outlined-textarea\"\n              label=\"Ans\"\n              placeholder=\"Write here\"\n              multiline\n              variant=\"outlined\"\n            />\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  }\n\n  let x = 0;\n\n  if (examData)\n    setInterval(() => {\n      const date = new Date();\n      setTimer(date.getSeconds());\n    }, 1000);\n\n  if (examData)\n    return (\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={8}>\n            <Paper>\n              <Typography variant=\"h2\" component=\"h2\">\n                {examData.name}\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper>\n              {\" \"}\n              <h3>{timer}</h3>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid>{examQuestionUi}</Grid>\n        <Button onClick={() => x++}>Next</Button>\n      </Container>\n    );\n  else return <CircularProgress />;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js",["138","139","140","141","142","143","144","145","146","147","148","149"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js",["150"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst Layout = (props) => {\n  const [showModal, setShowModal] = useState(true);\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  const SelectForm = () => {\n    let items = [];\n\n    if (props.universityInfo) {\n      props.universityInfo.forEach((element) => {\n        if (element.shortform === props.userInfo.varsity) {\n          element.departments.forEach((dept) => {\n            // console.log(dept);\n            items.push({\n              id: dept._id,\n              value: dept.shortform,\n            });\n          });\n        }\n      });\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl variant=\"outlined\" fullWidth required>\n        <InputLabel>{props.label}</InputLabel>\n        <Select value={props.values} label={props.label}>\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  const createCourseModal = (\n    <Modal\n      show={showModal}\n      onHide={handleCloseModal}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Create Course</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Control placeholder=\"Course Name\" />\n            </Col>\n            <Col>\n              <Form.Control placeholder=\"Code\" />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                readOnly\n                defaultValue={\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\n                }\n              />\n            </Col>\n            <Col>\n              <SelectForm />\n            </Col>\n          </Row>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\">Understood</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n\n  return (\n    <Container>\n      <Button onClick={handleShowModal}>Create Course </Button>;\n    </Container>\n  );\n};\n\nexport default Layout;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js",["151","152"],"import axios from \"axios\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport \"./Course.scss\";\nimport LinearIndeterminate from \"../Generic/Loader\";\n\nlet userdata = localStorage.getItem(\"data\");\nuserdata = JSON.parse(userdata);\n\nexport default function Course(props) {\n  let { id } = useParams();\n\n  const [courseData, setCourseData] = useState(null);\n\n  console.log(userdata);\n\n  useEffect(() => {\n    if (userdata)\n      axios\n        .get(`${userdata.role}/course/${id}`)\n        .then((response) => {\n          const data = response.data;\n          console.log(data);\n          if (data.status === \"OK\") setCourseData(data.result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }, []);\n\n  if (courseData)\n    return (\n      <div className=\"course\">\n        <Sidebar courseData={courseData} userInfo={userdata} />\n      </div>\n    );\n  else return <LinearIndeterminate></LinearIndeterminate>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js",["153","154","155","156","157"],"import React from \"react\";\nimport Timer from \"../Timer/Timer\";\nimport { Col, Container, Row, Alert, Table } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\n\nconst UpcomingExam = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const { id } = useParams();\n\n  let userdata;\n  userdata = localStorage.getItem(\"data\");\n  userdata = JSON.parse(userdata);\n\n  let examInfo;\n  if (userdata)\n    userdata.courses.map((course) => {\n      //   console.log(course);\n      course.course.cqExams.map((exam) => {\n        //   console.log(exam.examId._id);\n        if (exam.examId._id == id) {\n          //   console.log(exam);\n          examInfo = exam.examId;\n        }\n      });\n      course.course.mcqExams.map((exam) => {\n        //   console.log(exam.examId._id);\n        if (exam.examId._id == id) examInfo = exam.examId;\n      });\n    });\n\n  console.log(examInfo);\n\n  return (\n    <Container>\n      <Alert variant=\"danger\">\n        <p className=\"text-center\">Exam Has Not Started Yet</p>\n      </Alert>\n      {/* <Alert variant=\"light\"> */}\n      <h1 className=\"text-center\">{examInfo.name}</h1>\n      {/* </Alert> */}\n\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <Table\n                // variant=\"dark\"\n                responsive\n                hover\n                bordered\n                size=\"sm\"\n                bsPrefix=\"table\"\n              >\n                <tbody>\n                  <tr>\n                    <td>Time</td>\n                    <td>\n                      {new Date(examInfo.date).getHours() < 10\n                        ? \"0\" + new Date(examInfo.date).getHours()\n                        : new Date(examInfo.date).getHours()}\n                      :\n                      {new Date(examInfo.date).getMinutes() < 10\n                        ? \"0\" + new Date(examInfo.date).getMinutes()\n                        : new Date(examInfo.date).getMinutes()}{\" \"}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Date</td>\n                    <td>\n                      {new Date(examInfo.date).getDate()}th{\" \"}\n                      {months[new Date(examInfo.date).getMonth()]},\n                      {new Date(examInfo.date).getFullYear()} (\n                      {days[new Date(examInfo.date).getDay()]})\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col>\n          <Row>\n            <Col></Col>\n            <Col>\n              <Table\n                // variant=\"dark\"\n                responsive\n                hover\n                bordered\n                size=\"sm\"\n                bsPrefix=\"table\"\n              >\n                <tbody>\n                  <tr>\n                    <td>Total Marks</td>\n                    <td>{examInfo.totalMarks}</td>\n                  </tr>\n                  <tr>\n                    <td>Total Time</td>\n                    <td>{examInfo.totalTime} min</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Timer deadline={examInfo.date} />\n    </Container>\n  );\n};\n\nexport default UpcomingExam;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js",["158","159","160","161","162","163","164","165","166","167","168","169"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js",["170","171","172"],"import React, { useState } from \"react\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Forms from \"../Generic/Forms\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./SignIn.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    // margin: theme.spacing(1),\n  },\n  textField: {\n    // width: \"15vw\",\n    // margin: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  shadows: [\"none\"],\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    role: \"\",\n    designation: \"\",\n    university: \"\",\n    department: \"\",\n    session: \"\",\n    regNo: \"\",\n    result: \"\",\n    error: \"\",\n  });\n\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: apiDomain + \"university/all\",\n  //   })\n  //     .then((response) => {\n  //       // console.log(\"All Universites..\");\n\n  //       // console.log(response.data);\n\n  //       const data = response.data;\n\n  //       if (data.status === \"OK\") {\n  //         setUniversities(data.result.data);\n  //       }\n  //     })\n  //     .catch((error) => console.log(error));\n  // }, []);\n\n  // console.log(\"API CALL DATA\", universities);\n  let history = useHistory();\n\n  const obj = {\n    role: values.role,\n    username: values.username,\n    email: values.email,\n    password: values.password,\n    repassword: values.confirmPassword,\n    firstName: values.firstName,\n    lastName: values.lastName,\n    department: values.department,\n    registrationNo: parseInt(values.regNo, 10),\n    session: values.session,\n    varsity: values.university,\n    designation: values.designation,\n  };\n\n  const body = JSON.stringify(obj);\n\n  const handleSignUp = (e) => {\n    // console.log('hello')\n    fetchData();\n    e.preventDefault();\n  };\n  const fetchData = async () => {\n    let endpoint;\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\n    else endpoint = \"auth/create-student\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: body,\n    };\n\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\n\n    const data = await response.json();\n\n    console.log(\"API data\", data);\n\n    if (data.status === \"FAILED\")\n      setValues({ ...values, [\"error\"]: data.result });\n    else {\n      setValues({ ...values, [\"error\"]: \"\" });\n      // const userdata = {\n      //   token: data.result.jwt.token,\n      //   role: data.result.data.role.toLowerCase(),\n      //   id: data.result.data.id,\n      // };\n\n      localStorage.setItem(\"data\", JSON.stringify(data.result.data));\n\n      // console.log(userdata);\n\n      // localStorage.setItem(\"data\", JSON.stringify(userdata));\n      history.push(\"/\");\n      window.location.reload();\n    }\n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  // if (universities)\n  return (\n    <Container>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.textField}>\n            <h2>Hello There!!</h2>\n            <p>Lets Sign Up to continue</p>\n          </Grid>\n        </Grid>\n        {values.error !== \"\" ? (\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.root}\n          >\n            <Alert elevation={0} severity=\"error\">\n              {values.error}\n            </Alert>\n          </Grid>\n        ) : null}\n        <form onSubmit={handleSignUp}>\n          <Grid item xs={12}>\n            <Forms\n              id=\"role\"\n              type=\"select\"\n              label=\"Role\"\n              classes={classes}\n              values={values.role}\n              handleChange={handleChange}\n            />\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"university\"\n                type=\"select\"\n                label=\"University\"\n                labelWidth={117}\n                classes={classes}\n                values={values.university}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                selectedUniversity={values.university}\n                id=\"department\"\n                type=\"select\"\n                label=\"Department\"\n                labelWidth={117}\n                classes={classes}\n                values={values.department}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          {values.role !== \"Teacher\" ? (\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"session\"\n                  type=\"select\"\n                  label=\"Session\"\n                  labelWidth={117}\n                  classes={classes}\n                  values={values.session}\n                  handleChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"regNo\"\n                  type=\"text\"\n                  label=\"Registration No\"\n                  labelWidth={120}\n                  classes={classes}\n                  values={values.regNo}\n                  handleChange={handleChange}\n                  required={true}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12}>\n              <Forms\n                id=\"designation\"\n                type=\"select\"\n                label=\"Designation\"\n                labelWidth={117}\n                classes={classes}\n                values={values.designation}\n                handleChange={handleChange}\n              />\n            </Grid>\n          )}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"firstName\"\n                type=\"text\"\n                label=\"First Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.firstName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"lastName\"\n                type=\"text\"\n                label=\"Last Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.lastName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"username\"\n                type=\"text\"\n                label=\"Username\"\n                labelWidth={84}\n                classes={classes}\n                values={values.username}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                labelWidth={110}\n                classes={classes}\n                values={values.email}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                labelWidth={80}\n                classes={classes}\n                values={values.password}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                labelWidth={140}\n                classes={classes}\n                values={values.confirmPassword}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.textField}>\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\n              Sign Up\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n  // else return <h1>Loading</h1>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js",["173","174","175","176","177","178","179","180","181","182","183"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js",["184","185","186","187","188","189"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js",["190","191","192"],"import React, { useState ,useEffect} from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { IoCreate } from \"react-icons/io5\";\nimport { IoClipboard } from \"react-icons/io5\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport \"./Sidebar.scss\";\nimport ExamType from \"./CreateExam/ExamType\";\nimport Students from './Students';\nimport Exams from \"./Exams\";\n\nexport default function Sidebar(props) {\n\n\n\n  let userdata;\n  userdata = localStorage.getItem(\"data\");\n  userdata = JSON.parse(userdata);\n\n  console.log(props.courseData);\n\n\n  let displayContent;\n\n  const [sidebar, setSidebar] = useState(false);\n  const showSidebar = () => setSidebar(!sidebar);\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const [content, setContent] = useState(\"\");\n  const handleClick = (prop) => (event) => {\n    setContent(prop);\n  };\n  console.log(content);\n  if (content === \"createExam\")\n    displayContent = (\n      <ExamType className=\"content\" courseData={props.courseData} />\n    );\n  else if (content === \"exams\")\n    displayContent = (\n      <Exams\n        className=\"content\"\n        userInfo={userdata}\n        courseData={props.courseData}\n      />\n    );\n  else if (content === \"students\")\n    displayContent = (\n      <Students\n        className=\"content\"\n        userInfo={userdata}\n        courseData={props.courseData}\n      />\n    );\n\n  return (\n    <div className=\"parent\">\n      <div className={sidebar ? \"sidebar active\" : \"sidebar\"}>\n        <ul className=\"sidebar__nav\">\n          <li className=\"sidebar__logo\">\n            <Row>\n              <span className=\"sidebar__item__link\" onClick={showSidebar}>\n                <Col xs={4} className=\"sidebar__item__text\">\n                  {props.courseData.code}\n                </Col>\n                <Col xs={sidebar ? { span: 4, offset: 2 } : {}}>\n                  <FaAngleDoubleRight className=\"sidebar__item__icon\" />\n                </Col>\n              </span>\n            </Row>\n          </li>\n          {userdata.role === \"Teacher\" ? (\n            <li className=\"sidebar__item\">\n              <a\n                href=\"#create-exam\"\n                id=\"create-exam\"\n                className=\"sidebar__item__link\"\n                onClick={handleClick(\"createExam\")}\n              >\n                <IoCreate className=\"sidebar__item__icon\" />\n                <span className=\"sidebar__item__text\">Create Exam</span>\n              </a>\n            </li>\n          ) : (\n            \"\"\n          )}\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#exams\"\n              id=\"exams\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"exams\")}\n            >\n              <IoClipboard className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Exams</span>\n            </a>\n          </li>\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#students\"\n              id=\"students\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"students\")}\n            >\n              <FaUsers className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Students</span>\n            </a>\n          </li>\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#teacher\"\n              id=\"teacher\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"teacher\")}\n            >\n              <FaChalkboardTeacher className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Teacher</span>\n            </a>\n          </li>\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#info\"\n              id=\"info\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"info\")}\n            >\n              <FaInfoCircle className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Course Info</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div className={sidebar ? \"content__small\" : \"content__large\"}>\n        {displayContent}\n      </div>\n    </div>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js",["193","194"],"import { useRef, useState, useEffect } from \"react\";\n\nimport \"./Timer.css\";\n\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst Timer = (props) => {\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n  //   console.log(props.deadline)\n  let interval = useRef();\n\n  const timer = (props) => {\n    const seconds = 1000;\n    const minutes = seconds * 60;\n    const hours = minutes * 60;\n    const days = hours * 24;\n    const deadline = new Date(props.deadline).getTime();\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = deadline - now;\n      if (timeLeft < 0) {\n        clearInterval(interval.current);\n      } else {\n        setTimerDays(Math.floor(timeLeft / days));\n        setTimerHours(Math.floor((timeLeft % days) / hours));\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    timer(props);\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  if (timerDays && timerHours && timerMinutes && timerSeconds)\n    return (\n      <div className=\"timer-container\">\n        <Link\n          to={`/live-exam/${props.examID}`}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          <button className=\"btn btn-primary\">Enter Exam</button>\n        </Link>\n      </div>\n    );\n  else\n    return (\n      <div className=\"timer-container\">\n        <ul>\n          <li>\n            <span id=\"days\">{timerDays}</span> Days\n          </li>\n          <li>\n            <span id=\"hours\">{timerHours}</span> Hours\n          </li>\n          <li>\n            <span id=\"minutes\">{timerMinutes}</span> Minutes\n          </li>\n          <li>\n            <span id=\"seconds\">{timerSeconds}</span> Seconds\n          </li>\n        </ul>\n      </div>\n    );\n};\n\nexport default Timer;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js",["195"],"import React, { useState, useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport \"./Forms.scss\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst TextFieldForm = (props) => (\n  <TextField\n  id={props.id}\n  label={props.label}\n  multiline\n  rows={props.rows}\n  variant=\"outlined\"\n  onChange={props.handleChange(props.id)}\n  labelWidth={props.labelWidth}\n  value={props.values}\n  fullWidth\n  className={props.classes.textField}\n  required={props.required}\n/>\n)\n\nconst TextForm = (props) => (\n  <FormControl\n    className={props.classes.textField}\n    variant=\"outlined\"\n    fullWidth\n    required={props.required}\n  >\n    <InputLabel>{props.label}</InputLabel>\n    <OutlinedInput\n      id={props.id}\n      onChange={props.handleChange(props.id)}\n      value={props.values}\n      labelWidth={props.labelWidth}\n    />\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      className={props.classes.textField}\n      variant=\"outlined\"\n      fullWidth\n      required\n    >\n      <InputLabel>{props.label}</InputLabel>\n      <OutlinedInput\n        id={props.id}\n        type={showPassword ? \"text\" : \"password\"}\n        value={props.values}\n        onChange={props.handleChange(props.id)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label={\"password\"}\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={props.labelWidth}\n      />\n    </FormControl>\n  );\n};\n\nconst Forms = (props) => {\n  const type = props.type;\n\n  const [universities, setUniversities] = useState(null);\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\n\n  // console.log(props);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: apiDomain + \"university/all\",\n    })\n      .then((response) => {\n        // console.log(\"All Universites..\");\n\n        // console.log(response.data);\n\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversities(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsApiLoaded(false);\n      });\n  }, []);\n\n  const SelectForm = (props) => {\n    // console.log(\"COMPONENT : select form\");\n    let items = [];\n    const id = props.id;\n\n    if (universities) {\n      // console.log(\"Univbersity\", universities);\n\n      // for (let i = 0; i < universities.length; i++) {\n      //   console.log(\"Loop\");\n      //   console.log(universities[i]);\n      // }\n\n      if (id === \"role\")\n        items = [\n          {\n            id: \"Teacher\",\n            value: \"Teacher\",\n          },\n          {\n            id: \"Student\",\n            value: \"Student\",\n          },\n        ];\n      else if (id === \"university\") {\n        items = [];\n        universities.forEach((element) => {\n          items.push({\n            id: element._id,\n            value: element.shortform,\n          });\n        });\n      } else if (id === \"department\") {\n        items = [];\n\n        if (props.selectedUniversity) {\n          // console.log(\"Selected University \", props.selectedUniversity);\n          universities.forEach((element) => {\n            if (element._id === props.selectedUniversity) {\n              element.departments.forEach((dept) => {\n                // console.log(dept);\n                items.push({\n                  id: dept._id,\n                  value: dept.shortform,\n                });\n              });\n            }\n          });\n        }\n      } else if (id === \"session\") {\n        items = [];\n        items = [\n          {\n            id: \"2016-2017\",\n            value: \"2016-2017\",\n          },\n          {\n            id: \"2017-2018\",\n            value: \"2017-2018\",\n          },\n          {\n            id: \"2018-2019\",\n            value: \"2018-2019\",\n          },\n          {\n            id: \"2020-2021\",\n            value: \"2020-2021\",\n          },\n        ];\n      } else if (id === \"designation\") {\n        items = [];\n        items = [\n          {\n            id: \"Department Head\",\n            value: \"Department Head\",\n          },\n          {\n            id: \"Professor\",\n            value: \"Professor\",\n          },\n          {\n            id: \"Assistant Professor\",\n            value: \"Assistant Professor\",\n          },\n          {\n            id: \"Lecturer\",\n            value: \"Lecturer\",\n          },\n        ];\n      } else if(id === \"options\") {\n        items = [];\n        items = [\n          {\n            id: \"optA\",\n            value: \"A\",\n          },\n          {\n            id: \"optB\",\n            value: \"B\",\n          },\n          {\n            id: \"optC\",\n            value: \"C\",\n          },\n          {\n            id: \"optD\",\n            value: \"D\",\n          },\n        ];\n      }\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl\n      disabled = {props.disable ?  props.disable : false}\n        variant=\"outlined\"\n        className={props.classes.textField}\n        fullWidth\n        required\n      >\n        <InputLabel>{props.label}</InputLabel>\n        <Select\n          id={id}\n          value={props.values}\n          onChange={props.handleChange(id)}\n          label={props.label}\n        >\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  if (type === \"text\") {\n    return <TextForm {...props} />;\n  } else if (type === \"password\") {\n    return <PasswordForm {...props} />;\n  } else if (type === \"select\") {\n    return <SelectForm {...props} />;\n  } else {\n    return <TextFieldForm {...props}/>\n  }\n};\n\nexport default Forms;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js",["196","197"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js",["198","199","200","201","202","203","204","205","206"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/ExamType.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js",["207"],"import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Tabs } from \"antd\";\nimport axios from \"axios\";\nimport { Toast } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport Question from \"./Question\";\nimport \"./CreateExam.scss\";\n\nconst { TabPane } = Tabs;\n\nexport default class CreateCourse extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  questionIDs = [];\n  newTabIndex = 0;\n  quesNo = 2;\n  totalMarks = 0;\n  totalTime = 0;\n\n  addQuestion = (id, marks, time) => {\n    this.setState({\n      showToast: true,\n      examCreateMessage: \"Question Created Successfully\",\n    });\n\n    this.totalMarks += parseInt(marks, 10);\n    this.totalTime += time;\n\n    if (this.props.examType === \"CQ\")\n      this.questionIDs.push({\n        cqQuestionId: id,\n      });\n    else {\n      this.questionIDs.push({\n        mcqQuestionId: id,\n      });\n    }\n\n    console.log(\"mcq Question Id !\", id);\n    console.log(\"Mark !\", this.totalMarks);\n    console.log(\"Time!\", this.totalTime);\n  };\n\n  createExam = (date, examName) => {\n    console.log(\"Date \", date);\n    console.log(\"Name \", examName);\n\n    let data;\n\n    if (this.props.examType === \"CQ\")\n      data = JSON.stringify({\n        course: this.props.courseData._id,\n        cqQuestions: this.questionIDs,\n        totalTime: this.totalTime,\n        totalMarks: this.totalMarks,\n        date: date,\n        name: examName,\n      });\n    else\n      data = JSON.stringify({\n        course: this.props.courseData._id,\n        mcqQuestions: this.questionIDs,\n        totalTime: this.totalTime,\n        totalMarks: this.totalMarks,\n        date: date,\n        name: examName,\n      });\n\n    axios({\n      method: \"POST\",\n      url: `teacher/exam/${this.props.examType === \"CQ\" ? \"cq\" : \"mcq\"}/create`,\n\n      headers: { \"Content-Type\": \"application/json\" },\n\n      data: data,\n    })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status === \"OK\") {\n          this.setState({\n            showToast: true,\n            examCreateMessage: \"Exam Created Successfully\",\n          });\n        } else\n          this.setState({\n            showToast: true,\n            examCreateMessage: \"Exam Created Successfully\",\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          showToast: true,\n          examCreateMessage: \"Something Went Wrong!\",\n        });\n      });\n  };\n\n  initialPanes = [\n    {\n      title: \"Question 1\",\n      content: (\n        <Question\n          onAdd={this.addQuestion}\n          createExam={this.createExam}\n          totalMarks={this.totalMarks}\n          totalTime={this.totalTime}\n          examType={this.props.examType}\n        />\n      ),\n      key: \"1\",\n      closable: false,\n    },\n  ];\n\n  state = {\n    activeKey: this.initialPanes[0].key,\n    panes: this.initialPanes,\n    showToast: false,\n    examCreateMessage: null,\n    create: true,\n  };\n\n  onChange = (activeKey) => {\n    this.setState({ activeKey });\n  };\n\n  onEdit = (targetKey, action) => {\n    this[action](targetKey);\n  };\n\n  add = () => {\n    const { panes } = this.state;\n    const activeKey = `question${this.newTabIndex++}`;\n    const newPanes = [...panes];\n    newPanes.push({\n      title: `Question ${this.quesNo++}`,\n      content: (\n        <Question\n          onAdd={this.addQuestion}\n          createExam={this.createExam}\n          totalMarks={this.totalMarks}\n          totalTime={this.totalTime}\n          examType={this.props.examType}\n        />\n      ),\n      key: activeKey,\n    });\n    this.setState({\n      panes: newPanes,\n      activeKey,\n    });\n  };\n\n  remove = (targetKey) => {\n    const { panes, activeKey } = this.state;\n    let newActiveKey = activeKey;\n    let lastIndex;\n    panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const newPanes = panes.filter((pane) => pane.key !== targetKey);\n    if (newPanes.length && newActiveKey === targetKey) {\n      if (lastIndex >= 0) {\n        newActiveKey = newPanes[lastIndex].key;\n      } else {\n        newActiveKey = newPanes[0].key;\n      }\n    }\n    this.setState({\n      panes: newPanes,\n      activeKey: newActiveKey,\n    });\n  };\n\n  render() {\n    const { panes, activeKey } = this.state;\n    return (\n      <Container fluid className=\"justify-content-center\">\n        <Toast\n          autohide\n          className=\"toast-modify\"\n          onClose={() => this.setState({ showToast: false })}\n          show={this.state.showToast}\n        >\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Create Message</strong>\n            <small>just now</small>\n          </Toast.Header>\n          <Toast.Body>{this.state.examCreateMessage}</Toast.Body>\n        </Toast>\n        <Tabs\n          type=\"editable-card\"\n          onChange={this.onChange}\n          activeKey={activeKey}\n          onEdit={this.onEdit}\n        >\n          {panes.map((pane) => (\n            <TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n              {pane.content}\n            </TabPane>\n          ))}\n        </Tabs>\n      </Container>\n    );\n  }\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js",["208"],"import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Forms from \"../../Generic/Forms\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\nimport { Toast } from \"react-bootstrap\";\nimport \"./CreateExam.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginTop: theme.spacing(3),\n  },\n  leftTextField: {\n    marginTop: theme.spacing(6),\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(10),\n    // backgroundColor: '#3F7CAC',\n  },\n}));\n\nconst leftStyles = makeStyles((theme) => ({\n  textField: {\n    marginTop: theme.spacing(3.5),\n  },\n  timeField: {\n    marginTop: theme.spacing(2.9),\n  },\n}));\n\nexport default function Question(props) {\n  const classes = useStyles();\n  const leftClasses = leftStyles();\n\n  let questionsCreated = 0;\n\n  const [values, setValues] = useState({\n    description: \"\",\n    question: null,\n    optA: null,\n    optB: null,\n    optC: null,\n    optD: null,\n    ans: null,\n    marks: null,\n    min: null,\n    sec: null,\n    date: Date.now(),\n    name: null,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const [questionEditDisable, setQuestionEditDisable] = useState(false);\n\n  const [showToast, setShowToast] = useState(false);\n\n  console.log(\"questionEditDisable\", questionEditDisable);\n\n  const handleClickOpen = () => {\n    if (\n      (values.question &&\n        values.optA &&\n        values.optB &&\n        values.optC &&\n        values.optD &&\n        values.ans &&\n        values.marks &&\n        values.min &&\n        values.sec) ||\n      (values.question && values.marks && values.min && values.sec)\n    ) {\n      setOpen(true);\n    } else {\n      setShowToast(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const createExam = () => {\n    console.log(values.name);\n    if (values.name) {\n      props.createExam(values.date, values.name);\n      setOpen(false);\n    }\n  };\n\n  const handleChange = (prop) => (event) => {\n    console.log(\"Triggered\", event.target.value);\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleQuestionAdd = (id) => {\n    props.onAdd(\n      id,\n      values.marks,\n      parseInt(values.min, 10) * 60 + parseInt(values.sec, 10)\n    );\n  };\n\n  function sendQuestion(e) {\n    e.preventDefault();\n\n    console.log(\"Form Values \", values);\n\n    axios({\n      method: \"POST\",\n      url: `teacher/question/${props.examType === \"CQ\" ? \"cq\" : \"mcq\"}/create`,\n\n      headers: { \"Content-Type\": \"application/json\" },\n      data: JSON.stringify({\n        description: values.description,\n        mainQuestion: values.question,\n        options: [\n          {\n            option: values.optA,\n          },\n          {\n            option: values.optB,\n          },\n          {\n            option: values.optC,\n          },\n          {\n            option: values.optD,\n          },\n        ],\n        correctAnswers: [\n          {\n            answer:\n              values.ans === \"A\"\n                ? values.optA\n                : values.ans === \"B\"\n                ? values.optB\n                : values.ans === \"C\"\n                ? values.optC\n                : values.optD,\n          },\n        ],\n        time: parseInt(values.min, 10) * 60 + parseInt(values.sec, 10),\n        marks: parseInt(values.marks, 10),\n      }),\n    })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status === \"OK\") {\n          handleQuestionAdd(response.data.result.data._id);\n          setQuestionEditDisable(true);\n          questionsCreated++;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  const mcq = (\n    <Row>\n      <Col xs={12} lg={6}>\n        <Col lg={12}>\n          <Row className=\"justify-content-flex-start\">\n            <Col xs={12}>\n              <Forms\n                id=\"description\"\n                type=\"textField\"\n                label=\"Description\"\n                labelWidth={80}\n                values={values.description}\n                handleChange={handleChange}\n                rows={4}\n                classes={classes}\n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-flex-start\">\n            <Col xs={12}>\n              <Forms\n                id=\"question\"\n                type=\"textField\"\n                label=\"Question\"\n                labelWidth={75}\n                values={values.question}\n                handleChange={handleChange}\n                required={true}\n                rows={3}\n                classes={classes}\n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-flex-start\">\n            <Col xs={6}>\n              <Forms\n                id=\"optA\"\n                type=\"text\"\n                label=\"Option A\"\n                labelWidth={75}\n                values={values.optA}\n                handleChange={handleChange}\n                required={true}\n                classes={classes}\n              />\n            </Col>\n            <Col xs={6}>\n              <Forms\n                id=\"optB\"\n                type=\"text\"\n                label=\"Option B\"\n                labelWidth={75}\n                values={values.optB}\n                handleChange={handleChange}\n                required={true}\n                classes={classes}\n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-flex-start\">\n            <Col xs={6}>\n              <Forms\n                id=\"optC\"\n                type=\"text\"\n                label=\"Option C\"\n                labelWidth={75}\n                values={values.optC}\n                handleChange={handleChange}\n                required={true}\n                classes={classes}\n              />\n            </Col>\n            <Col xs={6}>\n              <Forms\n                id=\"optD\"\n                type=\"text\"\n                label=\"Option D\"\n                labelWidth={75}\n                values={values.optD}\n                handleChange={handleChange}\n                required={true}\n                classes={classes}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Col>\n      <Col>\n        <Row className=\"justify-content-flex-start\">\n          <Col>\n            <FormControl\n              component=\"fieldset\"\n              className={classes.textField}\n              required\n            >\n              <FormLabel component=\"legend\">Select Correct Ans</FormLabel>\n              <RadioGroup\n                aria-label=\"ans\"\n                name=\"ans\"\n                value={values.ans}\n                onChange={handleChange(\"ans\")}\n              >\n                <FormControlLabel\n                  value=\"A\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"A\"\n                />\n                <FormControlLabel\n                  value=\"B\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"B\"\n                />\n                <FormControlLabel\n                  value=\"C\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"C\"\n                />\n                <FormControlLabel\n                  value=\"D\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"D\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={4}>\n            <TextField\n              type=\"number\"\n              label=\"Marks\"\n              variant=\"outlined\"\n              value={values.marks}\n              onChange={handleChange(\"marks\")}\n              className={leftClasses.textField}\n              required\n            />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-flex-start\">\n          <Col xs={4}>\n            <TextField\n              id=\"min\"\n              type=\"number\"\n              placeholder=\"00\"\n              label=\"Minutes\"\n              variant=\"outlined\"\n              value={values.min}\n              onChange={handleChange(\"min\")}\n              className={classes.textField}\n              required\n            />\n          </Col>\n          <Col xs={4}>\n            <TextField\n              id=\"sec\"\n              min=\"0\"\n              type=\"number\"\n              max=\"59\"\n              placeholder=\"00\"\n              label=\"Seconds\"\n              variant=\"outlined\"\n              value={values.sec}\n              onChange={handleChange(\"sec\")}\n              className={classes.textField}\n              required\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n  const cq = (\n    <Row className=\"justify-content-center\">\n      <Col xs={12} lg={6}>\n        <Row>\n          <Col xs={12}>\n            <Forms\n              id=\"description\"\n              type=\"textField\"\n              label=\"Description\"\n              labelWidth={80}\n              values={values.description}\n              handleChange={handleChange}\n              rows={4}\n              classes={classes}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Forms\n              id=\"question\"\n              type=\"textField\"\n              label=\"Question\"\n              labelWidth={75}\n              values={values.question}\n              handleChange={handleChange}\n              required={true}\n              rows={4}\n              classes={classes}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <TextField\n              type=\"number\"\n              label=\"Marks\"\n              variant=\"outlined\"\n              value={values.marks}\n              onChange={handleChange(\"marks\")}\n              className={classes.textField}\n              required\n            />\n          </Col>\n          <Col xs={12} sm={6} md={4}>\n            <TextField\n              id=\"min\"\n              type=\"number\"\n              placeholder=\"00\"\n              label=\"Minutes\"\n              variant=\"outlined\"\n              value={values.min}\n              onChange={handleChange(\"min\")}\n              className={classes.textField}\n              required\n            />\n          </Col>\n          <Col xs={12} sm={6} md={4}>\n            <TextField\n              id=\"sec\"\n              min=\"0\"\n              type=\"number\"\n              max=\"59\"\n              placeholder=\"00\"\n              label=\"Seconds\"\n              variant=\"outlined\"\n              value={values.sec}\n              onChange={handleChange(\"sec\")}\n              className={classes.textField}\n              required\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n  console.log(props.examType, \"exam type\");\n  return (\n    <Container fluid className=\"justify-content-flex-start\">\n      <Toast\n        className=\"toast-modify\"\n        autohide\n        onClose={() => setShowToast(false)}\n        show={showToast}\n      >\n        <Toast.Header>\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n          <strong className=\"mr-auto\">Alert Message</strong>\n          <small>just now</small>\n        </Toast.Header>\n        <Toast.Body>You Have To Create At Least One Question!</Toast.Body>\n      </Toast>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"auto\">\n          <h3>Create Your Question Here</h3>\n        </Col>\n      </Row>\n      <form onSubmit={sendQuestion}>\n        {props.examType === \"CQ\" ? cq : mcq}\n        <Row className=\"justify-content-center\">\n          <ButtonGroup size=\"large\" color=\"primary\">\n            <Button\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<EditIcon />}\n            >\n              Edit\n            </Button>\n            <Button\n              disabled={questionEditDisable}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<SaveIcon />}\n              type=\"submit\"\n            >\n              Save\n            </Button>\n            <Button\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<LockIcon />}\n              onClick={handleClickOpen}\n            >\n              Lock Exam\n            </Button>\n          </ButtonGroup>\n        </Row>\n      </form>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Lock This Exam</DialogTitle>\n        <DialogContent>\n          <TextField\n            id=\"exam-name\"\n            type=\"text\"\n            label=\"Exam Name\"\n            value={values.name}\n            onChange={handleChange(\"name\")}\n            required={true}\n            classes={classes.textField}\n          />\n\n          <br />\n          <br />\n\n          <TextField\n            id=\"datetime-local\"\n            label=\"Schedule Exam\"\n            type=\"datetime-local\"\n            value={values.date}\n            onChange={handleChange(\"date\")}\n            defaultValue=\"2021-05-01T10:30\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <DialogContentText>\n            <br />\n            Total Marks: {props.totalMarks}\n            <br />\n            Total Time: {props.totalTime}\n            <br />\n            <br />\n            By clicking confirm this exam will be created as schedule.\n            <br />\n            <br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={createExam} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Exams.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React from \"react\";\nimport { Col, Container, Row, Card, Alert, Table } from \"react-bootstrap\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Box, CardContent, MenuList, Typography } from \"@material-ui/core\";\n\nimport {\n  Button,\n  Modal,\n  Form,\n  Spinner,\n  Jumbotron,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nconst Exams = (props) => {\n  console.log(props.userInfo.role);\n\n  const exams = [];\n\n  if (props.courseData.cqExams) {\n    props.courseData.cqExams.forEach((exam, j) => {\n      const date = new Date();\n      if (\n        new Date(exam.examId.date).getTime() + exam.examId.totalTime * 60 <\n        date.getTime()\n      )\n        exams.push({\n          _id: exam.examId._id,\n          name: exam.examId.name,\n          courseName: props.courseData.name,\n          date: new Date(exam.examId.date),\n          totalMarks: exam.examId.totalMarks,\n          examType: \"cq\",\n          when: \"previous\",\n          totalTime: exam.examId.totalTime,\n          createdBy:\n            props.courseData.createdBy.firstName +\n            props.courseData.createdBy.lastName +\n            props.courseData.createdBy.username,\n        });\n      else {\n        exams.push({\n          _id: exam.examId._id,\n          name: exam.examId.name,\n          courseName: props.courseData.name,\n          date: new Date(exam.examId.date),\n          totalMarks: exam.examId.totalMarks,\n          totalTime: exam.examId.totalTime,\n          examType: \"cq\",\n          when: \"upcoming\",\n          createdBy:\n            props.courseData.createdBy.firstName +\n            \" \" +\n            props.courseData.createdBy.lastName +\n            \" \" +\n            props.courseData.createdBy.username,\n        });\n      }\n    });\n  }\n\n  if (props.courseData.mcqExams) {\n    const date = new Date();\n    props.courseData.mcqExams.forEach((exam, j) => {\n      if (\n        new Date(exam.examId.date).getTime() + exam.examId.totalTime * 60 >\n        date.getTime()\n      )\n        exams.push({\n          _id: exam.examId._id,\n          name: exam.examId.name,\n          courseName: props.courseData.name,\n          date: new Date(exam.examId.date),\n          totalMarks: exam.examId.totalMarks,\n          totalTime: exam.examId.totalTime,\n          examType: \"mcq\",\n          when: \"upcoming\",\n          createdBy:\n            props.courseData.createdBy.firstName +\n            \" \" +\n            props.courseData.createdBy.lastName +\n            \" \" +\n            props.courseData.createdBy.username,\n        });\n      else {\n        exams.push({\n          _id: exam.examId._id,\n          name: exam.examId.name,\n          courseName: props.courseData.name,\n          date: new Date(exam.examId.date),\n          totalMarks: exam.examId.totalMarks,\n          totalTime: exam.examId.totalTime,\n          examType: \"mcq\",\n          when: \"previous\",\n          createdBy:\n            props.courseData.createdBy.firstName +\n            \" \" +\n            props.courseData.createdBy.lastName +\n            \" \" +\n            props.courseData.createdBy.username,\n        });\n      }\n    });\n  }\n\n  exams.sort(function (a, b) {\n    return b.date.getTime() - a.date.getTime();\n  });\n\n  let x = 1;\n  const tableBody = exams.map((exam) => {\n    console.log(exam);\n    return (\n      <>\n        <tr>\n          <td>{x++}</td>\n          <td>\n            <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\n              {x == 2 ? \"👑\" : \"\"}\n            </span>\n            {exam.name}\n          </td>\n          <td>{exam.examType}</td>\n          <td>{exam.totalMarks}</td>\n          <td>{`${Math.round(exam.totalTime / 60)} min : ${\n            exam.totalTime % 60\n          } sec`}</td>\n          <td>{exam.when}</td>\n          <td>{exam.date.toString()}</td>\n          {props.userInfo.role === \"Teacher\" ? (\n            <td>\n              <Button href={`/examine/cq/${exam._id}`} variant=\"primary\">\n                Examine\n              </Button>\n            </td>\n          ) : (\n            null\n          )}\n\n          <td>\n            <Button href={`/${exam.when}-exam/${exam._id}`} variant=\"info\">\n              View\n            </Button>\n          </td>\n        </tr>\n      </>\n    );\n  });\n\n  return (\n    <table\n      className=\"table table-hover table-striped table-light\"\n      style={{ textAlign: \"center\" }}\n    >\n      <thead className=\"thead-dark\">\n        <tr>\n          <th>#</th>\n          <th>Exam Name</th>\n          <th>Exam Type</th>\n          <th>Total Marks</th>\n          <th>Total Time</th>\n\n          <th>Condition</th>\n          <th>Date</th>\n          {props.userInfo.role === \"Teacher\" ? <th>Check</th> : null}\n          <th>Action</th>\n        </tr>\n      </thead>\n\n      <tbody>{tableBody}</tbody>\n    </table>\n  );\n};\n\nexport default Exams;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Students.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"import React from \"react\";\nimport { Col, Container, Row, Card, Alert, Table } from \"react-bootstrap\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Box, CardContent, MenuList, Typography } from \"@material-ui/core\";\n\nimport {\n  Button,\n  Modal,\n  Form,\n  Spinner,\n  Jumbotron,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nconst Students = (props) => {\n  console.log(props.userInfo);\n  console.log(props.courseData);\n\n  let x = 1;\n  const tableBody = props.courseData.students.map((students) => {\n    return (\n      <>\n        <tr>\n          <td>{x++}</td>\n          {/* <td> */}\n          {/* <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\n              {x == 2 ? \"👑\" : \"\"}\n            </span> */}\n          {/* {students.student} */}\n          {/* </td> */}\n          {/*   <td>{exam.examType}</td>\n          <td>{exam.totalMarks}</td>\n          <td>{`${Math.round(exam.totalTime / 60)} min : ${\n            exam.totalTime % 60\n          } sec`}</td>\n          <td>{exam.when}</td>\n          <td>{exam.date.toString()}</td>\n          {props.userInfo.role === \"Teacher\" ? (\n            <td>\n              <Button href={`/profile/${tudents.student}`} variant=\"primary\">\n                Examine\n              </Button>\n            </td>\n          ) : (\n            null\n          )} */}\n\n          <td>\n            <Button href={`/profile/${students.student}`} variant=\"primary\">\n              Examine\n            </Button>\n          </td>\n\n          {/* <td>\n            <Button href={`/${exam.when}-exam/${exam._id}`} variant=\"info\">\n              View\n            </Button>\n          </td> */}\n        </tr>\n      </>\n    );\n  });\n\n  return (\n    <table\n      className=\"table table-hover table-striped table-light\"\n      style={{ textAlign: \"center\" }}\n    >\n      <thead className=\"thead-dark\">\n        <tr>\n          <th>#</th>\n          {/* <th>Exam Name</th>\n          <th>Exam Type</th>\n          <th>Total Marks</th>\n          <th>Total Time</th>\n\n          <th>Condition</th>\n          <th>Date</th>\n          {props.userInfo.role === \"Teacher\" ? <th>Check</th> : null} */}\n          <th>Action</th>\n        </tr>\n      </thead>\n\n      <tbody>{tableBody}</tbody>\n    </table>\n  );\n};\n\nexport default Students;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Profile/Profile.js",["250","251","252"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/Examine.js",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/404/Error404.js",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":22},{"ruleId":"275","severity":1,"message":"279","line":11,"column":8,"nodeType":"277","messageId":"278","endLine":11,"endColumn":14},{"ruleId":"275","severity":1,"message":"280","line":31,"column":9,"nodeType":"277","messageId":"278","endLine":31,"endColumn":17},{"ruleId":"275","severity":1,"message":"281","line":35,"column":7,"nodeType":"277","messageId":"278","endLine":35,"endColumn":16},{"ruleId":"275","severity":1,"message":"282","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":23},{"ruleId":"275","severity":1,"message":"283","line":15,"column":3,"nodeType":"277","messageId":"278","endLine":15,"endColumn":7},{"ruleId":"275","severity":1,"message":"284","line":16,"column":3,"nodeType":"277","messageId":"278","endLine":16,"endColumn":11},{"ruleId":"275","severity":1,"message":"285","line":45,"column":9,"nodeType":"277","messageId":"278","endLine":45,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":53,"column":6,"nodeType":"288","endLine":53,"endColumn":8,"suggestions":"289"},{"ruleId":"275","severity":1,"message":"290","line":32,"column":10,"nodeType":"277","messageId":"278","endLine":32,"endColumn":18},{"ruleId":"275","severity":1,"message":"291","line":32,"column":20,"nodeType":"277","messageId":"278","endLine":32,"endColumn":31},{"ruleId":"275","severity":1,"message":"281","line":36,"column":7,"nodeType":"277","messageId":"278","endLine":36,"endColumn":16},{"ruleId":"275","severity":1,"message":"292","line":40,"column":23,"nodeType":"277","messageId":"278","endLine":40,"endColumn":37},{"ruleId":"286","severity":1,"message":"293","line":55,"column":16,"nodeType":"294","endLine":55,"endColumn":44},{"ruleId":"275","severity":1,"message":"295","line":61,"column":11,"nodeType":"277","messageId":"278","endLine":61,"endColumn":17},{"ruleId":"275","severity":1,"message":"296","line":99,"column":9,"nodeType":"277","messageId":"278","endLine":99,"endColumn":19},{"ruleId":"297","severity":1,"message":"298","line":178,"column":43,"nodeType":"299","endLine":178,"endColumn":66},{"ruleId":"275","severity":1,"message":"300","line":183,"column":7,"nodeType":"277","messageId":"278","endLine":183,"endColumn":8},{"ruleId":"301","severity":1,"message":"302","line":185,"column":42,"nodeType":"303","messageId":"304","endLine":185,"endColumn":44},{"ruleId":"305","severity":1,"message":"306","line":254,"column":32,"nodeType":"307","messageId":"308","endLine":254,"endColumn":34},{"ruleId":"297","severity":1,"message":"298","line":317,"column":15,"nodeType":"299","endLine":317,"endColumn":36},{"ruleId":"275","severity":1,"message":"309","line":60,"column":9,"nodeType":"277","messageId":"278","endLine":60,"endColumn":26},{"ruleId":"275","severity":1,"message":"282","line":2,"column":17,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"310","line":30,"column":6,"nodeType":"288","endLine":30,"endColumn":8,"suggestions":"311"},{"ruleId":"301","severity":1,"message":"312","line":40,"column":35,"nodeType":"303","messageId":"313","endLine":40,"endColumn":37},{"ruleId":"301","severity":1,"message":"312","line":42,"column":40,"nodeType":"303","messageId":"313","endLine":42,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":44,"column":29,"nodeType":"307","messageId":"308","endLine":44,"endColumn":31},{"ruleId":"301","severity":1,"message":"312","line":49,"column":41,"nodeType":"303","messageId":"313","endLine":49,"endColumn":43},{"ruleId":"305","severity":1,"message":"306","line":51,"column":29,"nodeType":"307","messageId":"308","endLine":51,"endColumn":31},{"ruleId":"275","severity":1,"message":"314","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"315","line":2,"column":26,"nodeType":"277","messageId":"278","endLine":2,"endColumn":35},{"ruleId":"316","severity":1,"message":"317","line":45,"column":3,"nodeType":"318","messageId":"308","endLine":45,"endColumn":7},{"ruleId":"275","severity":1,"message":"319","line":64,"column":10,"nodeType":"277","messageId":"278","endLine":64,"endColumn":22},{"ruleId":"275","severity":1,"message":"320","line":64,"column":24,"nodeType":"277","messageId":"278","endLine":64,"endColumn":39},{"ruleId":"275","severity":1,"message":"321","line":99,"column":7,"nodeType":"277","messageId":"278","endLine":99,"endColumn":11},{"ruleId":"275","severity":1,"message":"322","line":117,"column":10,"nodeType":"277","messageId":"278","endLine":117,"endColumn":23},{"ruleId":"275","severity":1,"message":"323","line":117,"column":25,"nodeType":"277","messageId":"278","endLine":117,"endColumn":41},{"ruleId":"275","severity":1,"message":"324","line":119,"column":10,"nodeType":"277","messageId":"278","endLine":119,"endColumn":21},{"ruleId":"275","severity":1,"message":"325","line":295,"column":11,"nodeType":"277","messageId":"278","endLine":295,"endColumn":24},{"ruleId":"301","severity":1,"message":"302","line":348,"column":51,"nodeType":"303","messageId":"304","endLine":348,"endColumn":53},{"ruleId":"305","severity":1,"message":"326","line":349,"column":15,"nodeType":"307","messageId":"308","endLine":349,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":26,"column":3,"nodeType":"318","messageId":"308","endLine":26,"endColumn":7},{"ruleId":"327","severity":1,"message":"328","line":120,"column":30,"nodeType":"329","messageId":"330","endLine":120,"endColumn":52,"fix":"331"},{"ruleId":"327","severity":1,"message":"328","line":122,"column":30,"nodeType":"329","messageId":"330","endLine":122,"endColumn":43,"fix":"332"},{"ruleId":"275","severity":1,"message":"333","line":4,"column":3,"nodeType":"277","messageId":"278","endLine":4,"endColumn":9},{"ruleId":"275","severity":1,"message":"334","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":8},{"ruleId":"275","severity":1,"message":"335","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":10},{"ruleId":"275","severity":1,"message":"336","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":12},{"ruleId":"275","severity":1,"message":"337","line":16,"column":3,"nodeType":"277","messageId":"278","endLine":16,"endColumn":15},{"ruleId":"275","severity":1,"message":"338","line":18,"column":3,"nodeType":"277","messageId":"278","endLine":18,"endColumn":13},{"ruleId":"275","severity":1,"message":"339","line":19,"column":3,"nodeType":"277","messageId":"278","endLine":19,"endColumn":10},{"ruleId":"275","severity":1,"message":"340","line":31,"column":8,"nodeType":"277","messageId":"278","endLine":31,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":92,"column":34,"nodeType":"307","messageId":"308","endLine":92,"endColumn":36},{"ruleId":"305","severity":1,"message":"306","line":117,"column":34,"nodeType":"307","messageId":"308","endLine":117,"endColumn":36},{"ruleId":"286","severity":1,"message":"341","line":133,"column":6,"nodeType":"288","endLine":133,"endColumn":8,"suggestions":"342"},{"ruleId":"275","severity":1,"message":"343","line":10,"column":8,"nodeType":"277","messageId":"278","endLine":10,"endColumn":25},{"ruleId":"275","severity":1,"message":"344","line":19,"column":10,"nodeType":"277","messageId":"278","endLine":19,"endColumn":24},{"ruleId":"275","severity":1,"message":"285","line":41,"column":9,"nodeType":"277","messageId":"278","endLine":41,"endColumn":16},{"ruleId":"275","severity":1,"message":"345","line":138,"column":15,"nodeType":"277","messageId":"278","endLine":138,"endColumn":22},{"ruleId":"286","severity":1,"message":"346","line":152,"column":6,"nodeType":"288","endLine":152,"endColumn":8,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":426,"column":23,"nodeType":"350","endLine":426,"endColumn":55},{"ruleId":"275","severity":1,"message":"314","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"351","line":31,"column":10,"nodeType":"277","messageId":"278","endLine":31,"endColumn":15},{"ruleId":"275","severity":1,"message":"352","line":33,"column":9,"nodeType":"277","messageId":"278","endLine":33,"endColumn":21},{"ruleId":"275","severity":1,"message":"353","line":5,"column":27,"nodeType":"277","messageId":"278","endLine":5,"endColumn":33},{"ruleId":"286","severity":1,"message":"354","line":40,"column":30,"nodeType":"277","endLine":40,"endColumn":37},{"ruleId":"275","severity":1,"message":"355","line":95,"column":10,"nodeType":"277","messageId":"278","endLine":95,"endColumn":21},{"ruleId":"305","severity":1,"message":"306","line":32,"column":20,"nodeType":"307","messageId":"308","endLine":32,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":68,"column":20,"nodeType":"307","messageId":"308","endLine":68,"endColumn":22},{"ruleId":"275","severity":1,"message":"333","line":7,"column":3,"nodeType":"277","messageId":"278","endLine":7,"endColumn":9},{"ruleId":"275","severity":1,"message":"334","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":8},{"ruleId":"275","severity":1,"message":"335","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":10},{"ruleId":"275","severity":1,"message":"336","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":12},{"ruleId":"275","severity":1,"message":"356","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":6},{"ruleId":"275","severity":1,"message":"337","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":15},{"ruleId":"275","severity":1,"message":"357","line":14,"column":3,"nodeType":"277","messageId":"278","endLine":14,"endColumn":12},{"ruleId":"275","severity":1,"message":"338","line":15,"column":3,"nodeType":"277","messageId":"278","endLine":15,"endColumn":13},{"ruleId":"275","severity":1,"message":"339","line":16,"column":3,"nodeType":"277","messageId":"278","endLine":16,"endColumn":10},{"ruleId":"358","severity":1,"message":"359","line":13,"column":3,"nodeType":"360","messageId":"361","endLine":15,"endColumn":4},{"ruleId":"275","severity":1,"message":"362","line":174,"column":11,"nodeType":"277","messageId":"278","endLine":174,"endColumn":27},{"ruleId":"275","severity":1,"message":"363","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":13},{"ruleId":"275","severity":1,"message":"364","line":2,"column":15,"nodeType":"277","messageId":"278","endLine":2,"endColumn":24},{"ruleId":"275","severity":1,"message":"365","line":2,"column":26,"nodeType":"277","messageId":"278","endLine":2,"endColumn":29},{"ruleId":"275","severity":1,"message":"366","line":2,"column":31,"nodeType":"277","messageId":"278","endLine":2,"endColumn":35},{"ruleId":"275","severity":1,"message":"367","line":2,"column":37,"nodeType":"277","messageId":"278","endLine":2,"endColumn":42},{"ruleId":"275","severity":1,"message":"368","line":2,"column":44,"nodeType":"277","messageId":"278","endLine":2,"endColumn":49},{"ruleId":"275","severity":1,"message":"284","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":16},{"ruleId":"275","severity":1,"message":"369","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":13},{"ruleId":"275","severity":1,"message":"370","line":4,"column":15,"nodeType":"277","messageId":"278","endLine":4,"endColumn":26},{"ruleId":"275","severity":1,"message":"371","line":4,"column":28,"nodeType":"277","messageId":"278","endLine":4,"endColumn":36},{"ruleId":"275","severity":1,"message":"372","line":4,"column":38,"nodeType":"277","messageId":"278","endLine":4,"endColumn":48},{"ruleId":"275","severity":1,"message":"334","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":8},{"ruleId":"275","severity":1,"message":"373","line":9,"column":3,"nodeType":"277","messageId":"278","endLine":9,"endColumn":7},{"ruleId":"275","severity":1,"message":"335","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":10},{"ruleId":"275","severity":1,"message":"336","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":12},{"ruleId":"275","severity":1,"message":"356","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":6},{"ruleId":"275","severity":1,"message":"337","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":15},{"ruleId":"275","severity":1,"message":"357","line":14,"column":3,"nodeType":"277","messageId":"278","endLine":14,"endColumn":12},{"ruleId":"275","severity":1,"message":"338","line":15,"column":3,"nodeType":"277","messageId":"278","endLine":15,"endColumn":13},{"ruleId":"275","severity":1,"message":"339","line":16,"column":3,"nodeType":"277","messageId":"278","endLine":16,"endColumn":10},{"ruleId":"305","severity":1,"message":"306","line":123,"column":18,"nodeType":"307","messageId":"308","endLine":123,"endColumn":20},{"ruleId":"275","severity":1,"message":"363","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":13},{"ruleId":"275","severity":1,"message":"364","line":2,"column":15,"nodeType":"277","messageId":"278","endLine":2,"endColumn":24},{"ruleId":"275","severity":1,"message":"365","line":2,"column":26,"nodeType":"277","messageId":"278","endLine":2,"endColumn":29},{"ruleId":"275","severity":1,"message":"366","line":2,"column":31,"nodeType":"277","messageId":"278","endLine":2,"endColumn":35},{"ruleId":"275","severity":1,"message":"367","line":2,"column":37,"nodeType":"277","messageId":"278","endLine":2,"endColumn":42},{"ruleId":"275","severity":1,"message":"368","line":2,"column":44,"nodeType":"277","messageId":"278","endLine":2,"endColumn":49},{"ruleId":"275","severity":1,"message":"284","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":16},{"ruleId":"275","severity":1,"message":"369","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":13},{"ruleId":"275","severity":1,"message":"370","line":4,"column":15,"nodeType":"277","messageId":"278","endLine":4,"endColumn":26},{"ruleId":"275","severity":1,"message":"371","line":4,"column":28,"nodeType":"277","messageId":"278","endLine":4,"endColumn":36},{"ruleId":"275","severity":1,"message":"372","line":4,"column":38,"nodeType":"277","messageId":"278","endLine":4,"endColumn":48},{"ruleId":"275","severity":1,"message":"334","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":8},{"ruleId":"275","severity":1,"message":"373","line":9,"column":3,"nodeType":"277","messageId":"278","endLine":9,"endColumn":7},{"ruleId":"275","severity":1,"message":"335","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":10},{"ruleId":"275","severity":1,"message":"336","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":12},{"ruleId":"275","severity":1,"message":"356","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":6},{"ruleId":"275","severity":1,"message":"337","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":15},{"ruleId":"275","severity":1,"message":"357","line":14,"column":3,"nodeType":"277","messageId":"278","endLine":14,"endColumn":12},{"ruleId":"275","severity":1,"message":"338","line":15,"column":3,"nodeType":"277","messageId":"278","endLine":15,"endColumn":13},{"ruleId":"275","severity":1,"message":"339","line":16,"column":3,"nodeType":"277","messageId":"278","endLine":16,"endColumn":10},{"ruleId":"275","severity":1,"message":"336","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":27,"column":3,"nodeType":"318","messageId":"308","endLine":27,"endColumn":7},{"ruleId":"286","severity":1,"message":"293","line":40,"column":16,"nodeType":"294","endLine":40,"endColumn":44},{"ruleId":"275","severity":1,"message":"333","line":4,"column":3,"nodeType":"277","messageId":"278","endLine":4,"endColumn":9},{"ruleId":"275","severity":1,"message":"334","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":8},{"ruleId":"275","severity":1,"message":"335","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":10},{"ruleId":"275","severity":1,"message":"336","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":12},{"ruleId":"275","severity":1,"message":"356","line":15,"column":3,"nodeType":"277","messageId":"278","endLine":15,"endColumn":6},{"ruleId":"275","severity":1,"message":"337","line":16,"column":3,"nodeType":"277","messageId":"278","endLine":16,"endColumn":15},{"ruleId":"275","severity":1,"message":"357","line":17,"column":3,"nodeType":"277","messageId":"278","endLine":17,"endColumn":12},{"ruleId":"275","severity":1,"message":"338","line":18,"column":3,"nodeType":"277","messageId":"278","endLine":18,"endColumn":13},{"ruleId":"275","severity":1,"message":"339","line":19,"column":3,"nodeType":"277","messageId":"278","endLine":19,"endColumn":10},{"ruleId":"275","severity":1,"message":"374","line":26,"column":8,"nodeType":"277","messageId":"278","endLine":26,"endColumn":17},{"ruleId":"275","severity":1,"message":"284","line":28,"column":8,"nodeType":"277","messageId":"278","endLine":28,"endColumn":16},{"ruleId":"275","severity":1,"message":"340","line":31,"column":8,"nodeType":"277","messageId":"278","endLine":31,"endColumn":24},{"ruleId":"275","severity":1,"message":"371","line":36,"column":3,"nodeType":"277","messageId":"278","endLine":36,"endColumn":11},{"ruleId":"275","severity":1,"message":"375","line":41,"column":8,"nodeType":"277","messageId":"278","endLine":41,"endColumn":16},{"ruleId":"275","severity":1,"message":"376","line":76,"column":3,"nodeType":"277","messageId":"278","endLine":76,"endColumn":7},{"ruleId":"275","severity":1,"message":"377","line":90,"column":9,"nodeType":"277","messageId":"278","endLine":90,"endColumn":17},{"ruleId":"305","severity":1,"message":"306","line":97,"column":34,"nodeType":"307","messageId":"308","endLine":97,"endColumn":36},{"ruleId":"286","severity":1,"message":"310","line":112,"column":6,"nodeType":"288","endLine":112,"endColumn":8,"suggestions":"378"},"no-native-reassign",["379"],"no-negated-in-lhs",["380"],"no-unused-vars","'socketIOClient' is defined but never used.","Identifier","unusedVar","'Layout' is defined but never used.","'ENDPOINT' is assigned a value but never used.","'socketRef' is assigned a value but never used.","'useRef' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["381"],"'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'setsnackbarMsg' is assigned a value but never used.","Assignments to the 'userdata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'socket' is assigned a value but never used.","'joinCourse' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'x' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createCourseModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["382"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'useEffect' is defined but never used.","'TextField' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","'snackbarOpen' is assigned a value but never used.","'setSnackbarOpen' is assigned a value but never used.","'days' is assigned a value but never used.","'timerDeadline' is assigned a value but never used.","'setTimerDeadLine' is assigned a value but never used.","'snackbarMsg' is assigned a value but never used.","'reloadHandler' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"383","text":"384"},{"range":"385","text":"384"},"'Button' is defined but never used.","'Modal' is defined but never used.","'Spinner' is defined but never used.","'Jumbotron' is defined but never used.","'TabContainer' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array.",["386"],"'DialogContentText' is defined but never used.","'LinearProgress' is defined but never used.","'timeout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'index', and 'submitAnswers'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSeconds' needs the current value of 'index'.",["387"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Router' is defined but never used.","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'isApiLoaded' is assigned a value but never used.","'Tab' is defined but never used.","'ListGroup' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'questionsCreated' is assigned a value but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'Alert' is defined but never used.","'Table' is defined but never used.","'Box' is defined but never used.","'CardContent' is defined but never used.","'MenuList' is defined but never used.","'Typography' is defined but never used.","'Form' is defined but never used.","'MarkSheet' is defined but never used.","'ExamInfo' is defined but never used.","'role' is assigned a value but never used.","'examType' is assigned a value but never used.",["388"],"no-global-assign","no-unsafe-negation",{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},[2877,2886],"\"error\"",[2944,2953],{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"391","fix":"397"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"398","text":"399"},"Update the dependencies array to be: [id]",{"range":"400","text":"401"},"Update the dependencies array to be: [id, role]",{"range":"402","text":"403"},"Update the dependencies array to be: [id, index, submitAnswers]",{"range":"404","text":"405"},{"range":"406","text":"401"},[1038,1040],"[id, props.userInfo]",[821,823],"[id]",[3054,3056],"[id, role]",[4280,4282],"[id, index, submitAnswers]",[2073,2075]]