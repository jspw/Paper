[{"/home/jspw/Documents/Projects/Project 350/client/src/index.js":"1","/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js":"2","/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js":"3","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js":"4","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js":"5","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js":"6","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js":"7","/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js":"8","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js":"9","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js":"10","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js":"11","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js":"12","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js":"13","/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js":"14","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js":"15","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js":"16","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js":"17","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js":"18","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js":"19","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js":"20","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js":"21","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js":"22","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/ExamType.js":"23"},{"size":578,"mtime":1612727432119,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611434180840,"results":"26","hashOfConfig":"25"},{"size":3635,"mtime":1612898237204,"results":"27","hashOfConfig":"25"},{"size":2906,"mtime":1612860556105,"results":"28","hashOfConfig":"25"},{"size":3118,"mtime":1612748682822,"results":"29","hashOfConfig":"25"},{"size":4563,"mtime":1612892286513,"results":"30","hashOfConfig":"25"},{"size":4151,"mtime":1612703723217,"results":"31","hashOfConfig":"25"},{"size":4019,"mtime":1612635455952,"results":"32","hashOfConfig":"25"},{"size":9186,"mtime":1612703723217,"results":"33","hashOfConfig":"25"},{"size":11422,"mtime":1612886695581,"results":"34","hashOfConfig":"25"},{"size":1483,"mtime":1612877871802,"results":"35","hashOfConfig":"25"},{"size":12440,"mtime":1612898909013,"results":"36","hashOfConfig":"25"},{"size":11094,"mtime":1612856285182,"results":"37","hashOfConfig":"25"},{"size":2081,"mtime":1612885122495,"results":"38","hashOfConfig":"25"},{"size":511,"mtime":1612852176912,"results":"39","hashOfConfig":"25"},{"size":6753,"mtime":1612703723225,"results":"40","hashOfConfig":"25"},{"size":1891,"mtime":1612840619056,"results":"41","hashOfConfig":"25"},{"size":2051,"mtime":1612882004346,"results":"42","hashOfConfig":"25"},{"size":5357,"mtime":1612908306033,"results":"43","hashOfConfig":"25"},{"size":11100,"mtime":1612801073680,"results":"44","hashOfConfig":"25"},{"size":5338,"mtime":1612909593703,"results":"45","hashOfConfig":"25"},{"size":14768,"mtime":1612909720949,"results":"46","hashOfConfig":"25"},{"size":3212,"mtime":1612909283734,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"kvcbqu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jspw/Documents/Projects/Project 350/client/src/index.js",[],["108","109"],"/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js",["110","111","112","113"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js",["114","115","116","117","118"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport socketIOClient from \"socket.io-client\";\n\nconst Layout = (props) => {\n  const [showModal, setShowModal] = useState(true);\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  const SelectForm = () => {\n    let items = [];\n\n    if (props.universityInfo) {\n      props.universityInfo.forEach((element) => {\n        if (element.shortform === props.userInfo.varsity) {\n          element.departments.forEach((dept) => {\n            // console.log(dept);\n            items.push({\n              id: dept._id,\n              value: dept.shortform,\n            });\n          });\n        }\n      });\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl variant=\"outlined\" fullWidth required>\n        <InputLabel>{props.label}</InputLabel>\n        <Select value={props.values} label={props.label}>\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  const createCourseModal = (\n    <Modal\n      show={showModal}\n      onHide={handleCloseModal}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Create Course</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Control placeholder=\"Course Name\" />\n            </Col>\n            <Col>\n              <Form.Control placeholder=\"Code\" />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                readOnly\n                defaultValue={\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\n                }\n              />\n            </Col>\n            <Col>\n              <SelectForm />\n            </Col>\n          </Row>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\">Understood</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n\n  return (\n    <Container>\n      <Button onClick={handleShowModal}>Create Course </Button>;\n    </Container>\n  );\n};\n\nexport default Layout;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js",["119","120","121","122","123"],"import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Exam(props) {\n  // const { match } = props;\n\n  // console.log(\"Exam id\",match);\n  console.log(\"props... \", props);\n\n  let { id } = useParams();\n  console.log(\"ID\", id);\n\n  const [examData, setExamData] = useState(null);\n\n  const [timer, setTimer] = useState(null);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios.get(`${props.userInfo.role}/exam/${id}`).then((response) => {\n        const data = response.data;\n        setExamData(data.result.data);\n      });\n  }, []);\n\n  console.log(\"Exam Data\", examData);\n\n  let examQuestionUi;\n\n  if (examData && examData.mcqQuestions) {\n    examQuestionUi = examData.mcqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.mcqQuestionId.description}</Typography>\n\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\n\n            <List>\n              {question.mcqQuestionId.options.map((options) => {\n                return (\n                  <ListItem>\n                    <CardActions Button>{options.option}</CardActions>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  } else if (examData && examData.cqQuestions) {\n    examQuestionUi = examData.cqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.cqQuestionId.description}</Typography>\n\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\n            <TextField\n              id=\"outlined-textarea\"\n              label=\"Ans\"\n              placeholder=\"Write here\"\n              multiline\n              variant=\"outlined\"\n            />\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  }\n\n  let x = 0;\n\n  if (examData)\n    setInterval(() => {\n      const date = new Date();\n      setTimer(date.getSeconds());\n    }, 1000);\n\n  if (examData)\n    return (\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={8}>\n            <Paper>\n              <Typography variant=\"h2\" component=\"h2\">\n                {examData.name}\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper>\n              {\" \"}\n              <h3>{timer}</h3>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid>{examQuestionUi}</Grid>\n        <Button onClick={() => x++}>Next</Button>\n      </Container>\n    );\n  else return <CircularProgress />;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js",["124","125","126"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { FaBell } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\n\nlet navElements;\n\nexport default function Navigation(props) {\n  let history = useHistory();\n  const [showSign, setShowSign] = useState(true);\n  const navChange = () => setShowSign(false);\n\n  const [notifications, setnotifications] = useState(null);\n\n  if (props.notifications) setnotifications(props.notifications);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [anchor, setAnchor] = React.useState(null);\n  const isNotificationOpen = Boolean(anchor);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleNotificationMenuOpen = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setAnchor(null);\n  };\n\n  const handleSignout = () => {\n    localStorage.clear();\n    // props.login.isLogin = \"Failed\";\n    window.location.reload();\n    history.push(\"/\");\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"profile-menu\"\n      keepMounted\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      style={{ width: \"340px\" }}\n    >\n      <MenuItem onClick={handleMenuClose} /*style={{width: \"340px\"}}*/>\n        Profile\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\n        Sign Out\n      </MenuItem>\n    </Menu>\n  );\n\n  const renderNotificationMenu = (\n    <Menu\n      anchorEl={anchor}\n      id=\"notification menu\"\n      open={isNotificationOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <MenuItem onClick={handleMenuClose}>\n        {notifications ? notifications : \"No Notifications\"}\n      </MenuItem>\n    </Menu>\n  );\n\n  console.log(\"Login status\", props.loginStatus);\n\n  if (props.loginStatus == null) {\n    navElements = (\n      <>\n        <Spinner animation=\"grow\" />\n      </>\n    );\n  } else if (props.loginStatus == \"OK\") {\n    navElements = (\n      <>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotificationMenuOpen}\n        >\n          <Badge badgeContent={17} color=\"secondary\">\n            <FaBell style={{ color: \"white\" }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          // aria-controls={menuId}\n          aria-haspopup=\"true\"\n          onClick={handleProfileMenuOpen}\n          color=\"inherit\"\n        >\n          <FaUserAlt style={{ color: \"white\" }} />\n        </IconButton>\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\n        {renderNotificationMenu}\n        {renderProfileMenu}\n      </>\n    );\n  } else {\n    navElements = (\n      <>\n        <Link to=\"signUp\" onClick={navChange}>\n          <MenuItem> Sign Up</MenuItem>\n        </Link>\n        <Link to=\"signIn\" onClick={navChange}>\n          <MenuItem>Sign In</MenuItem>\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <Navbar bg=\"\" style={{ backgroundColor: \"#010302\" }} variant=\"dark\">\n      <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\n        <>\n          <img\n            src={\"/static/paper.png\"}\n            width={\"38\"}\n            height={\"38\"}\n            className={\"d-inline-block align-top\"}\n            className=\"nav__logo\"\n            alt={\"logo\"}\n          />\n          <span className=\"nav__heading\" style={{ fontSize: \"122%\" }}>\n            paper\n          </span>\n        </>\n      </Navbar.Brand>\n      {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\n    </Navbar>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { useEffect, useState } from \"react\";\nimport Timer from \"../Timer/Timer\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n} from \"react-bootstrap\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  Menu,\n  MenuList,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nconst UpcomingExam = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const { id } = useParams();\n\n  console.log(props.userInfo);\n  // console.log(id);\n\n  let examInfo;\n  props.userInfo.courses.map((course) => {\n    //   console.log(course);\n    course.course.cqExams.map((exam) => {\n      //   console.log(exam.examId._id);\n      if (exam.examId._id == id) {\n        //   console.log(exam);\n        examInfo = exam.examId;\n      }\n    });\n    course.course.mcqExams.map((exam) => {\n      //   console.log(exam.examId._id);\n      if (exam.examId._id == id) examInfo = exam.examId;\n    });\n  });\n\n  console.log(examInfo);\n\n  return (\n    <Container>\n      <Alert variant=\"danger\">\n        <p className=\"text-center\">Exam Has Not Started Yet</p>\n      </Alert>\n      {/* <Alert variant=\"light\"> */}\n      <h1 className=\"text-center\">{examInfo.name}</h1>\n      {/* </Alert> */}\n\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <Table\n                // variant=\"dark\"\n                responsive\n                hover\n                bordered\n                size=\"sm\"\n                bsPrefix=\"table\"\n              >\n                <tbody>\n                  <tr>\n                    <td>Time</td>\n                    <td>\n                      {new Date(examInfo.date).getHours() < 10\n                        ? \"0\" + new Date(examInfo.date).getHours()\n                        : new Date(examInfo.date).getHours()}\n                      :\n                      {new Date(examInfo.date).getMinutes() < 10\n                        ? \"0\" + new Date(examInfo.date).getMinutes()\n                        : new Date(examInfo.date).getMinutes()}{\" \"}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Date</td>\n                    <td>\n                      {new Date(examInfo.date).getDate()}th{\" \"}\n                      {months[new Date(examInfo.date).getMonth()]},\n                      {new Date(examInfo.date).getFullYear()} (\n                      {days[new Date(examInfo.date).getDay()]})\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col>\n          <Row>\n            <Col></Col>\n            <Col>\n              <Table\n                // variant=\"dark\"\n                responsive\n                hover\n                bordered\n                size=\"sm\"\n                bsPrefix=\"table\"\n              >\n                <tbody>\n                  <tr>\n                    <td>Total Marks</td>\n                    <td>{examInfo.totalMarks}</td>\n                  </tr>\n                  <tr>\n                    <td>Total Time</td>\n                    <td>{examInfo.totalTime} min</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Timer deadline={examInfo.date} />\n    </Container>\n  );\n};\n\nexport default UpcomingExam;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js",["152","153","154"],"import React, { useState } from \"react\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Forms from \"../Generic/Forms\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./SignIn.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    // margin: theme.spacing(1),\n  },\n  textField: {\n    // width: \"15vw\",\n    // margin: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  shadows: [\"none\"],\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    role: \"\",\n    designation: \"\",\n    university: \"\",\n    department: \"\",\n    session: \"\",\n    regNo: \"\",\n    result: \"\",\n    error: \"\",\n  });\n\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: apiDomain + \"university/all\",\n  //   })\n  //     .then((response) => {\n  //       // console.log(\"All Universites..\");\n\n  //       // console.log(response.data);\n\n  //       const data = response.data;\n\n  //       if (data.status === \"OK\") {\n  //         setUniversities(data.result.data);\n  //       }\n  //     })\n  //     .catch((error) => console.log(error));\n  // }, []);\n\n  // console.log(\"API CALL DATA\", universities);\n  let history = useHistory();\n\n  const obj = {\n    role: values.role,\n    username: values.username,\n    email: values.email,\n    password: values.password,\n    repassword: values.confirmPassword,\n    firstName: values.firstName,\n    lastName: values.lastName,\n    department: values.department,\n    registrationNo: parseInt(values.regNo, 10),\n    session: values.session,\n    varsity: values.university,\n    designation: values.designation,\n  };\n\n  const body = JSON.stringify(obj);\n\n  const handleSignUp = (e) => {\n    // console.log('hello')\n    fetchData();\n    e.preventDefault();\n  };\n  const fetchData = async () => {\n    let endpoint;\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\n    else endpoint = \"auth/create-student\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: body,\n    };\n\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\n\n    const data = await response.json();\n\n    console.log(\"API data\",data);\n\n    if (data.status === \"FAILED\")\n      setValues({ ...values, [\"error\"]: data.result });\n    else {\n      setValues({ ...values, [\"error\"]: \"\" });\n      const userdata = {\n        token: data.result.jwt.token,\n        role: data.result.data.role.toLowerCase(),\n        id: data.result.data.id,\n      };\n\n      console.log(userdata);\n\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\n      history.push(\"/\");\n      window.location.reload();\n    }\n    \n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  // if (universities)\n  return (\n    <Container>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.textField}>\n            <h2>Hello There!!</h2>\n            <p>Lets Sign Up to continue</p>\n          </Grid>\n        </Grid>\n        {values.error !== \"\" ? (\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.root}\n          >\n            <Alert elevation={0} severity=\"error\">\n              {values.error}\n            </Alert>\n          </Grid>\n        ) : null}\n        <form onSubmit={handleSignUp}>\n          <Grid item xs={12}>\n            <Forms\n              id=\"role\"\n              type=\"select\"\n              label=\"Role\"\n              classes={classes}\n              values={values.role}\n              handleChange={handleChange}\n            />\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"university\"\n                type=\"select\"\n                label=\"University\"\n                labelWidth={117}\n                classes={classes}\n                values={values.university}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                selectedUniversity={values.university}\n                id=\"department\"\n                type=\"select\"\n                label=\"Department\"\n                labelWidth={117}\n                classes={classes}\n                values={values.department}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          {values.role !== \"Teacher\" ? (\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"session\"\n                  type=\"select\"\n                  label=\"Session\"\n                  labelWidth={117}\n                  classes={classes}\n                  values={values.session}\n                  handleChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"regNo\"\n                  type=\"text\"\n                  label=\"Registration No\"\n                  labelWidth={120}\n                  classes={classes}\n                  values={values.regNo}\n                  handleChange={handleChange}\n                  required={true}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12}>\n              <Forms\n                id=\"designation\"\n                type=\"select\"\n                label=\"Designation\"\n                labelWidth={117}\n                classes={classes}\n                values={values.designation}\n                handleChange={handleChange}\n              />\n            </Grid>\n          )}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"firstName\"\n                type=\"text\"\n                label=\"First Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.firstName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"lastName\"\n                type=\"text\"\n                label=\"Last Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.lastName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"username\"\n                type=\"text\"\n                label=\"Username\"\n                labelWidth={84}\n                classes={classes}\n                values={values.username}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                labelWidth={110}\n                classes={classes}\n                values={values.email}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                labelWidth={80}\n                classes={classes}\n                values={values.password}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                labelWidth={140}\n                classes={classes}\n                values={values.confirmPassword}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.textField}>\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\n              Sign Up\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n  // else return <h1>Loading</h1>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js",["155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\nimport { HiClipboard } from \"react-icons/hi\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\nimport Timer from \"../Timer/Timer\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport LinearIndeterminate from \"../Generic/Loader\";\nimport \"./Home.scss\";\nexport default function Home(props) {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let courseUI;\n  let upcomingExams = [];\n  let upcomingExamsUI;\n  let mostUpcomingExamUI;\n  let previousExams = [];\n  let previousExamsUI;\n  let ongoingExams = [];\n\n  const [timerDeadline, setTimerDeadLine] = useState(Date.now());\n\n  if (props.userInfo) {\n    if (props.userInfo.courses) {\n      courseUI = props.userInfo.courses.map((course, k) => {\n        // console.log(items);\n        return (\n          <Grid\n            key={k}\n            container\n            alignItems=\"flex-start\"\n            xs\n            className=\"sideExams\"\n          >\n            <Grid item>\n              <SubjectIcon style={{ fontSize: \"27px\" }} />\n            </Grid>\n            <Grid item xs className=\"examName\">\n              <Link\n                to={`/course/${course.course._id}`}\n                style={{ textDecoration: \"none\", color: \"black\" }}\n              >\n                <span>{course.course.name}</span>\n              </Link>\n            </Grid>\n          </Grid>\n        );\n      });\n    }\n\n    props.userInfo.courses.forEach((course, i) => {\n      const date = new Date();\n\n      if (course.course.cqExams) {\n        course.course.cqExams.forEach((exam, j) => {\n          console.log(course.course);\n          if (\n            new Date(exam.examId.date).getTime() + exam.examId.totalTime * 60 <\n            date.getTime()\n          )\n            previousExams.push({\n              _id: exam.examId._id,\n              name: exam.examId.name,\n              courseName: course.course.name,\n              date: new Date(exam.examId.date),\n              totalMarks: exam.examId.totalMarks,\n              totalTime: exam.examId.totalTime,\n              createdBy:\n                course.course.createdBy.firstName +\n                course.course.createdBy.lastName +\n                course.course.createdBy.username,\n            });\n          else {\n            upcomingExams.push({\n              _id: exam.examId._id,\n              name: exam.examId.name,\n              courseName: course.course.name,\n              date: new Date(exam.examId.date),\n              totalMarks: exam.examId.totalMarks,\n              totalTime: exam.examId.totalTime,\n              createdBy:\n                course.course.createdBy.firstName +\n                \" \" +\n                course.course.createdBy.lastName +\n                \" \" +\n                course.course.createdBy.username,\n            });\n          }\n        });\n      }\n\n      if (course.course.mcqExams) {\n        course.course.mcqExams.forEach((exam, j) => {\n          if (\n            new Date(exam.examId.date).getTime() + exam.examId.totalTime * 60 <\n            date.getTime()\n          )\n            previousExams.push({\n              _id: exam.examId._id,\n              name: exam.examId.name,\n              courseName: course.course.name,\n              date: new Date(exam.examId.date),\n              totalMarks: exam.examId.totalMarks,\n              totalTime: exam.examId.totalTime,\n              createdBy:\n                course.course.createdBy.firstName +\n                \" \" +\n                course.course.createdBy.lastName +\n                \" \" +\n                course.course.createdBy.username,\n            });\n          else {\n            upcomingExams.push({\n              _id: exam.examId._id,\n              name: exam.examId.name,\n              courseName: course.course.name,\n              date: new Date(exam.examId.date),\n              totalMarks: exam.examId.totalMarks,\n              totalTime: exam.examId.totalTime,\n              createdBy:\n                course.course.createdBy.firstName +\n                \" \" +\n                course.course.createdBy.lastName +\n                \" \" +\n                course.course.createdBy.username,\n            });\n          }\n        });\n      }\n    });\n\n    upcomingExams.sort(function (a, b) {\n      return a.date.getTime() - b.date.getTime();\n    });\n    previousExams.sort(function (a, b) {\n      return b.date.getTime() - a.date.getTime();\n    });\n\n    ongoingExams.sort(function (a, b) {\n      return a.date.getTime() - b.date.getTime();\n    });\n\n    const reloadHandler = (event) => {\n      event.preventDefault();\n    };\n    let examSchedule;\n    if (upcomingExams.length > 0) {\n      examSchedule = `${\n        new Date(upcomingExams[0].date).getHours() < 10\n          ? \"0\" + new Date(upcomingExams[0].date).getHours()\n          : new Date(upcomingExams[0].date).getHours()\n      }:${\n        new Date(upcomingExams[0].date).getMinutes() < 10\n          ? \"0\" + new Date(upcomingExams[0].date).getMinutes()\n          : new Date(upcomingExams[0].date).getMinutes()\n      }\n      ${new Date(upcomingExams[0].date).getDate()}th ${\n        months[new Date(upcomingExams[0].date).getMonth()]\n      },\n      ${new Date(upcomingExams[0].date).getFullYear()}`;\n\n      mostUpcomingExamUI = (\n        <Container fluid key={upcomingExams[0]._id} alignItems=\"flex-start\">\n          <Row className=\"examHeading d-flex justify-content-between\">\n            <Col xs=\"auto\">\n              <span className=\"examName\">\n                <b>{upcomingExams[0].name}</b>\n              </span>\n            </Col>\n            <Col xs=\"auto\" className=\"examSchedule\">\n              <p>{examSchedule}</p>\n            </Col>\n          </Row>\n          <Row className=\"infos\">\n            <Col>\n              <span>Course: {upcomingExams[0].courseName}</span>\n            </Col>\n          </Row>\n          <Row className=\"infos\">\n            <Col>\n              <p>Host: {upcomingExams[0].createdBy}</p>\n            </Col>\n          </Row>\n          <Row className=\"infos\">\n            <Col>\n              <span>Total Marks: {upcomingExams[0].totalMarks}</span>\n            </Col>\n          </Row>\n          <Row className=\"infos\">\n            <Col>\n              <span>Total Time: {upcomingExams[0].totalTime}</span>\n            </Col>\n          </Row>\n        </Container>\n      );\n      upcomingExamsUI = upcomingExams.map((ex, i) => {\n        if (i != 0)\n          return (\n            <Container\n              fluid\n              key={ex._id}\n              alignItems=\"flex-start\"\n              className=\"upcoming__next\"\n            >\n              {/*               <Grid item>\n                  <SubjectIcon />\n                </Grid> */}\n              <Link to={`/upcoming-exam/${ex._id}`}>\n                <Row className=\"examHeading d-flex justify-content-between\">\n                  <Col xs=\"auto\">\n                    <span className=\"examName\">\n                      <b>{ex.name}</b>\n                    </span>\n                  </Col>\n                  <Col xs=\"auto\" className=\"examSchedule\">\n                    <p>\n                      {new Date(ex.date).getHours() < 10\n                        ? \"0\" + new Date(ex.date).getHours()\n                        : new Date(ex.date).getHours()}\n                      :\n                      {new Date(ex.date).getMinutes() < 10\n                        ? \"0\" + new Date(ex.date).getMinutes()\n                        : new Date(ex.date).getMinutes()}{\" \"}\n                      {new Date(ex.date).getDate()}\n                      th {months[new Date(ex.date).getMonth()]},\n                      {new Date(ex.date).getFullYear()}\n                    </p>\n                  </Col>\n                </Row>\n              </Link>\n            </Container>\n          );\n      });\n    }\n\n    if (previousExams)\n      previousExamsUI = previousExams.map((ex, i) => {\n        return (\n          <Grid\n            key={ex._id}\n            container\n            alignItems=\"flex-start\"\n            xs\n            className=\"sideExams\"\n          >\n            <Grid item>\n              <AssignmentTurnedInOutlinedIcon style={{ fontSize: \"27px\" }} />\n            </Grid>\n            <Grid item xs className=\"examName\">\n              <Link\n                to={`/previous-exam/${ex._id}`}\n                style={{ textDecoration: \"none\", color: \"black\" }}\n              >\n                <span>{ex.name}</span>\n              </Link>\n            </Grid>\n            <Grid item xs={4.5}>\n              <p>\n                {new Date(ex.date).getHours() < 10\n                  ? \"0\" + new Date(ex.date).getHours()\n                  : new Date(ex.date).getHours()}\n                :\n                {new Date(ex.date).getMinutes() < 10\n                  ? \"0\" + new Date(ex.date).getMinutes()\n                  : new Date(ex.date).getMinutes()}{\" \"}\n                {new Date(ex.date).getDate()}\n                th {months[new Date(ex.date).getMonth()]},\n                {new Date(ex.date).getFullYear()}\n              </p>\n            </Grid>\n          </Grid>\n        );\n      });\n  }\n  if (props.userInfo)\n    return (\n      <Container fluid style={{ marginTop: \"10px\", height: \"100vh\" }}>\n        <Grid container spacing={3}>\n          <Grid item xs={8} sm className=\"side\" style={{ float: \"left\" }}>\n            <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n              <Grid item>\n                <h5>My Courses</h5>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <hr />\n            </Grid>\n            <div>{courseUI}</div>\n          </Grid>\n          <Grid item xs={12} sm={5} className=\"upcoming\">\n            <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n              <Grid item>\n                <h5>Upcoming Exams</h5>\n              </Grid>\n              <Grid item>\n                <InfoOutlinedIcon style={{ fontSize: \"35px\" }} />\n              </Grid>\n            </Grid>\n            <Grid item>\n              <hr />\n            </Grid>\n            <div className=\"upcoming__first\">\n              {mostUpcomingExamUI}\n              <Timer\n                examID={upcomingExams[0]._id}\n                deadline={upcomingExams.length > 0 ? upcomingExams[0].date : \"\"}\n              />\n            </div>\n            <div>{upcomingExamsUI}</div>\n          </Grid>\n          <Grid item xs={8} sm className=\"side\">\n            <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n              <Grid item>\n                <h5>Previous Exams</h5>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <hr />\n            </Grid>\n            {previousExamsUI}\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  else return <LinearIndeterminate />;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js",["167","168","169","170","171","172","173","174","175","176","177","178"],"import { CircularProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\n/* import Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab'; */\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./Course.scss\";\nimport LinearIndeterminate from '../Generic/Loader';\n\nexport default function Course(props) {\n  let { id } = useParams();\n\n  const [courseData, setCourseData] = useState(null);\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios\n        .get(`${props.userInfo.role.toLowerCase()}/course/${id}`)\n        .then((response) => {\n          const data = response.data;\n          console.log(data);\n          if (data.status === \"OK\") setCourseData(data.result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }, []);\n\n  // console.log(\"Course Data\", courseData);\n\n  if (courseData) return <div className=\"course\"><Sidebar courseData={courseData} /></div>;\n  else return <LinearIndeterminate></LinearIndeterminate>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js",["179","180","181","182","183","184","185","186","187","188","189","190","191"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js",["192","193","194","195"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./LiveExam.scss\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  CircularProgress,\n  LinearProgress,\n  makeStyles,\n  Snackbar,\n} from \"@material-ui/core\";\n// import Alert from \"@material-ui/lab/Alert\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport Result from \"./Result\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\nexport default function LiveExam(props) {\n  const { id } = useParams();\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(\"\");\n  const [index, setIndex] = React.useState(0);\n\n  const [examinfo, setExamInfo] = useState(null);\n\n  const [open, setOpen] = React.useState(false);\n  const [seconds, setSeconds] = useState(1);\n\n  const [windowChange, setwindowChange] = useState(0);\n\n  const studentAnswers = [];\n\n  const [result, setResult] = useState(0);\n\n  const intervalRef = useRef();\n  const [disableNextButton, setdisableNextButton] = useState(false);\n\n  // const [totalExamTime, setTotalExamTime] = useState(0);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const submitAnswers = () => {\n    // setResult(\"Loading\");\n    axios({\n      method: \"POST\",\n      url: `student/exam/mcq/submit/${id}`,\n\n      headers: { \"Content-Type\": \"application/json\" },\n      data: JSON.stringify({\n        studentAnswers: studentAnswers,\n        feedback: \"Sir i think something is wrong in the options\",\n        windowChanged: windowChange,\n      }),\n    })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status === \"OK\") {\n          setResult(response.data.result.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds((seconds) => seconds - 1);\n    }, 1000);\n    intervalRef.current = interval;\n\n    axios\n      .get(`student/exam/${id}`)\n      .then((response) => {\n        setExamInfo(response.data.result.data);\n        console.log(\"examinfo\", response.data.result.data);\n        setSeconds(\n          response.data.result.data.mcqQuestions[index].mcqQuestionId.time\n        );\n\n        let examTimeEndAfter = 0;\n\n        examTimeEndAfter =\n          Math.round(\n            new Date(response.data.result.data.date).getTime() / 1000\n          ) +\n          response.data.result.data.totalTime -\n          Math.round(Date.now() / 1000);\n\n        console.log(examTimeEndAfter);\n\n        if (examTimeEndAfter > 0) examTimeEndAfter = examTimeEndAfter * 1000;\n        else examTimeEndAfter = 0;\n\n        console.log(examTimeEndAfter);\n\n        const timeout = setTimeout(() => {\n          clearInterval(intervalRef.current);\n          setdisableNextButton(true);\n          submitAnswers();\n          // alert(\"Exam Timeout!\");\n        }, examTimeEndAfter);\n\n        // const timer = setTimeout(() => {\n        //   // setCount(\"Timeout called!\");\n        //   // clearInterval(intervalRef.current);\n        //   alert(\"Hello\");\n        //   console.log(\"Timeout worked after \", examTimeEndAfter);\n        //   // submitAnswers();\n        // }, examTimeEndAfter * 1000);\n        // return () => {\n        //   clearTimeout(timer);\n        // };\n\n        // return () => clearTimeout(timeout);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  if (examinfo) {\n    const nextQuestion = (event) => {\n      console.log(\n        \"Ans : \",\n        index,\n        value,\n        examinfo.mcqQuestions[index].mcqQuestionId._id\n      );\n      studentAnswers.push({\n        mcqQuestion: examinfo.mcqQuestions[index].mcqQuestionId._id,\n        studentAnswer: value,\n      });\n\n      if (index + 1 < examinfo.mcqQuestions.length) {\n        console.log(\"Index\", index + 1, examinfo.mcqQuestions.length);\n        setSeconds(\n          (seconds) => examinfo.mcqQuestions[index + 1].mcqQuestionId.time\n        );\n        setIndex(index + 1);\n      } else {\n        submitAnswers();\n        clearInterval(intervalRef.current);\n      }\n    };\n\n    if (seconds < 0) nextQuestion();\n\n    document.addEventListener(\"visibilitychange\", function () {\n      // document.title = document.hidden ? \"I'm am cheating\" : \"I'm here\";\n      // var mp3_url =\n      //   \"https://media.geeksforgeeks.org/wp-content/uploads/20190531135120/beep.mp3\";\n\n      // new Audio(mp3_url).play();\n      setwindowChange((windowChange) => windowChange + 1);\n      handleClick();\n    });\n    if (result) {\n      return <Result result={result} />;\n    } else\n      return (\n        <div>\n          <Snackbar\n            open={open}\n            onClose={handleClose}\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n            // anchorPosition ={ { right: 10, top: 100 }}\n          >\n            <Alert onClose={handleClose} severity=\"warning\">\n              Please Don't Leave Tab During Exam!\n            </Alert>\n          </Snackbar>\n          <Container fluid className=\"root \">\n            <Row className=\"justify-content-center\">\n              <Col xs={7} className=\"exam\">\n                <Row className=\"exam__title justify-content-center\">\n                  <Col xs=\"auto\">\n                    <h4>{examinfo.name}</h4>\n                  </Col>\n                </Row>\n                <Row className=\"exam__question\">\n                  <Col>\n                    <h5>\n                      {examinfo.mcqQuestions[index].mcqQuestionId.description}\n                    </h5>\n                  </Col>\n                </Row>\n                <Row className=\"exam__question\">\n                  <Col>\n                    <h5>\n                      {examinfo.mcqQuestions[index].mcqQuestionId.mainQuestion}\n                    </h5>\n                  </Col>\n                </Row>\n                <Row className=\"exam__options\">\n                  <Col xs={12}>\n                    <FormControl component=\"fieldset\" fullWidth>\n                      <RadioGroup\n                        aria-label=\"ans\"\n                        name=\"ans\"\n                        value={value}\n                        onChange={handleChange}\n                      >\n                        <Row className=\"option\" xs={12}>\n                          <Col xs={12}>\n                            <FormControlLabel\n                              value={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[0].option\n                              }\n                              control={<Radio color=\"primary\" />}\n                              label={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[0].option\n                              }\n                            />\n                          </Col>\n                        </Row>\n                        <Row className=\"option\">\n                          <Col xs={12}>\n                            <FormControlLabel\n                              value={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[1].option\n                              }\n                              control={<Radio color=\"primary\" />}\n                              label={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[1].option\n                              }\n                            />\n                          </Col>\n                        </Row>\n                        <Row className=\"option\">\n                          <Col xs={12}>\n                            <FormControlLabel\n                              value={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[2].option\n                              }\n                              control={<Radio color=\"primary\" />}\n                              label={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[2].option\n                              }\n                            />\n                          </Col>\n                        </Row>\n                        <Row className=\"option\">\n                          <Col xs={12}>\n                            <FormControlLabel\n                              value={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[3].option\n                              }\n                              control={<Radio color=\"primary\" />}\n                              label={\n                                examinfo.mcqQuestions[index].mcqQuestionId\n                                  .options[3].option\n                              }\n                            />\n                          </Col>\n                        </Row>\n                      </RadioGroup>\n                    </FormControl>\n                  </Col>\n                </Row>\n                <Row className=\"exam__buttons d-flex justify-content-between\">\n                  <Col>\n                    <span className=\"timer\">\n                      <b>\n                        {/* <div id=\"countdown\"></div> */}\n                        {seconds == 0 ? \"Exam Finished!\" : seconds}\n                      </b>\n                    </span>\n                  </Col>\n                  <Col xs=\"auto\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      onClick={nextQuestion}\n                      disableElevation\n                      disabled={disableNextButton}\n                      // disabled={\n                      //   index + 1 == examinfo.mcqQuestions.length && true\n                      // }\n                    >\n                      Next\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n  } else\n    return (\n      <div className={classes.root}>\n        <LinearProgress />\n        <LinearProgress color=\"secondary\" />\n      </div>\n    );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js",["196","197"],"import { useRef, useState, useEffect } from \"react\";\n\nimport \"./Timer.css\";\n\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst Timer = (props) => {\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n  //   console.log(props.deadline)\n  let interval = useRef();\n\n  const timer = (props) => {\n    const seconds = 1000;\n    const minutes = seconds * 60;\n    const hours = minutes * 60;\n    const days = hours * 24;\n    const deadline = new Date(props.deadline).getTime();\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = deadline - now;\n      if (timeLeft < 0) {\n        clearInterval(interval.current);\n      } else {\n        setTimerDays(Math.floor(timeLeft / days));\n        setTimerHours(Math.floor((timeLeft % days) / hours));\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    timer(props);\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  if (timerDays && timerHours && timerMinutes && timerSeconds)\n    return (\n      <div className=\"timer-container\">\n        <Link\n          to={`/live-exam/${props.examID}`}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          <button className=\"btn btn-primary\">Enter Exam</button>\n        </Link>\n      </div>\n    );\n  else\n    return (\n      <div className=\"timer-container\">\n        <ul>\n          <li>\n            <span id=\"days\">{timerDays}</span> Days\n          </li>\n          <li>\n            <span id=\"hours\">{timerHours}</span> Hours\n          </li>\n          <li>\n            <span id=\"minutes\">{timerMinutes}</span> Minutes\n          </li>\n          <li>\n            <span id=\"seconds\">{timerSeconds}</span> Seconds\n          </li>\n        </ul>\n      </div>\n    );\n};\n\nexport default Timer;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js",["198"],"import React, { useState, useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport \"./Forms.scss\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst TextFieldForm = (props) => (\n  <TextField\n  id={props.id}\n  label={props.label}\n  multiline\n  rows={props.rows}\n  variant=\"outlined\"\n  onChange={props.handleChange(props.id)}\n  labelWidth={props.labelWidth}\n  value={props.values}\n  fullWidth\n  className={props.classes.textField}\n  required={props.required}\n/>\n)\n\nconst TextForm = (props) => (\n  <FormControl\n    className={props.classes.textField}\n    variant=\"outlined\"\n    fullWidth\n    required={props.required}\n  >\n    <InputLabel>{props.label}</InputLabel>\n    <OutlinedInput\n      id={props.id}\n      onChange={props.handleChange(props.id)}\n      value={props.values}\n      labelWidth={props.labelWidth}\n    />\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      className={props.classes.textField}\n      variant=\"outlined\"\n      fullWidth\n      required\n    >\n      <InputLabel>{props.label}</InputLabel>\n      <OutlinedInput\n        id={props.id}\n        type={showPassword ? \"text\" : \"password\"}\n        value={props.values}\n        onChange={props.handleChange(props.id)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label={\"password\"}\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={props.labelWidth}\n      />\n    </FormControl>\n  );\n};\n\nconst Forms = (props) => {\n  const type = props.type;\n\n  const [universities, setUniversities] = useState(null);\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\n\n  // console.log(props);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: apiDomain + \"university/all\",\n    })\n      .then((response) => {\n        // console.log(\"All Universites..\");\n\n        // console.log(response.data);\n\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversities(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsApiLoaded(false);\n      });\n  }, []);\n\n  const SelectForm = (props) => {\n    // console.log(\"COMPONENT : select form\");\n    let items = [];\n    const id = props.id;\n\n    if (universities) {\n      // console.log(\"Univbersity\", universities);\n\n      // for (let i = 0; i < universities.length; i++) {\n      //   console.log(\"Loop\");\n      //   console.log(universities[i]);\n      // }\n\n      if (id === \"role\")\n        items = [\n          {\n            id: \"Teacher\",\n            value: \"Teacher\",\n          },\n          {\n            id: \"Student\",\n            value: \"Student\",\n          },\n        ];\n      else if (id === \"university\") {\n        items = [];\n        universities.forEach((element) => {\n          items.push({\n            id: element._id,\n            value: element.shortform,\n          });\n        });\n      } else if (id === \"department\") {\n        items = [];\n\n        if (props.selectedUniversity) {\n          // console.log(\"Selected University \", props.selectedUniversity);\n          universities.forEach((element) => {\n            if (element._id === props.selectedUniversity) {\n              element.departments.forEach((dept) => {\n                // console.log(dept);\n                items.push({\n                  id: dept._id,\n                  value: dept.shortform,\n                });\n              });\n            }\n          });\n        }\n      } else if (id === \"session\") {\n        items = [];\n        items = [\n          {\n            id: \"2016-2017\",\n            value: \"2016-2017\",\n          },\n          {\n            id: \"2017-2018\",\n            value: \"2017-2018\",\n          },\n          {\n            id: \"2018-2019\",\n            value: \"2018-2019\",\n          },\n          {\n            id: \"2020-2021\",\n            value: \"2020-2021\",\n          },\n        ];\n      } else if (id === \"designation\") {\n        items = [];\n        items = [\n          {\n            id: \"Department Head\",\n            value: \"Department Head\",\n          },\n          {\n            id: \"Professor\",\n            value: \"Professor\",\n          },\n          {\n            id: \"Assistant Professor\",\n            value: \"Assistant Professor\",\n          },\n          {\n            id: \"Lecturer\",\n            value: \"Lecturer\",\n          },\n        ];\n      } else if(id === \"options\") {\n        items = [];\n        items = [\n          {\n            id: \"optA\",\n            value: \"A\",\n          },\n          {\n            id: \"optB\",\n            value: \"B\",\n          },\n          {\n            id: \"optC\",\n            value: \"C\",\n          },\n          {\n            id: \"optD\",\n            value: \"D\",\n          },\n        ];\n      }\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl\n        variant=\"outlined\"\n        className={props.classes.textField}\n        fullWidth\n        required\n      >\n        <InputLabel>{props.label}</InputLabel>\n        <Select\n          id={id}\n          value={props.values}\n          onChange={props.handleChange(id)}\n          label={props.label}\n        >\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  if (type === \"text\") {\n    return <TextForm {...props} />;\n  } else if (type === \"password\") {\n    return <PasswordForm {...props} />;\n  } else if (type === \"select\") {\n    return <SelectForm {...props} />;\n  } else {\n    return <TextFieldForm {...props}/>\n  }\n};\n\nexport default Forms;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js",["199"],"import React from \"react\";\nimport { Alert, Container } from \"react-bootstrap\";\n\nconst MarkSheet = (props) => {\n  const mcqExamsData = props.mcqExamsData;\n  let tableBody;\n  let x = 1;\n\n \n\n  if (mcqExamsData) {\n    mcqExamsData.sort(function (a, b) {\n      return a.mark - b.mark;\n    });\n\n    console.log(\"Exam Data\", mcqExamsData);\n\n    tableBody = mcqExamsData.map((data) => {\n      console.log(data);\n      return (\n        <>\n          <tr>\n            <td>{x++}</td>\n            <td>\n              <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\n                {x == 2 ? \"👑\" : \"\"}\n              </span>\n              {`${data.student.firstName} ${data.student.lastName} ${data.student.username}`}\n            </td>\n            <td>{data.student.registrationNo}</td>\n\n            <td>\n              <a href={`mailto: ${data.student.email}`}>{data.student.email}</a>\n            </td>\n            <td>{data.solved}</td>\n            <td>{data.wrong}</td>\n            <td>{data.mark}</td>\n            <td>\n              <a href={`${data.student._id}`}>View</a>\n            </td>\n          </tr>\n        </>\n      );\n    });\n  }\n\n  if (mcqExamsData)\n    return (\n      <table\n        className=\"table table-hover table-striped table-light\"\n        style={{ textAlign: \"center\" }}\n      >\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Registration No</th>\n            <th>Email</th>\n            <th>Solved</th>\n            <th>Wrong</th>\n            <th>Mark</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>{tableBody}</tbody>\n      </table>\n    );\n  else\n    return (\n      <Container>\n        <div className=\"d-flex justify-content-center\">\n          <Alert variant=\"warning\">No Participants</Alert>\n        </div>\n      </Container>\n    );\n};\n\nexport default MarkSheet;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nimport axios from \"axios\";\nimport \"./LiveExam.scss\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  Box,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  Menu,\n  MenuList,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport {\n  DataGrid,\n  getNumericColumnOperators,\n  PreferencePanelsValue,\n} from \"@material-ui/data-grid\";\n\nconst Result = (props) => {\n  if (props.result)\n    return (\n      <Container fluid className=\"root \">\n        <Row className=\"justify-content-center\">\n          <Col xs={7} className=\"exam\">\n            <Row className=\"justify-content-center\">\n              <Col xs=\"auto\">\n               <br></br>\n                {/* <Jumbotron> */}\n                  <h1>Exam Finished!</h1>\n                  <p>\n                    <div className=\"justify-content-center\">\n                      <Alert\n                        variant={props.result.mark > 0 ? \"success\" : \"danger\"}\n                      >\n                        {props.result.mark > 0\n                          ? `Congrats You have Scored ${props.result.mark}`\n                          : `Oho! You have Scored ${props.result.mark}`}\n                      </Alert>\n                    </div>\n                  </p>\n                {/* </Jumbotron> */}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n};\n\nexport default Result;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js",["234","235","236","237","238","239","240","241","242","243"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nimport axios from \"axios\";\n\nimport \"./PreviousExam.css\";\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  Box,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  Menu,\n  MenuList,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  DataGrid,\n  getNumericColumnOperators,\n  PreferencePanelsValue,\n} from \"@material-ui/data-grid\";\n\nconst ExamInfo = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const mcqExamData = props.mcqExamData;\n  const cqExamData = props.cqExamData;\n  const onlyExamInfo = props.onlyExamInfo;\n  let mcq;\n\n  console.log(\"mcqExamData\", mcqExamData);\n\n  if (mcqExamData)\n    mcq = mcqExamData.studentAnswers.map((test) => {\n      return (\n        <din>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{test.mcqQuestion.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{test.mcqQuestion.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n              <MenuList>\n                {test.mcqQuestion.options.map((op) => {\n                  if (test.mcqQuestion.correctAnswers[0].answer === op.option)\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent>\n          </Card>\n          <br></br>\n        </din>\n      );\n    });\n\n  if (onlyExamInfo) {\n    mcq = onlyExamInfo.mcqQuestions.map((questions) => {\n      return (\n        <din>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{questions.mcqQuestionId.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{questions.mcqQuestionId.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n              <MenuList>\n                {questions.mcqQuestionId.options.map((op) => {\n                  if (\n                    questions.mcqQuestionId.correctAnswers[0].answer ===\n                    op.option\n                  )\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent>\n          </Card>\n          <br></br>\n        </din>\n      );\n    });\n\n    return (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">Exam Name : {onlyExamInfo.name}</h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getDate()}\n                        th {months[new Date(onlyExamInfo.date).getMonth()]},\n                        {new Date(onlyExamInfo.date).getFullYear()} (\n                        {days[new Date(onlyExamInfo.date).getDay()]})\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getHours() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getHours()\n                          : new Date(onlyExamInfo.date).getHours()}\n                        :\n                        {new Date(onlyExamInfo.date).getMinutes() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getMinutes()\n                          : new Date(onlyExamInfo.date).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>{onlyExamInfo.totalMarks}</td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>{onlyExamInfo.totalTime} min</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Container className=\"scroll\">{mcq}</Container>\n      </Container>\n    );\n  } else\n    return (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">\n            Exam Name :{\" \"}\n            {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\n          </h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getDate()}\n                        th{\" \"}\n                        {\n                          months[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getMonth()\n                          ]\n                        }\n                        ,\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getFullYear()}{\" \"}\n                        (\n                        {\n                          days[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getDay()\n                          ]\n                        }\n                        )\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getHours() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()}\n                        :\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getMinutes() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalMarks\n                          : cqExamData.cqExam.totalMarks}\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalTime\n                          : cqExamData.cqExam.totalTime}{\" \"}\n                        min\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Container className=\"scroll\">{mcq}</Container>\n      </Container>\n    );\n};\n\nexport default ExamInfo;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js",["269","270","271","272","273","274","275","276","277","278"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js",["279","280","281"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/ExamType.js",["282","283","284","285","286","287","288"],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":22},{"ruleId":"293","severity":1,"message":"297","line":28,"column":9,"nodeType":"295","messageId":"296","endLine":28,"endColumn":17},{"ruleId":"293","severity":1,"message":"298","line":30,"column":25,"nodeType":"295","messageId":"296","endLine":30,"endColumn":41},{"ruleId":"293","severity":1,"message":"299","line":32,"column":7,"nodeType":"295","messageId":"296","endLine":32,"endColumn":16},{"ruleId":"293","severity":1,"message":"300","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":26},{"ruleId":"293","severity":1,"message":"301","line":10,"column":3,"nodeType":"295","messageId":"296","endLine":10,"endColumn":10},{"ruleId":"293","severity":1,"message":"302","line":19,"column":8,"nodeType":"295","messageId":"296","endLine":19,"endColumn":24},{"ruleId":"293","severity":1,"message":"294","line":21,"column":8,"nodeType":"295","messageId":"296","endLine":21,"endColumn":22},{"ruleId":"293","severity":1,"message":"303","line":68,"column":9,"nodeType":"295","messageId":"296","endLine":68,"endColumn":26},{"ruleId":"293","severity":1,"message":"304","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":23},{"ruleId":"293","severity":1,"message":"305","line":15,"column":3,"nodeType":"295","messageId":"296","endLine":15,"endColumn":7},{"ruleId":"293","severity":1,"message":"306","line":16,"column":3,"nodeType":"295","messageId":"296","endLine":16,"endColumn":11},{"ruleId":"293","severity":1,"message":"307","line":45,"column":9,"nodeType":"295","messageId":"296","endLine":45,"endColumn":16},{"ruleId":"308","severity":1,"message":"309","line":53,"column":6,"nodeType":"310","endLine":53,"endColumn":8,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":73,"column":43,"nodeType":"314","endLine":73,"endColumn":66},{"ruleId":"315","severity":1,"message":"316","line":109,"column":32,"nodeType":"317","messageId":"318","endLine":109,"endColumn":34},{"ruleId":"312","severity":1,"message":"313","line":158,"column":13,"nodeType":"314","endLine":158,"endColumn":34},{"ruleId":"293","severity":1,"message":"300","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":26},{"ruleId":"293","severity":1,"message":"319","line":1,"column":28,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"320","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"321","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":8},{"ruleId":"293","severity":1,"message":"322","line":9,"column":3,"nodeType":"295","messageId":"296","endLine":9,"endColumn":7},{"ruleId":"293","severity":1,"message":"301","line":10,"column":3,"nodeType":"295","messageId":"296","endLine":10,"endColumn":10},{"ruleId":"293","severity":1,"message":"323","line":11,"column":3,"nodeType":"295","messageId":"296","endLine":11,"endColumn":7},{"ruleId":"293","severity":1,"message":"324","line":13,"column":3,"nodeType":"295","messageId":"296","endLine":13,"endColumn":12},{"ruleId":"293","severity":1,"message":"325","line":18,"column":8,"nodeType":"295","messageId":"296","endLine":18,"endColumn":14},{"ruleId":"293","severity":1,"message":"326","line":19,"column":8,"nodeType":"295","messageId":"296","endLine":19,"endColumn":18},{"ruleId":"293","severity":1,"message":"306","line":20,"column":8,"nodeType":"295","messageId":"296","endLine":20,"endColumn":16},{"ruleId":"293","severity":1,"message":"327","line":21,"column":8,"nodeType":"295","messageId":"296","endLine":21,"endColumn":19},{"ruleId":"293","severity":1,"message":"302","line":22,"column":8,"nodeType":"295","messageId":"296","endLine":22,"endColumn":24},{"ruleId":"293","severity":1,"message":"328","line":24,"column":3,"nodeType":"295","messageId":"296","endLine":24,"endColumn":14},{"ruleId":"293","severity":1,"message":"329","line":25,"column":3,"nodeType":"295","messageId":"296","endLine":25,"endColumn":13},{"ruleId":"293","severity":1,"message":"330","line":26,"column":3,"nodeType":"295","messageId":"296","endLine":26,"endColumn":7},{"ruleId":"293","severity":1,"message":"331","line":27,"column":3,"nodeType":"295","messageId":"296","endLine":27,"endColumn":11},{"ruleId":"293","severity":1,"message":"305","line":28,"column":3,"nodeType":"295","messageId":"296","endLine":28,"endColumn":7},{"ruleId":"293","severity":1,"message":"332","line":29,"column":3,"nodeType":"295","messageId":"296","endLine":29,"endColumn":11},{"ruleId":"293","severity":1,"message":"333","line":30,"column":3,"nodeType":"295","messageId":"296","endLine":30,"endColumn":13},{"ruleId":"334","severity":1,"message":"335","line":66,"column":39,"nodeType":"336","messageId":"337","endLine":66,"endColumn":41},{"ruleId":"334","severity":1,"message":"335","line":68,"column":38,"nodeType":"336","messageId":"337","endLine":68,"endColumn":40},{"ruleId":"315","severity":1,"message":"316","line":70,"column":27,"nodeType":"317","messageId":"318","endLine":70,"endColumn":29},{"ruleId":"334","severity":1,"message":"335","line":75,"column":39,"nodeType":"336","messageId":"337","endLine":75,"endColumn":41},{"ruleId":"315","severity":1,"message":"316","line":77,"column":27,"nodeType":"317","messageId":"318","endLine":77,"endColumn":29},{"ruleId":"338","severity":1,"message":"339","line":26,"column":3,"nodeType":"340","messageId":"318","endLine":26,"endColumn":7},{"ruleId":"341","severity":1,"message":"342","line":120,"column":30,"nodeType":"343","messageId":"344","endLine":120,"endColumn":52,"fix":"345"},{"ruleId":"341","severity":1,"message":"342","line":122,"column":30,"nodeType":"343","messageId":"344","endLine":122,"endColumn":43,"fix":"346"},{"ruleId":"293","severity":1,"message":"304","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":23},{"ruleId":"293","severity":1,"message":"300","line":1,"column":35,"nodeType":"295","messageId":"296","endLine":1,"endColumn":44},{"ruleId":"293","severity":1,"message":"302","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":26},{"ruleId":"293","severity":1,"message":"347","line":7,"column":10,"nodeType":"295","messageId":"296","endLine":7,"endColumn":21},{"ruleId":"293","severity":1,"message":"348","line":8,"column":8,"nodeType":"295","messageId":"296","endLine":8,"endColumn":22},{"ruleId":"293","severity":1,"message":"349","line":12,"column":27,"nodeType":"295","messageId":"296","endLine":12,"endColumn":33},{"ruleId":"293","severity":1,"message":"350","line":31,"column":7,"nodeType":"295","messageId":"296","endLine":31,"endColumn":11},{"ruleId":"293","severity":1,"message":"351","line":49,"column":10,"nodeType":"295","messageId":"296","endLine":49,"endColumn":23},{"ruleId":"293","severity":1,"message":"352","line":49,"column":25,"nodeType":"295","messageId":"296","endLine":49,"endColumn":41},{"ruleId":"293","severity":1,"message":"353","line":171,"column":11,"nodeType":"295","messageId":"296","endLine":171,"endColumn":24},{"ruleId":"334","severity":1,"message":"354","line":224,"column":51,"nodeType":"336","messageId":"355","endLine":224,"endColumn":53},{"ruleId":"315","severity":1,"message":"356","line":225,"column":15,"nodeType":"317","messageId":"318","endLine":225,"endColumn":17},{"ruleId":"293","severity":1,"message":"302","line":1,"column":10,"nodeType":"295","messageId":"296","endLine":1,"endColumn":26},{"ruleId":"293","severity":1,"message":"304","line":3,"column":17,"nodeType":"295","messageId":"296","endLine":3,"endColumn":23},{"ruleId":"293","severity":1,"message":"357","line":6,"column":8,"nodeType":"295","messageId":"296","endLine":6,"endColumn":11},{"ruleId":"293","severity":1,"message":"358","line":7,"column":8,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"359","line":8,"column":8,"nodeType":"295","messageId":"296","endLine":8,"endColumn":12},{"ruleId":"293","severity":1,"message":"360","line":9,"column":8,"nodeType":"295","messageId":"296","endLine":9,"endColumn":11},{"ruleId":"293","severity":1,"message":"361","line":10,"column":8,"nodeType":"295","messageId":"296","endLine":10,"endColumn":17},{"ruleId":"293","severity":1,"message":"362","line":11,"column":10,"nodeType":"295","messageId":"296","endLine":11,"endColumn":20},{"ruleId":"293","severity":1,"message":"363","line":12,"column":8,"nodeType":"295","messageId":"296","endLine":12,"endColumn":14},{"ruleId":"293","severity":1,"message":"333","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":18},{"ruleId":"293","severity":1,"message":"364","line":16,"column":8,"nodeType":"295","messageId":"296","endLine":16,"endColumn":11},{"ruleId":"308","severity":1,"message":"309","line":37,"column":6,"nodeType":"310","endLine":37,"endColumn":8,"suggestions":"365"},{"ruleId":"293","severity":1,"message":"320","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"321","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":8},{"ruleId":"293","severity":1,"message":"301","line":10,"column":3,"nodeType":"295","messageId":"296","endLine":10,"endColumn":10},{"ruleId":"293","severity":1,"message":"324","line":13,"column":3,"nodeType":"295","messageId":"296","endLine":13,"endColumn":12},{"ruleId":"293","severity":1,"message":"366","line":16,"column":3,"nodeType":"295","messageId":"296","endLine":16,"endColumn":15},{"ruleId":"293","severity":1,"message":"367","line":18,"column":3,"nodeType":"295","messageId":"296","endLine":18,"endColumn":13},{"ruleId":"293","severity":1,"message":"368","line":19,"column":3,"nodeType":"295","messageId":"296","endLine":19,"endColumn":10},{"ruleId":"293","severity":1,"message":"302","line":31,"column":8,"nodeType":"295","messageId":"296","endLine":31,"endColumn":24},{"ruleId":"293","severity":1,"message":"369","line":64,"column":9,"nodeType":"295","messageId":"296","endLine":64,"endColumn":15},{"ruleId":"293","severity":1,"message":"370","line":71,"column":10,"nodeType":"295","messageId":"296","endLine":71,"endColumn":21},{"ruleId":"315","severity":1,"message":"316","line":89,"column":34,"nodeType":"317","messageId":"318","endLine":89,"endColumn":36},{"ruleId":"315","severity":1,"message":"316","line":114,"column":34,"nodeType":"317","messageId":"318","endLine":114,"endColumn":36},{"ruleId":"308","severity":1,"message":"371","line":130,"column":6,"nodeType":"310","endLine":130,"endColumn":8,"suggestions":"372"},{"ruleId":"293","severity":1,"message":"302","line":14,"column":3,"nodeType":"295","messageId":"296","endLine":14,"endColumn":19},{"ruleId":"293","severity":1,"message":"373","line":132,"column":15,"nodeType":"295","messageId":"296","endLine":132,"endColumn":22},{"ruleId":"308","severity":1,"message":"374","line":159,"column":6,"nodeType":"310","endLine":159,"endColumn":8,"suggestions":"375"},{"ruleId":"315","severity":1,"message":"316","line":312,"column":34,"nodeType":"317","messageId":"318","endLine":312,"endColumn":36},{"ruleId":"293","severity":1,"message":"349","line":5,"column":27,"nodeType":"295","messageId":"296","endLine":5,"endColumn":33},{"ruleId":"308","severity":1,"message":"376","line":40,"column":30,"nodeType":"295","endLine":40,"endColumn":37},{"ruleId":"293","severity":1,"message":"377","line":95,"column":10,"nodeType":"295","messageId":"296","endLine":95,"endColumn":21},{"ruleId":"315","severity":1,"message":"316","line":26,"column":20,"nodeType":"317","messageId":"318","endLine":26,"endColumn":22},{"ruleId":"293","severity":1,"message":"300","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":26},{"ruleId":"293","severity":1,"message":"319","line":1,"column":28,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"320","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"321","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":8},{"ruleId":"293","severity":1,"message":"322","line":9,"column":3,"nodeType":"295","messageId":"296","endLine":9,"endColumn":7},{"ruleId":"293","severity":1,"message":"301","line":10,"column":3,"nodeType":"295","messageId":"296","endLine":10,"endColumn":10},{"ruleId":"293","severity":1,"message":"323","line":11,"column":3,"nodeType":"295","messageId":"296","endLine":11,"endColumn":7},{"ruleId":"293","severity":1,"message":"324","line":13,"column":3,"nodeType":"295","messageId":"296","endLine":13,"endColumn":12},{"ruleId":"293","severity":1,"message":"378","line":14,"column":3,"nodeType":"295","messageId":"296","endLine":14,"endColumn":8},{"ruleId":"293","severity":1,"message":"366","line":15,"column":3,"nodeType":"295","messageId":"296","endLine":15,"endColumn":15},{"ruleId":"293","severity":1,"message":"379","line":16,"column":3,"nodeType":"295","messageId":"296","endLine":16,"endColumn":12},{"ruleId":"293","severity":1,"message":"367","line":17,"column":3,"nodeType":"295","messageId":"296","endLine":17,"endColumn":13},{"ruleId":"293","severity":1,"message":"368","line":18,"column":3,"nodeType":"295","messageId":"296","endLine":18,"endColumn":10},{"ruleId":"293","severity":1,"message":"380","line":21,"column":8,"nodeType":"295","messageId":"296","endLine":21,"endColumn":13},{"ruleId":"293","severity":1,"message":"325","line":25,"column":8,"nodeType":"295","messageId":"296","endLine":25,"endColumn":14},{"ruleId":"293","severity":1,"message":"326","line":26,"column":8,"nodeType":"295","messageId":"296","endLine":26,"endColumn":18},{"ruleId":"293","severity":1,"message":"306","line":27,"column":8,"nodeType":"295","messageId":"296","endLine":27,"endColumn":16},{"ruleId":"293","severity":1,"message":"327","line":28,"column":8,"nodeType":"295","messageId":"296","endLine":28,"endColumn":19},{"ruleId":"293","severity":1,"message":"302","line":29,"column":8,"nodeType":"295","messageId":"296","endLine":29,"endColumn":24},{"ruleId":"293","severity":1,"message":"364","line":31,"column":3,"nodeType":"295","messageId":"296","endLine":31,"endColumn":6},{"ruleId":"293","severity":1,"message":"328","line":32,"column":3,"nodeType":"295","messageId":"296","endLine":32,"endColumn":14},{"ruleId":"293","severity":1,"message":"329","line":33,"column":3,"nodeType":"295","messageId":"296","endLine":33,"endColumn":13},{"ruleId":"293","severity":1,"message":"330","line":34,"column":3,"nodeType":"295","messageId":"296","endLine":34,"endColumn":7},{"ruleId":"293","severity":1,"message":"331","line":35,"column":3,"nodeType":"295","messageId":"296","endLine":35,"endColumn":11},{"ruleId":"293","severity":1,"message":"305","line":36,"column":3,"nodeType":"295","messageId":"296","endLine":36,"endColumn":7},{"ruleId":"293","severity":1,"message":"332","line":37,"column":3,"nodeType":"295","messageId":"296","endLine":37,"endColumn":11},{"ruleId":"293","severity":1,"message":"381","line":38,"column":3,"nodeType":"295","messageId":"296","endLine":38,"endColumn":8},{"ruleId":"293","severity":1,"message":"333","line":39,"column":3,"nodeType":"295","messageId":"296","endLine":39,"endColumn":13},{"ruleId":"293","severity":1,"message":"382","line":41,"column":10,"nodeType":"295","messageId":"296","endLine":41,"endColumn":19},{"ruleId":"293","severity":1,"message":"359","line":42,"column":8,"nodeType":"295","messageId":"296","endLine":42,"endColumn":12},{"ruleId":"293","severity":1,"message":"360","line":43,"column":8,"nodeType":"295","messageId":"296","endLine":43,"endColumn":11},{"ruleId":"293","severity":1,"message":"383","line":46,"column":3,"nodeType":"295","messageId":"296","endLine":46,"endColumn":11},{"ruleId":"293","severity":1,"message":"384","line":47,"column":3,"nodeType":"295","messageId":"296","endLine":47,"endColumn":28},{"ruleId":"293","severity":1,"message":"385","line":48,"column":3,"nodeType":"295","messageId":"296","endLine":48,"endColumn":24},{"ruleId":"293","severity":1,"message":"386","line":4,"column":10,"nodeType":"295","messageId":"296","endLine":4,"endColumn":14},{"ruleId":"293","severity":1,"message":"387","line":4,"column":16,"nodeType":"295","messageId":"296","endLine":4,"endColumn":23},{"ruleId":"293","severity":1,"message":"362","line":14,"column":10,"nodeType":"295","messageId":"296","endLine":14,"endColumn":20},{"ruleId":"293","severity":1,"message":"363","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":14},{"ruleId":"293","severity":1,"message":"359","line":16,"column":8,"nodeType":"295","messageId":"296","endLine":16,"endColumn":12},{"ruleId":"293","severity":1,"message":"360","line":17,"column":8,"nodeType":"295","messageId":"296","endLine":17,"endColumn":11},{"ruleId":"293","severity":1,"message":"388","line":20,"column":8,"nodeType":"295","messageId":"296","endLine":20,"endColumn":18},{"ruleId":"293","severity":1,"message":"389","line":49,"column":10,"nodeType":"295","messageId":"296","endLine":49,"endColumn":19},{"ruleId":"293","severity":1,"message":"390","line":62,"column":12,"nodeType":"295","messageId":"296","endLine":62,"endColumn":17},{"ruleId":"293","severity":1,"message":"391","line":64,"column":11,"nodeType":"295","messageId":"296","endLine":64,"endColumn":23},{"ruleId":"293","severity":1,"message":"300","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":26},{"ruleId":"293","severity":1,"message":"319","line":1,"column":28,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"320","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"321","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":8},{"ruleId":"293","severity":1,"message":"322","line":9,"column":3,"nodeType":"295","messageId":"296","endLine":9,"endColumn":7},{"ruleId":"293","severity":1,"message":"301","line":10,"column":3,"nodeType":"295","messageId":"296","endLine":10,"endColumn":10},{"ruleId":"293","severity":1,"message":"324","line":13,"column":3,"nodeType":"295","messageId":"296","endLine":13,"endColumn":12},{"ruleId":"293","severity":1,"message":"360","line":15,"column":3,"nodeType":"295","messageId":"296","endLine":15,"endColumn":6},{"ruleId":"293","severity":1,"message":"366","line":16,"column":3,"nodeType":"295","messageId":"296","endLine":16,"endColumn":15},{"ruleId":"293","severity":1,"message":"379","line":17,"column":3,"nodeType":"295","messageId":"296","endLine":17,"endColumn":12},{"ruleId":"293","severity":1,"message":"367","line":18,"column":3,"nodeType":"295","messageId":"296","endLine":18,"endColumn":13},{"ruleId":"293","severity":1,"message":"368","line":19,"column":3,"nodeType":"295","messageId":"296","endLine":19,"endColumn":10},{"ruleId":"293","severity":1,"message":"380","line":22,"column":8,"nodeType":"295","messageId":"296","endLine":22,"endColumn":13},{"ruleId":"293","severity":1,"message":"325","line":27,"column":8,"nodeType":"295","messageId":"296","endLine":27,"endColumn":14},{"ruleId":"293","severity":1,"message":"326","line":28,"column":8,"nodeType":"295","messageId":"296","endLine":28,"endColumn":18},{"ruleId":"293","severity":1,"message":"327","line":30,"column":8,"nodeType":"295","messageId":"296","endLine":30,"endColumn":19},{"ruleId":"293","severity":1,"message":"302","line":31,"column":8,"nodeType":"295","messageId":"296","endLine":31,"endColumn":24},{"ruleId":"293","severity":1,"message":"329","line":35,"column":3,"nodeType":"295","messageId":"296","endLine":35,"endColumn":13},{"ruleId":"293","severity":1,"message":"330","line":36,"column":3,"nodeType":"295","messageId":"296","endLine":36,"endColumn":7},{"ruleId":"293","severity":1,"message":"331","line":37,"column":3,"nodeType":"295","messageId":"296","endLine":37,"endColumn":11},{"ruleId":"293","severity":1,"message":"305","line":38,"column":3,"nodeType":"295","messageId":"296","endLine":38,"endColumn":7},{"ruleId":"293","severity":1,"message":"382","line":42,"column":10,"nodeType":"295","messageId":"296","endLine":42,"endColumn":19},{"ruleId":"293","severity":1,"message":"383","line":45,"column":3,"nodeType":"295","messageId":"296","endLine":45,"endColumn":11},{"ruleId":"293","severity":1,"message":"384","line":46,"column":3,"nodeType":"295","messageId":"296","endLine":46,"endColumn":28},{"ruleId":"293","severity":1,"message":"385","line":47,"column":3,"nodeType":"295","messageId":"296","endLine":47,"endColumn":24},{"ruleId":"293","severity":1,"message":"357","line":8,"column":8,"nodeType":"295","messageId":"296","endLine":8,"endColumn":11},{"ruleId":"293","severity":1,"message":"358","line":9,"column":8,"nodeType":"295","messageId":"296","endLine":9,"endColumn":11},{"ruleId":"293","severity":1,"message":"392","line":10,"column":8,"nodeType":"295","messageId":"296","endLine":10,"endColumn":13},{"ruleId":"293","severity":1,"message":"326","line":11,"column":8,"nodeType":"295","messageId":"296","endLine":11,"endColumn":18},{"ruleId":"293","severity":1,"message":"306","line":12,"column":8,"nodeType":"295","messageId":"296","endLine":12,"endColumn":16},{"ruleId":"293","severity":1,"message":"393","line":13,"column":8,"nodeType":"295","messageId":"296","endLine":13,"endColumn":22},{"ruleId":"293","severity":1,"message":"327","line":14,"column":8,"nodeType":"295","messageId":"296","endLine":14,"endColumn":19},{"ruleId":"293","severity":1,"message":"325","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":14},{"ruleId":"293","severity":1,"message":"320","line":16,"column":8,"nodeType":"295","messageId":"296","endLine":16,"endColumn":14},{"ruleId":"394","severity":1,"message":"395","line":22,"column":3,"nodeType":"396","messageId":"397","endLine":24,"endColumn":4},{"ruleId":"293","severity":1,"message":"398","line":9,"column":8,"nodeType":"295","messageId":"296","endLine":9,"endColumn":12},{"ruleId":"293","severity":1,"message":"399","line":24,"column":10,"nodeType":"295","messageId":"296","endLine":24,"endColumn":28},{"ruleId":"293","severity":1,"message":"400","line":175,"column":11,"nodeType":"295","messageId":"296","endLine":175,"endColumn":27},{"ruleId":"293","severity":1,"message":"401","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":16},{"ruleId":"293","severity":1,"message":"380","line":5,"column":8,"nodeType":"295","messageId":"296","endLine":5,"endColumn":13},{"ruleId":"293","severity":1,"message":"402","line":6,"column":10,"nodeType":"295","messageId":"296","endLine":6,"endColumn":15},{"ruleId":"293","severity":1,"message":"403","line":7,"column":8,"nodeType":"295","messageId":"296","endLine":7,"endColumn":17},{"ruleId":"293","severity":1,"message":"392","line":10,"column":8,"nodeType":"295","messageId":"296","endLine":10,"endColumn":13},{"ruleId":"293","severity":1,"message":"393","line":13,"column":8,"nodeType":"295","messageId":"296","endLine":13,"endColumn":22},{"ruleId":"293","severity":1,"message":"404","line":20,"column":9,"nodeType":"295","messageId":"296","endLine":20,"endColumn":16},"no-native-reassign",["405"],"no-negated-in-lhs",["406"],"no-unused-vars","'socketIOClient' is defined but never used.","Identifier","unusedVar","'ENDPOINT' is assigned a value but never used.","'setnotifications' is assigned a value but never used.","'socketRef' is assigned a value but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'CircularProgress' is defined but never used.","'createCourseModal' is assigned a value but never used.","'useRef' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["407"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'Jumbotron' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'MenuList' is defined but never used.","'Typography' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"408","text":"409"},{"range":"410","text":"409"},"'HiClipboard' is defined but never used.","'AssignmentIcon' is defined but never used.","'Router' is defined but never used.","'days' is assigned a value but never used.","'timerDeadline' is assigned a value but never used.","'setTimerDeadLine' is assigned a value but never used.","'reloadHandler' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected '!==' and instead saw '!='.","'Row' is defined but never used.","'Col' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Box' is defined but never used.",["411"],"'TabContainer' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'userId' is assigned a value but never used.","'cqExamsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array.",["412"],"'timeout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'index', and 'submitAnswers'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSeconds' needs the current value of 'index'.",["413"],"The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'isApiLoaded' is assigned a value but never used.","'Table' is defined but never used.","'ListGroup' is defined but never used.","'axios' is defined but never used.","'Paper' is defined but never used.","'useParams' is defined but never used.","'DataGrid' is defined but never used.","'getNumericColumnOperators' is defined but never used.","'PreferencePanelsValue' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'CreateExam' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Forms' is defined but never used.","'FormHelperText' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Grid' is defined but never used.","'getRenderPropValue' is defined but never used.","'questionsCreated' is assigned a value but never used.","'Question' is defined but never used.","'Toast' is defined but never used.","'Container' is defined but never used.","'TabPane' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"414","fix":"415"},[2876,2885],"\"error\"",[2943,2952],{"desc":"414","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"421","text":"422"},{"range":"423","text":"422"},"Update the dependencies array to be: [id, role]",{"range":"424","text":"425"},"Update the dependencies array to be: [id, index, submitAnswers]",{"range":"426","text":"427"},[1038,1040],"[id, props.userInfo]",[1278,1280],[2994,2996],"[id, role]",[4250,4252],"[id, index, submitAnswers]"]