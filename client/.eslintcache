[{"E:\\React Js\\WillChange\\client\\src\\index.js":"1","E:\\React Js\\WillChange\\client\\src\\App.js":"2","E:\\React Js\\WillChange\\client\\src\\reportWebVitals.js":"3","E:\\React Js\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js":"4","E:\\Project 350\\WillChange\\client\\src\\index.js":"5","E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js":"6","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js":"7","E:\\Project 350\\WillChange\\client\\src\\containers\\App.js":"8","E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\MCQs\\MCQ\\MCQ.js":"9","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js":"10","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\Forms.js":"11"},{"size":288,"mtime":1610463537304,"results":"12","hashOfConfig":"13"},{"size":213,"mtime":1611003166321,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":3504,"mtime":1611081394232,"results":"16","hashOfConfig":"13"},{"size":313,"mtime":1611586567836,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1611586567836,"results":"19","hashOfConfig":"18"},{"size":3505,"mtime":1611586567806,"results":"20","hashOfConfig":"18"},{"size":435,"mtime":1611602264255,"results":"21","hashOfConfig":"18"},{"size":126,"mtime":1611598882073,"results":"22","hashOfConfig":"18"},{"size":8855,"mtime":1611610575009,"results":"23","hashOfConfig":"18"},{"size":5108,"mtime":1611603978661,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h9pgbl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1vw26ma",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},"E:\\React Js\\WillChange\\client\\src\\index.js",[],"E:\\React Js\\WillChange\\client\\src\\App.js",[],"E:\\React Js\\WillChange\\client\\src\\reportWebVitals.js",[],"E:\\React Js\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js",[],"E:\\Project 350\\WillChange\\client\\src\\index.js",[],["51","52"],"E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js",[],"E:\\Project 350\\WillChange\\client\\src\\containers\\App.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\MCQs\\MCQ\\MCQ.js",["53"],"import React, { Component } from \"react\";\r\n\r\nconst MCQ = (props) => {\r\n\r\n    return (\r\n        <h1>Hello</h1>\r\n    );\r\n};\r\n\r\nexport default MCQ;\r\n",["54","55"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js",["56"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\Forms.js",["57"],"import React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport axios from \"axios\";\r\nimport \"./SignIn.css\";\r\n\r\nconst apiDomain = \"http://95572ad1dd4e.ngrok.io/\";\r\n\r\nconst TextForm = (props) => (\r\n  <FormControl className={props.classes.textField} variant=\"outlined\" fullWidth /* error={props.error} */ required={props.required}>\r\n    <InputLabel>{props.label}</InputLabel>\r\n    <OutlinedInput\r\n      id={props.id}\r\n      onChange={props.handleChange(props.id)}\r\n      value={props.values}\r\n      labelWidth={props.labelWidth}\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nconst PasswordForm = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <FormControl className={props.classes.textField} variant=\"outlined\" fullWidth required>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <OutlinedInput\r\n        id={props.id}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={props.values}\r\n        onChange={props.handleChange(props.id)}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label={\"password\"}\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n              edge=\"end\"\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={props.labelWidth}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Forms = (props) => {\r\n\r\n  const type = props.type;\r\n\r\n  const [universities, setUniversities] = useState(null);\r\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: apiDomain + \"university/all\",\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"All Universites..\");\r\n\r\n        // console.log(response.data);\r\n\r\n        const data = response.data;\r\n\r\n        if (data.status === \"OK\") {\r\n          setUniversities(data.result.data.universities);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsApiLoaded(false);\r\n      });\r\n  }, []);\r\n\r\n  const SelectForm = (props) => {\r\n    // console.log(\"COMPONENT : select form\");\r\n    let items = [];\r\n    const id = props.id;\r\n\r\n    if (universities) {\r\n      // console.log(\"Univbersity\", universities);\r\n\r\n      // for (let i = 0; i < universities.length; i++) {\r\n      //   console.log(\"Loop\");\r\n      //   console.log(universities[i]);\r\n      // }\r\n\r\n      if (id === \"role\") items = [\"Teacher\", \"Student\"];\r\n      else if (id === \"university\") {\r\n        items = [];\r\n        universities.forEach((element) => {\r\n          items.push(element.shortform);\r\n        });\r\n      } else if (id === \"department\") {\r\n        items = [];\r\n\r\n        if (props.selectedUniversity) {\r\n          // console.log(\"Selected University \", props.selectedUniversity);\r\n          universities.forEach((element) => {\r\n            if (element.shortform === props.selectedUniversity) {\r\n              element.departments.forEach((dept) => {\r\n                // console.log(dept);\r\n                items.push(dept.shortform);\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else if (id === \"session\") {\r\n        items = [\"2016-2017\", \"2017-2018\", \"2018-2019\", \"2020-2021\"];\r\n      } else if (id === \"designation\") {\r\n        items = [\r\n          \"Department Head\",\r\n          \"Professor\",\r\n          \"Assistant Professor\",\r\n          \"Lecturer\",\r\n        ];\r\n      }\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      return (\r\n        <MenuItem key={i} value={item}>\r\n          {item}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl variant=\"outlined\" className={props.classes.textField} fullWidth required>\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select\r\n          id={id}\r\n          value={props.values}\r\n          onChange={props.handleChange(id)}\r\n          label={props.label}\r\n        >\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  if (type === \"text\") {\r\n    return <TextForm {...props} />;\r\n  } else if (type === \"password\") {\r\n    return <PasswordForm {...props} />;\r\n  } else {\r\n    return <SelectForm {...props} />;\r\n  }\r\n};\r\n\r\nexport default Forms;\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":25,"column":3,"nodeType":"70","messageId":"71","endLine":25,"endColumn":7},{"ruleId":"62","severity":1,"message":"72","line":69,"column":10,"nodeType":"64","messageId":"65","endLine":69,"endColumn":21},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["73"],["74"],"no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'isApiLoaded' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]