[{"E:\\Project 350\\WillChange\\client\\src\\index.js":"1","E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js":"2","E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js":"3","E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js":"4","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js":"5","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js":"6","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js":"7","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js":"8","E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js":"9","E:\\Project 350\\WillChange\\client\\src\\Components\\UpcomingExam\\UpcomingExam.js":"10","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\PreviousExam.js":"11","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Forms.js":"12","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js":"13","E:\\Project 350\\WillChange\\client\\src\\Components\\Timer\\Timer.js":"14","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\MarkSheet.js":"15","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\ExamInfo.js":"16","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\CreateExam.js":"17","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\Question.js":"18","E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\LiveExam.js":"19","E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\Exam.js":"20","E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\Result.js":"21","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Loader.js":"22"},{"size":604,"mtime":1611851509922,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1611586567836,"results":"25","hashOfConfig":"24"},{"size":3364,"mtime":1612866079449,"results":"26","hashOfConfig":"24"},{"size":4457,"mtime":1612272425155,"results":"27","hashOfConfig":"24"},{"size":4305,"mtime":1612648460035,"results":"28","hashOfConfig":"24"},{"size":9510,"mtime":1612632223425,"results":"29","hashOfConfig":"24"},{"size":4509,"mtime":1612865472198,"results":"30","hashOfConfig":"24"},{"size":1526,"mtime":1612866184656,"results":"31","hashOfConfig":"24"},{"size":11487,"mtime":1612859831597,"results":"32","hashOfConfig":"24"},{"size":4183,"mtime":1612710674104,"results":"33","hashOfConfig":"24"},{"size":12826,"mtime":1612852777583,"results":"34","hashOfConfig":"24"},{"size":7029,"mtime":1612723876313,"results":"35","hashOfConfig":"24"},{"size":4235,"mtime":1612877477056,"results":"36","hashOfConfig":"24"},{"size":1686,"mtime":1612627248471,"results":"37","hashOfConfig":"24"},{"size":1970,"mtime":1612852777582,"results":"38","hashOfConfig":"24"},{"size":11473,"mtime":1612852777581,"results":"39","hashOfConfig":"24"},{"size":8025,"mtime":1612876162079,"results":"40","hashOfConfig":"24"},{"size":14120,"mtime":1612856253541,"results":"41","hashOfConfig":"24"},{"size":11437,"mtime":1612859831628,"results":"42","hashOfConfig":"24"},{"size":3254,"mtime":1612764301992,"results":"43","hashOfConfig":"24"},{"size":2117,"mtime":1612859831631,"results":"44","hashOfConfig":"24"},{"size":536,"mtime":1612852777576,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1vw26ma",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\Project 350\\WillChange\\client\\src\\index.js",[],["105","106"],"E:\\Project 350\\WillChange\\client\\src\\reportWebVitals.js",[],"E:\\Project 350\\WillChange\\client\\src\\Containers\\App.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Layout\\Layout.js",["107","108","109","110"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://localhost:8080/\";\r\n\r\nconst Layout = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [response, setResponse] = useState(1);\r\n\r\n  const [examInfo, setExamInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"test\", (data) => {\r\n      setResponse(data);\r\n      // console.log(\"Socket\", data);\r\n    });\r\n\r\n    socket.on(\"exam\", (data) => {\r\n      setExamInfo(data);\r\n    });\r\n    // return socket.disconnect();\r\n  }, []);\r\n\r\n  console.log(\"exam\", examInfo);\r\n\r\n  const SelectForm = () => {\r\n    let items = [];\r\n\r\n    if (props.universityInfo) {\r\n      props.universityInfo.forEach((element) => {\r\n        if (element.shortform === props.userInfo.varsity) {\r\n          element.departments.forEach((dept) => {\r\n            // console.log(dept);\r\n            items.push({\r\n              id: dept._id,\r\n              value: dept.shortform,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl variant=\"outlined\" fullWidth required>\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select value={props.values} label={props.label}>\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  const createCourseModal = (\r\n    <Modal\r\n      show={showModal}\r\n      onHide={handleCloseModal}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Create Course</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control placeholder=\"Course Name\" />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control placeholder=\"Code\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control\r\n                readOnly\r\n                defaultValue={\r\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\r\n                }\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <SelectForm />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\">Understood</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n  if (props.userInfo)\r\n    return (\r\n      <Container bg=\"light\" fluid>\r\n        {/* //   {createCourseModal}\r\n      //   <Row>\r\n      //     <Col md={3}>Courses</Col>\r\n      //     <Col md={6} backgroundColor=\"success\">\r\n      //       All Events\r\n      //       <Button className=\"pull-right light\" onClick={handleShowModal}>\r\n      //         Create Course\r\n      //       </Button> */}\r\n        <div\r\n          className={\r\n            response < 10\r\n              ? \"alert alert-info\"\r\n              : response < 20\r\n              ? \"alert alert-success\"\r\n              : response < 30\r\n              ? \"alert alert-primary\"\r\n              : response < 40\r\n              ? \"alert alert-secondary\"\r\n              : \"alert alert-danger\"\r\n          }\r\n        >\r\n          Time countdown : <strong>{response}</strong>\r\n        </div>\r\n        {/* //     </Col>\r\n      //   </Row> */}\r\n      </Container>\r\n    );\r\n  else {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1>Please Login First</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Layout;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignIn.js",[],"E:\\Project 350\\WillChange\\client\\src\\Components\\Authentication\\SignUp.js",["111","112","113"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Forms from \"../Generic/Forms\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"./SignIn.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    // width: \"15vw\",\r\n    // margin: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  shadows: [\"none\"],\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    role: \"\",\r\n    designation: \"\",\r\n    university: \"\",\r\n    department: \"\",\r\n    session: \"\",\r\n    regNo: \"\",\r\n    result: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: apiDomain + \"university/all\",\r\n  //   })\r\n  //     .then((response) => {\r\n  //       // console.log(\"All Universites..\");\r\n\r\n  //       // console.log(response.data);\r\n\r\n  //       const data = response.data;\r\n\r\n  //       if (data.status === \"OK\") {\r\n  //         setUniversities(data.result.data);\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  // console.log(\"API CALL DATA\", universities);\r\n  let history = useHistory();\r\n\r\n  const obj = {\r\n    role: values.role,\r\n    username: values.username,\r\n    email: values.email,\r\n    password: values.password,\r\n    repassword: values.confirmPassword,\r\n    firstName: values.firstName,\r\n    lastName: values.lastName,\r\n    department: values.department,\r\n    registrationNo: parseInt(values.regNo, 10),\r\n    session: values.session,\r\n    varsity: values.university,\r\n    designation: values.designation,\r\n  };\r\n\r\n  const body = JSON.stringify(obj);\r\n\r\n  const handleSignUp = (e) => {\r\n    // console.log('hello')\r\n    fetchData();\r\n    e.preventDefault();\r\n  };\r\n  const fetchData = async () => {\r\n    let endpoint;\r\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\r\n    else endpoint = \"auth/create-student\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: body,\r\n    };\r\n\r\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(\"API data\",data);\r\n\r\n    if (data.status === \"FAILED\")\r\n      setValues({ ...values, [\"error\"]: data.result });\r\n    else {\r\n      setValues({ ...values, [\"error\"]: \"\" });\r\n      const userdata = {\r\n        token: data.result.jwt.token,\r\n        role: data.result.data.role.toLowerCase(),\r\n        id: data.result.data.id,\r\n      };\r\n\r\n      console.log(userdata);\r\n\r\n      localStorage.setItem(\"data\", JSON.stringify(userdata));\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    }\r\n    \r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  // if (universities)\r\n  return (\r\n    <Container>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item className={classes.textField}>\r\n            <h2>Hello There!!</h2>\r\n            <p>Lets Sign Up to continue</p>\r\n          </Grid>\r\n        </Grid>\r\n        {values.error !== \"\" ? (\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.root}\r\n          >\r\n            <Alert elevation={0} severity=\"error\">\r\n              {values.error}\r\n            </Alert>\r\n          </Grid>\r\n        ) : null}\r\n        <form onSubmit={handleSignUp}>\r\n          <Grid item xs={12}>\r\n            <Forms\r\n              id=\"role\"\r\n              type=\"select\"\r\n              label=\"Role\"\r\n              classes={classes}\r\n              values={values.role}\r\n              handleChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"university\"\r\n                type=\"select\"\r\n                label=\"University\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.university}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                selectedUniversity={values.university}\r\n                id=\"department\"\r\n                type=\"select\"\r\n                label=\"Department\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.department}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {values.role !== \"Teacher\" ? (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"session\"\r\n                  type=\"select\"\r\n                  label=\"Session\"\r\n                  labelWidth={117}\r\n                  classes={classes}\r\n                  values={values.session}\r\n                  handleChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Forms\r\n                  id=\"regNo\"\r\n                  type=\"text\"\r\n                  label=\"Registration No\"\r\n                  labelWidth={120}\r\n                  classes={classes}\r\n                  values={values.regNo}\r\n                  handleChange={handleChange}\r\n                  required={true}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Forms\r\n                id=\"designation\"\r\n                type=\"select\"\r\n                label=\"Designation\"\r\n                labelWidth={117}\r\n                classes={classes}\r\n                values={values.designation}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"firstName\"\r\n                type=\"text\"\r\n                label=\"First Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.firstName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"lastName\"\r\n                type=\"text\"\r\n                label=\"Last Name\"\r\n                labelWidth={78}\r\n                classes={classes}\r\n                values={values.lastName}\r\n                handleChange={handleChange}\r\n                required={false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"username\"\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                labelWidth={84}\r\n                classes={classes}\r\n                values={values.username}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"email\"\r\n                type=\"text\"\r\n                label=\"Email Address\"\r\n                labelWidth={110}\r\n                classes={classes}\r\n                values={values.email}\r\n                handleChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                labelWidth={80}\r\n                classes={classes}\r\n                values={values.password}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Forms\r\n                id=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                labelWidth={140}\r\n                classes={classes}\r\n                values={values.confirmPassword}\r\n                handleChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.textField}>\r\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\r\n              Sign Up\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n  // else return <h1>Loading</h1>;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Navbar\\Navbar.js",["114","115","116"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Course.js",["117","118","119","120","121","122","123","124","125","126","127","128"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Home\\Home.js",["129","130","131","132","133","134","135","136","137","138","139","140"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport { HiClipboard } from \"react-icons/hi\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\r\n// import Link from \"@material-ui/core/Link\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport LinearIndeterminate from \"../Generic/Loader\";\r\nimport \"./Home.scss\";\r\nexport default function Home(props) {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  let courseUI;\r\n  let upcomingExams = [];\r\n  let upcomingExamsUI;\r\n  let mostUpcomingExamUI;\r\n  let previousExams = [];\r\n  let previousExamsUI;\r\n  let ongoingExams = [];\r\n\r\n  const [timerDeadline, setTimerDeadLine] = useState(Date.now());\r\n\r\n  if (props.userInfo) {\r\n    if (props.userInfo.courses) {\r\n      courseUI = props.userInfo.courses.map((course, k) => {\r\n        // console.log(items);\r\n        return (\r\n          <Grid\r\n            key={k}\r\n            container\r\n            alignItems=\"flex-start\"\r\n            xs\r\n            className=\"sideExams\"\r\n          >\r\n            <Grid item>\r\n              <SubjectIcon style={{ fontSize: \"27px\" }} />\r\n            </Grid>\r\n            <Grid item xs className=\"examName\">\r\n              <Link\r\n                to={`/course/${course.course._id}`}\r\n                style={{ textDecoration: \"none\", color: \"black\" }}\r\n              >\r\n                <span>{course.course.name}</span>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      });\r\n    }\r\n\r\n    props.userInfo.courses.forEach((course, i) => {\r\n      const date = new Date();\r\n\r\n      if (course.course.cqExams) {\r\n        course.course.cqExams.forEach((exam, j) => {\r\n          if (\r\n            new Date(exam.examId.date).getTime() >\r\n            date.getTime() + exam.examId.totalTime * 60\r\n          ) {\r\n            ongoingExams.push({\r\n              _id: exam.examId._id,\r\n              name: exam.examId.name,\r\n              date: new Date(exam.examId.date),\r\n            });\r\n          } else if (\r\n            new Date(exam.examId.date).getTime() >\r\n            date.getTime() + exam.examId.totalTime * 60\r\n          ) {\r\n            upcomingExams.push({\r\n              _id: exam.examId._id,\r\n              name: exam.examId.name,\r\n              date: new Date(exam.examId.date),\r\n            });\r\n          } else\r\n            course.course.cqExams.forEach((exam, j) => {\r\n              if (new Date(exam.examId.date).getTime() < date.getTime()) {\r\n                previousExams.push({\r\n                  _id: exam.examId._id,\r\n                  name: exam.examId.name,\r\n                  date: new Date(exam.examId.date),\r\n                });\r\n              }\r\n            });\r\n        });\r\n      }\r\n\r\n      if (course.course.mcqExams) {\r\n        course.course.mcqExams.forEach((exam, j) => {\r\n          // if (\r\n          //   new Date(exam.examId.date).getTime() > date.getTime() &&\r\n          //   new Date(exam.examId.date).getTime() <\r\n          //     date.getTime() + exam.examId.totalTime * 60\r\n          // )\r\n          //   upcomingExams.push({\r\n          //     _id: exam.examId._id,\r\n          //     name: exam.examId.name,\r\n          //     date: new Date(exam.examId.date),\r\n          //   });\r\n          // else if (\r\n          //   new Date(exam.examId.date).getTime() >\r\n          //   date.getTime() + exam.examId.totalTime * 60\r\n          // )\r\n          //   upcomingExams.push({\r\n          //     _id: exam.examId._id,\r\n          //     name: exam.examId.name,\r\n          //     date: new Date(exam.examId.date),\r\n          //   });\r\n          // else\r\n          if (\r\n            new Date(exam.examId.date).getTime() + exam.examId.totalTime * 60 <\r\n            date.getTime()\r\n          )\r\n            previousExams.push({\r\n              _id: exam.examId._id,\r\n              name: exam.examId.name,\r\n              date: new Date(exam.examId.date),\r\n            });\r\n          else {\r\n            upcomingExams.push({\r\n              _id: exam.examId._id,\r\n              name: exam.examId.name,\r\n              date: new Date(exam.examId.date),\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    upcomingExams.sort(function (a, b) {\r\n      return a.date.getTime() - b.date.getTime();\r\n    });\r\n    previousExams.sort(function (a, b) {\r\n      return b.date.getTime() - a.date.getTime();\r\n    });\r\n\r\n    ongoingExams.sort(function (a, b) {\r\n      return a.date.getTime() - b.date.getTime();\r\n    });\r\n\r\n    const reloadHandler = (event) => {\r\n      event.preventDefault();\r\n    };\r\n    let examSchedule;\r\n    if (upcomingExams.length > 0) {\r\n      examSchedule = `${\r\n        new Date(upcomingExams[0].date).getHours() < 10\r\n          ? \"0\" + new Date(upcomingExams[0].date).getHours()\r\n          : new Date(upcomingExams[0].date).getHours()\r\n      }:${\r\n        new Date(upcomingExams[0].date).getMinutes() < 10\r\n          ? \"0\" + new Date(upcomingExams[0].date).getMinutes()\r\n          : new Date(upcomingExams[0].date).getMinutes()\r\n      }\r\n      ${new Date(upcomingExams[0].date).getDate()}th ${\r\n        months[new Date(upcomingExams[0].date).getMonth()]\r\n      },\r\n      ${new Date(upcomingExams[0].date).getFullYear()}`;\r\n\r\n      mostUpcomingExamUI = (\r\n        <Container fluid key={upcomingExams[0]._id} alignItems=\"flex-start\">\r\n          <Row className=\"examHeading d-flex justify-content-between\">\r\n            <Col xs=\"auto\">\r\n              <span className=\"examName\">\r\n                <b>{upcomingExams[0].name}</b>\r\n              </span>\r\n            </Col>\r\n            <Col xs=\"auto\" className=\"examSchedule\">\r\n              <p>{examSchedule}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"infos\">\r\n            <Col>\r\n              <span>Course: SWE111</span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"infos\">\r\n            <Col>\r\n              <p>Host: Teacher Name</p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"infos\">\r\n            <Col>\r\n              <span>Total Marks: 20</span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"infos\">\r\n            <Col>\r\n              <span>Total Time: 20mins</span>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n      upcomingExamsUI = upcomingExams.map((ex, i) => {\r\n        if (i != 0)\r\n          return (\r\n            <Container\r\n              fluid\r\n              key={ex._id}\r\n              alignItems=\"flex-start\"\r\n              className=\"upcoming__next\"\r\n            >\r\n              {/*               <Grid item>\r\n                  <SubjectIcon />\r\n                </Grid> */}\r\n              <Link to={`/upcoming-exam/${ex._id}`}>\r\n                <Row className=\"examHeading d-flex justify-content-between\">\r\n                  <Col xs=\"auto\">\r\n                    <span className=\"examName\">\r\n                      <b>{ex.name}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col xs=\"auto\" className=\"examSchedule\">\r\n                    <p>\r\n                      {new Date(ex.date).getHours() < 10\r\n                        ? \"0\" + new Date(ex.date).getHours()\r\n                        : new Date(ex.date).getHours()}\r\n                      :\r\n                      {new Date(ex.date).getMinutes() < 10\r\n                        ? \"0\" + new Date(ex.date).getMinutes()\r\n                        : new Date(ex.date).getMinutes()}{\" \"}\r\n                      {new Date(ex.date).getDate()}\r\n                      th {months[new Date(ex.date).getMonth()]},\r\n                      {new Date(ex.date).getFullYear()}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Link>\r\n            </Container>\r\n          );\r\n      });\r\n    }\r\n\r\n    if (previousExams)\r\n      previousExamsUI = previousExams.map((ex, i) => {\r\n        return (\r\n          <Grid\r\n            key={ex._id}\r\n            container\r\n            alignItems=\"flex-start\"\r\n            xs\r\n            className=\"sideExams\"\r\n          >\r\n            <Grid item>\r\n              <AssignmentTurnedInOutlinedIcon style={{ fontSize: \"27px\" }} />\r\n            </Grid>\r\n            <Grid item xs className=\"examName\">\r\n              <Link\r\n                to={`/previous-exam/${ex._id}`}\r\n                style={{ textDecoration: \"none\", color: \"black\" }}\r\n              >\r\n                <span>{ex.name}</span>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={4.5}>\r\n              <p>\r\n                {new Date(ex.date).getHours() < 10\r\n                  ? \"0\" + new Date(ex.date).getHours()\r\n                  : new Date(ex.date).getHours()}\r\n                :\r\n                {new Date(ex.date).getMinutes() < 10\r\n                  ? \"0\" + new Date(ex.date).getMinutes()\r\n                  : new Date(ex.date).getMinutes()}{\" \"}\r\n                {new Date(ex.date).getDate()}\r\n                th {months[new Date(ex.date).getMonth()]},\r\n                {new Date(ex.date).getFullYear()}\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      });\r\n  }\r\n  if (props.userInfo)\r\n    return (\r\n      <Container fluid style={{ marginTop: \"10px\", height: \"100vh\" }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm md  className=\"side\" style={{ float: \"left\" }}>\r\n            <Grid container justify=\"space-between\" alignItems=\"flex-start\">\r\n              <Grid item>\r\n                <h5>My Courses</h5>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <hr />\r\n            </Grid>\r\n            <div>{courseUI}</div>\r\n          </Grid>\r\n          <Grid item xs={12} sm md={5} className=\"upcoming\">\r\n            <Grid container justify=\"space-between\" alignItems=\"flex-start\">\r\n              <Grid item>\r\n                <h5>Upcoming Exams</h5>\r\n              </Grid>\r\n              <Grid item>\r\n                <InfoOutlinedIcon style={{ fontSize: \"35px\" }} />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <hr />\r\n            </Grid>\r\n            <div className=\"upcoming__first\">\r\n              {mostUpcomingExamUI}\r\n              <Timer\r\n                deadline={upcomingExams.length > 0 ? upcomingExams[0].date : \"\"}\r\n              />\r\n            </div>\r\n            <div>{upcomingExamsUI}</div>\r\n          </Grid>\r\n          <Grid item xs={12} sm md className=\"side\">\r\n            <Grid container justify=\"space-between\" alignItems=\"flex-start\">\r\n              <Grid item>\r\n                <h5>Previous Exams</h5>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <hr />\r\n            </Grid>\r\n            {previousExamsUI}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  else return <LinearIndeterminate />;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\UpcomingExam\\UpcomingExam.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n  Card,\r\n  Alert,\r\n  Jumbotron,\r\n  Table,\r\n} from \"react-bootstrap\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  CardContent,\r\n  CardHeader,\r\n  List,\r\n  ListItem,\r\n  Menu,\r\n  MenuList,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst UpcomingExam = (props) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const { id } = useParams();\r\n\r\n  console.log(props.userInfo);\r\n  // console.log(id);\r\n\r\n  let examInfo;\r\n  props.userInfo.courses.map((course) => {\r\n    //   console.log(course);\r\n    course.course.cqExams.map((exam) => {\r\n      //   console.log(exam.examId._id);\r\n      if (exam.examId._id == id) {\r\n        //   console.log(exam);\r\n        examInfo = exam.examId;\r\n      }\r\n    });\r\n    course.course.mcqExams.map((exam) => {\r\n      //   console.log(exam.examId._id);\r\n      if (exam.examId._id == id) examInfo = exam.examId;\r\n    });\r\n  });\r\n\r\n  console.log(examInfo);\r\n\r\n  return (\r\n    <Container>\r\n      <Alert variant=\"danger\">\r\n        <p className=\"text-center\">Exam Has Not Started Yet</p>\r\n      </Alert>\r\n      {/* <Alert variant=\"light\"> */}\r\n      <h1 className=\"text-center\">{examInfo.name}</h1>\r\n      {/* </Alert> */}\r\n\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col>\r\n              <Table\r\n                // variant=\"dark\"\r\n                responsive\r\n                hover\r\n                bordered\r\n                size=\"sm\"\r\n                bsPrefix=\"table\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Time</td>\r\n                    <td>\r\n                      {new Date(examInfo.date).getHours() < 10\r\n                        ? \"0\" + new Date(examInfo.date).getHours()\r\n                        : new Date(examInfo.date).getHours()}\r\n                      :\r\n                      {new Date(examInfo.date).getMinutes() < 10\r\n                        ? \"0\" + new Date(examInfo.date).getMinutes()\r\n                        : new Date(examInfo.date).getMinutes()}{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Date</td>\r\n                    <td>\r\n                      {new Date(examInfo.date).getDate()}th{\" \"}\r\n                      {months[new Date(examInfo.date).getMonth()]},\r\n                      {new Date(examInfo.date).getFullYear()} (\r\n                      {days[new Date(examInfo.date).getDay()]})\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col>\r\n              <Table\r\n                // variant=\"dark\"\r\n                responsive\r\n                hover\r\n                bordered\r\n                size=\"sm\"\r\n                bsPrefix=\"table\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total Marks</td>\r\n                    <td>{examInfo.totalMarks}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total Time</td>\r\n                    <td>{examInfo.totalTime} min</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Timer deadline={examInfo.date} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpcomingExam;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\PreviousExam.js",["166","167","168","169","170","171","172","173","174","175","176","177"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n  Card,\r\n  Alert,\r\n  Jumbotron,\r\n  Table,\r\n  Tab,\r\n  TabContainer,\r\n  ListGroup,\r\n  TabContent,\r\n  TabPane,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./PreviousExam.css\";\r\n\r\nimport MarkSheet from \"./MarkSheet\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  Box,\r\n  CardContent,\r\n  MenuList,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ExamInfo from \"./ExamInfo\";\r\n\r\nconst PreviousExam = (props) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const { id } = useParams();\r\n\r\n  const userId = props.userInfo._id;\r\n\r\n  const role = props.userInfo.role;\r\n\r\n  const [mcqExamData, setMcqExamData] = useState(null);\r\n  const [cqExamData, setCqExamData] = useState(null);\r\n  const [mcqExamsData, setMcqExamsData] = useState(null);\r\n  const [cqExamsData, setCqExamsData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let examType = \"mcq\";\r\n\r\n    let endpoint;\r\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\r\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\r\n\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status == \"OK\") {\r\n          if (role === \"Teacher\") setMcqExamsData(response.data.result.data);\r\n          else setMcqExamData(response.data.result.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    examType = \"cq\";\r\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\r\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\r\n\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status == \"OK\") {\r\n          if (role === \"Teacher\") setCqExamsData(response.data.result.data);\r\n          else setCqExamData(response.data.result.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  let mcq;\r\n  let cq;\r\n\r\n  if (mcqExamData)\r\n    mcq = mcqExamData.studentAnswers.map((test) => {\r\n      return (\r\n        <div>\r\n          <Card>\r\n            <Box fontWeight=\"fontWeightBold\" m={1}>\r\n              {\" \"}\r\n              Question :{\" \"}\r\n            </Box>\r\n            <div className=\"card card-body bg-light\">\r\n              <Typography>{test.mcqQuestion.description}</Typography>\r\n              {/* <Alert variant=\"primary\"> */}\r\n              <Typography>{test.mcqQuestion.mainQuestion}</Typography>\r\n              {/* </Alert> */}\r\n            </div>\r\n\r\n            <CardContent>\r\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\r\n              <MenuList>\r\n                {test.mcqQuestion.options.map((op) => {\r\n                  if (test.mcqQuestion.correctAnswers[0].answer === op.option)\r\n                    return <Alert variant=\"success\">{op.option}</Alert>;\r\n                  if (test.studentAnswer === op.option)\r\n                    return <Alert variant=\"danger\">{op.option}</Alert>;\r\n\r\n                  return <MenuItem>{op.option}</MenuItem>;\r\n                })}\r\n              </MenuList>\r\n            </CardContent>\r\n          </Card>\r\n          <br></br>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  if (cqExamData)\r\n    cq = cqExamData.studentAnswers.map((test) => {\r\n      return (\r\n        <din>\r\n          <Card>\r\n            <Box fontWeight=\"fontWeightBold\" m={1}>\r\n              {\" \"}\r\n              Question :{\" \"}\r\n            </Box>\r\n            <div className=\"card card-body bg-light\">\r\n              <Typography>{test.cqQuestion.description}</Typography>\r\n              {/* <Alert variant=\"primary\"> */}\r\n              <Typography>{test.cqQuestion.mainQuestion}</Typography>\r\n              {/* </Alert> */}\r\n            </div>\r\n\r\n            <CardContent>\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>\r\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\r\n                    Ans :{\" \"}\r\n                  </Box>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  value={test.studentAnswer}\r\n                  disabled\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                />\r\n              </Form.Group>\r\n\r\n              {/* <Alert variant=\"success\">{test.studentAnswer}</Alert> */}\r\n            </CardContent>\r\n          </Card>\r\n          <br></br>\r\n        </din>\r\n      );\r\n    });\r\n\r\n  if (mcqExamsData) {\r\n    return (\r\n      <Tab.Container\r\n        className=\"scroll-off\"\r\n        id=\"list-group-tabs-example\"\r\n        defaultActiveKey=\"#link1\"\r\n      >\r\n        <Row>\r\n          <Col sm={2} >\r\n            <ListGroup variant=\"flush\" className='align-items-center'>\r\n              <ListGroup.Item action href=\"#link1\">\r\n                Exam Info\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action href=\"#link2\">\r\n                Mark Sheet\r\n              </ListGroup.Item>\r\n              <ListGroup.Item action href=\"#link3\">\r\n                Reviews\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col sm={10}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"#link1\">\r\n                <ExamInfo mcqExamData={mcqExamsData[0]} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"#link2\">\r\n                <MarkSheet mcqExamsData={mcqExamsData} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"#link3\">Reports</Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    );\r\n  } else if (mcqExamData || cqExamData)\r\n    return (\r\n      <Container style={{ marginTop: \"5px\" }}>\r\n        <Alert variant=\"light\">\r\n          <h1 className=\"text-center\">\r\n            {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\r\n          </h1>\r\n        </Alert>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  // variant=\"dark\"\r\n                  responsive\r\n                  hover\r\n                  bordered\r\n                  size=\"sm\"\r\n                  bsPrefix=\"table\"\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Participated On</td>\r\n                      <td>\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.submitOn\r\n                            : cqExamData.submitOn\r\n                        ).getDate()}\r\n                        th{\" \"}\r\n                        {\r\n                          months[\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.submitOn\r\n                                : cqExamData.submitOn\r\n                            ).getMonth()\r\n                          ]\r\n                        }\r\n                        ,\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.submitOn\r\n                            : cqExamData.submitOn\r\n                        ).getFullYear()}{\" \"}\r\n                        (\r\n                        {\r\n                          days[\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.submitOn\r\n                                : cqExamData.submitOn\r\n                            ).getDay()\r\n                          ]\r\n                        }\r\n                        )\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>At</td>\r\n                      <td>\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.mcqExam.date\r\n                            : cqExamData.cqExam.date\r\n                        ).getHours() < 10\r\n                          ? \"0\" +\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getHours()\r\n                          : new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getHours()}\r\n                        :\r\n                        {new Date(\r\n                          mcqExamData\r\n                            ? mcqExamData.mcqExam.date\r\n                            : cqExamData.cqExam.date\r\n                        ).getMinutes() < 10\r\n                          ? \"0\" +\r\n                            new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getMinutes()\r\n                          : new Date(\r\n                              mcqExamData\r\n                                ? mcqExamData.mcqExam.date\r\n                                : cqExamData.cqExam.date\r\n                            ).getMinutes()}{\" \"}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Total Time</td>\r\n                      <td>\r\n                        {mcqExamData\r\n                          ? mcqExamData.mcqExam.totalTime\r\n                          : cqExamData.cqExam.totalTime}{\" \"}\r\n                        min\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Row>\r\n              <Col></Col>\r\n              <Col>\r\n                <Table\r\n                  // variant=\"dark\"\r\n                  responsive\r\n                  hover\r\n                  bordered\r\n                  size=\"sm\"\r\n                  bsPrefix=\"table\"\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Total Marks</td>\r\n                      <td>\r\n                        {mcqExamData ? mcqExamData.mark : cqExamData.mark}/\r\n                        {mcqExamData\r\n                          ? mcqExamData.mcqExam.totalMarks\r\n                          : cqExamData.cqExam.totalMarks}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>Solved</td>\r\n                      <td>{mcqExamData ? mcqExamData.solved : \"\"}</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>Wrong</td>\r\n                      <td>{mcqExamData ? mcqExamData.wrong : \"\"}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col></Col>\r\n\r\n          <Col></Col>\r\n        </Row>\r\n        {mcq ? mcq : cq}\r\n      </Container>\r\n    );\r\n  else return <CircularProgress />;\r\n};\r\n\r\nexport default PreviousExam;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Forms.js",["178"],"import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport axios from \"axios\";\r\nimport \"./Forms.scss\";\r\n\r\nconst apiDomain = \"http://localhost:8080/\";\r\n\r\nconst TextFieldForm = (props) => (\r\n  <TextField\r\n  id={props.id}\r\n  label={props.label}\r\n  multiline\r\n  rows={props.rows}\r\n  variant=\"outlined\"\r\n  onChange={props.handleChange(props.id)}\r\n  labelWidth={props.labelWidth}\r\n  value={props.values}\r\n  fullWidth\r\n  className={props.classes.textField}\r\n  required={props.required}\r\n/>\r\n)\r\n\r\nconst TextForm = (props) => (\r\n  <FormControl\r\n    className={props.classes.textField}\r\n    variant=\"outlined\"\r\n    fullWidth\r\n    required={props.required}\r\n  >\r\n    <InputLabel>{props.label}</InputLabel>\r\n    <OutlinedInput\r\n      id={props.id}\r\n      onChange={props.handleChange(props.id)}\r\n      value={props.values}\r\n      labelWidth={props.labelWidth}\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nconst PasswordForm = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <FormControl\r\n      className={props.classes.textField}\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      required\r\n    >\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <OutlinedInput\r\n        id={props.id}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={props.values}\r\n        onChange={props.handleChange(props.id)}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label={\"password\"}\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n              edge=\"end\"\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={props.labelWidth}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Forms = (props) => {\r\n  const type = props.type;\r\n\r\n  const [universities, setUniversities] = useState(null);\r\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\r\n\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: apiDomain + \"university/all\",\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"All Universites..\");\r\n\r\n        // console.log(response.data);\r\n\r\n        const data = response.data;\r\n\r\n        if (data.status === \"OK\") {\r\n          setUniversities(data.result.data.universities);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsApiLoaded(false);\r\n      });\r\n  }, []);\r\n\r\n  const SelectForm = (props) => {\r\n    // console.log(\"COMPONENT : select form\");\r\n    let items = [];\r\n    const id = props.id;\r\n\r\n    if (universities) {\r\n      // console.log(\"Univbersity\", universities);\r\n\r\n      // for (let i = 0; i < universities.length; i++) {\r\n      //   console.log(\"Loop\");\r\n      //   console.log(universities[i]);\r\n      // }\r\n\r\n      if (id === \"role\")\r\n        items = [\r\n          {\r\n            id: \"Teacher\",\r\n            value: \"Teacher\",\r\n          },\r\n          {\r\n            id: \"Student\",\r\n            value: \"Student\",\r\n          },\r\n        ];\r\n      else if (id === \"university\") {\r\n        items = [];\r\n        universities.forEach((element) => {\r\n          items.push({\r\n            id: element._id,\r\n            value: element.shortform,\r\n          });\r\n        });\r\n      } else if (id === \"department\") {\r\n        items = [];\r\n\r\n        if (props.selectedUniversity) {\r\n          // console.log(\"Selected University \", props.selectedUniversity);\r\n          universities.forEach((element) => {\r\n            if (element._id === props.selectedUniversity) {\r\n              element.departments.forEach((dept) => {\r\n                // console.log(dept);\r\n                items.push({\r\n                  id: dept._id,\r\n                  value: dept.shortform,\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else if (id === \"session\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"2016-2017\",\r\n            value: \"2016-2017\",\r\n          },\r\n          {\r\n            id: \"2017-2018\",\r\n            value: \"2017-2018\",\r\n          },\r\n          {\r\n            id: \"2018-2019\",\r\n            value: \"2018-2019\",\r\n          },\r\n          {\r\n            id: \"2020-2021\",\r\n            value: \"2020-2021\",\r\n          },\r\n        ];\r\n      } else if (id === \"designation\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"Department Head\",\r\n            value: \"Department Head\",\r\n          },\r\n          {\r\n            id: \"Professor\",\r\n            value: \"Professor\",\r\n          },\r\n          {\r\n            id: \"Assistant Professor\",\r\n            value: \"Assistant Professor\",\r\n          },\r\n          {\r\n            id: \"Lecturer\",\r\n            value: \"Lecturer\",\r\n          },\r\n        ];\r\n      } else if(id === \"options\") {\r\n        items = [];\r\n        items = [\r\n          {\r\n            id: \"optA\",\r\n            value: \"A\",\r\n          },\r\n          {\r\n            id: \"optB\",\r\n            value: \"B\",\r\n          },\r\n          {\r\n            id: \"optC\",\r\n            value: \"C\",\r\n          },\r\n          {\r\n            id: \"optD\",\r\n            value: \"D\",\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    const menuItems = items.map((item, i) => {\r\n      // console.log(items);\r\n      return (\r\n        <MenuItem key={i} value={item.id}>\r\n          {item.value}\r\n        </MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl\r\n        variant=\"outlined\"\r\n        className={props.classes.textField}\r\n        fullWidth\r\n        required\r\n      >\r\n        <InputLabel>{props.label}</InputLabel>\r\n        <Select\r\n          id={id}\r\n          value={props.values}\r\n          onChange={props.handleChange(id)}\r\n          label={props.label}\r\n        >\r\n          <MenuItem disabled>\r\n            <em>{props.label}</em>\r\n          </MenuItem>\r\n          {menuItems}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\n  if (type === \"text\") {\r\n    return <TextForm {...props} />;\r\n  } else if (type === \"password\") {\r\n    return <PasswordForm {...props} />;\r\n  } else if (type === \"select\") {\r\n    return <SelectForm {...props} />;\r\n  } else {\r\n    return <TextFieldForm {...props}/>\r\n  }\r\n};\r\n\r\nexport default Forms;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\Sidebar.js",["179","180","181","182","183","184","185","186"],"E:\\Project 350\\WillChange\\client\\src\\Components\\Timer\\Timer.js",["187"],"import { useRef, useState, useEffect } from \"react\";\r\n\r\nimport './Timer.css';\r\n\r\nconst Timer = (props) => {\r\n  const [timerDays, setTimerDays] = useState(\"00\");\r\n  const [timerHours, setTimerHours] = useState(\"00\");\r\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\r\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n\r\n  //   console.log(props.deadline)\r\n  let interval = useRef();\r\n\r\n  const timer = (props) => {\r\n    const seconds = 1000;\r\n    const minutes = seconds * 60;\r\n    const hours = minutes * 60;\r\n    const days = hours * 24;\r\n    const deadline = new Date(props.deadline).getTime();\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const timeLeft = deadline - now;\r\n      if (timeLeft < 0) {\r\n        clearInterval(interval.current);\r\n      } else {\r\n        setTimerDays(Math.floor(timeLeft / days));\r\n        setTimerHours(Math.floor((timeLeft % days) / hours));\r\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\r\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    timer(props);\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <ul>\r\n        <li>\r\n          <span id=\"days\">{timerDays}</span> Days\r\n        </li>\r\n        <li>\r\n          <span id=\"hours\">{timerHours}</span> Hours\r\n        </li>\r\n        <li>\r\n          <span id=\"minutes\">{timerMinutes}</span> Minutes\r\n        </li>\r\n        <li>\r\n          <span id=\"seconds\">{timerSeconds}</span> Seconds\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\MarkSheet.js",["188"],"import React from \"react\";\r\n\r\nconst MarkSheet = (props) => {\r\n  const mcqExamsData = props.mcqExamsData;\r\n  let x = 1;\r\n\r\n  const tableBody = mcqExamsData.map((data) => {\r\n    console.log(data);\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td>{x++}</td>\r\n          <td>\r\n            <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\r\n              {x == 2 ? \"👑\" : \"\"}\r\n            </span>\r\n            {`${data.student.firstName} ${data.student.lastName} ${data.student.username}`}\r\n          </td>\r\n          <td>{data.student.registrationNo}</td>\r\n\r\n          <td>\r\n            <a href={`mailto: ${data.student.email}`}>{data.student.email}</a>\r\n          </td>\r\n          <td>{data.solved}</td>\r\n          <td>{data.wrong}</td>\r\n          <td>{data.mark}</td>\r\n          <td>\r\n            <a href={`${data.student._id}`}>View</a>\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <table\r\n      className=\"table table-hover table-striped table-light\"\r\n      style={{ textAlign: \"center\" }}\r\n    >\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Registration No</th>\r\n          <th>Email</th>\r\n          <th>Solved</th>\r\n          <th>Wrong</th>\r\n          <th>Mark</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{tableBody}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default MarkSheet;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\PreviousExam\\ExamInfo.js",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n  Card,\r\n  Alert,\r\n  Jumbotron,\r\n  Table,\r\n  Tab,\r\n  TabContainer,\r\n  ListGroup,\r\n  TabContent,\r\n  TabPane,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./PreviousExam.css\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  Box,\r\n  CardContent,\r\n  CardHeader,\r\n  List,\r\n  ListItem,\r\n  Menu,\r\n  MenuList,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  DataGrid,\r\n  getNumericColumnOperators,\r\n  PreferencePanelsValue,\r\n} from \"@material-ui/data-grid\";\r\n\r\nconst ExamInfo = (props) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const mcqExamData = props.mcqExamData;\r\n  const cqExamData = props.cqExamData;\r\n\r\n  const mcq = mcqExamData.studentAnswers.map((test) => {\r\n    return (\r\n      <din>\r\n        <Card>\r\n          <Box fontWeight=\"fontWeightBold\" m={1}>\r\n            {\" \"}\r\n            Question :{\" \"}\r\n          </Box>\r\n          <div className=\"card card-body bg-light\">\r\n            <Typography>{test.mcqQuestion.description}</Typography>\r\n            {/* <Alert variant=\"primary\"> */}\r\n            <Typography>{test.mcqQuestion.mainQuestion}</Typography>\r\n            {/* </Alert> */}\r\n          </div>\r\n\r\n          <CardContent>\r\n            {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\r\n            <MenuList>\r\n              {test.mcqQuestion.options.map((op) => {\r\n                if (test.mcqQuestion.correctAnswers[0].answer === op.option)\r\n                  return <Alert variant=\"success\">{op.option}</Alert>;\r\n\r\n                return <MenuItem>{op.option}</MenuItem>;\r\n              })}\r\n            </MenuList>\r\n          </CardContent>\r\n        </Card>\r\n        <br></br>\r\n      </din>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container fluid style={{ marginTop: \"5px\" }}>\r\n      <Alert variant=\"light\">\r\n        <h1 className=\"text-center\">\r\n          Exam Name :{\" \"}\r\n          {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\r\n        </h1>\r\n      </Alert>\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col>\r\n              <Table\r\n                // variant=\"dark\"\r\n                responsive\r\n                hover\r\n                bordered\r\n                size=\"sm\"\r\n                bsPrefix=\"table\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Date</td>\r\n                    <td>\r\n                      {new Date(\r\n                        mcqExamData ? mcqExamData.submitOn : cqExamData.submitOn\r\n                      ).getDate()}\r\n                      th{\" \"}\r\n                      {\r\n                        months[\r\n                          new Date(\r\n                            mcqExamData\r\n                              ? mcqExamData.submitOn\r\n                              : cqExamData.submitOn\r\n                          ).getMonth()\r\n                        ]\r\n                      }\r\n                      ,\r\n                      {new Date(\r\n                        mcqExamData ? mcqExamData.submitOn : cqExamData.submitOn\r\n                      ).getFullYear()}{\" \"}\r\n                      (\r\n                      {\r\n                        days[\r\n                          new Date(\r\n                            mcqExamData\r\n                              ? mcqExamData.submitOn\r\n                              : cqExamData.submitOn\r\n                          ).getDay()\r\n                        ]\r\n                      }\r\n                      )\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>At</td>\r\n                    <td>\r\n                      {new Date(\r\n                        mcqExamData\r\n                          ? mcqExamData.mcqExam.date\r\n                          : cqExamData.cqExam.date\r\n                      ).getHours() < 10\r\n                        ? \"0\" +\r\n                          new Date(\r\n                            mcqExamData\r\n                              ? mcqExamData.mcqExam.date\r\n                              : cqExamData.cqExam.date\r\n                          ).getHours()\r\n                        : new Date(\r\n                            mcqExamData\r\n                              ? mcqExamData.mcqExam.date\r\n                              : cqExamData.cqExam.date\r\n                          ).getHours()}\r\n                      :\r\n                      {new Date(\r\n                        mcqExamData\r\n                          ? mcqExamData.mcqExam.date\r\n                          : cqExamData.cqExam.date\r\n                      ).getMinutes() < 10\r\n                        ? \"0\" +\r\n                          new Date(\r\n                            mcqExamData\r\n                              ? mcqExamData.mcqExam.date\r\n                              : cqExamData.cqExam.date\r\n                          ).getMinutes()\r\n                        : new Date(\r\n                            mcqExamData\r\n                              ? mcqExamData.mcqExam.date\r\n                              : cqExamData.cqExam.date\r\n                          ).getMinutes()}{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col>\r\n              <Table\r\n                // variant=\"dark\"\r\n                responsive\r\n                hover\r\n                bordered\r\n                size=\"sm\"\r\n                bsPrefix=\"table\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total Marks</td>\r\n                    <td>\r\n                      {mcqExamData\r\n                        ? mcqExamData.mcqExam.totalMarks\r\n                        : cqExamData.cqExam.totalMarks}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td>Total Time</td>\r\n                    <td>\r\n                      {mcqExamData\r\n                        ? mcqExamData.mcqExam.totalTime\r\n                        : cqExamData.cqExam.totalTime}{\" \"}\r\n                      min\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Container className =\"scroll\">{mcq}</Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ExamInfo;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\CreateExam.js",["214","215"],"import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Tabs } from \"antd\";\r\nimport Question from \"./Question\";\r\nimport axios from \"axios\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Forms from \"../../Generic/Forms\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport './CreateExam.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class CreateCourse extends React.Component {\r\n  questionIDs = [];\r\n  newTabIndex = 0;\r\n  quesNo = 2;\r\n  totalMarks = 0;\r\n  totalTime = 0;\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      examType: event.target.value,\r\n    })\r\n  }\r\n  addQuestion = (id, marks, time) => {\r\n    this.setState({\r\n      showToast: true,\r\n      examCreateMessage: \"Question Created Successfully\",\r\n    });\r\n\r\n    this.totalMarks += parseInt(marks, 10);\r\n    this.totalTime += time;\r\n    this.questionIDs.push({\r\n      mcqQuestionId: id,\r\n    });\r\n    console.log(\"mcq Question Id !\", id);\r\n    console.log(\"Mark !\", this.totalMarks);\r\n    console.log(\"Time!\", this.totalTime);\r\n  };\r\n\r\n  createExam = (date, examName) => {\r\n    console.log(\"Date \", date);\r\n    console.log(\"Name \", examName);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"teacher/exam/mcq/create\",\r\n\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: JSON.stringify({\r\n        course: this.props.courseData._id,\r\n        mcqQuestions: this.questionIDs,\r\n        totalTime: this.totalTime,\r\n        totalMarks: this.totalMarks,\r\n        date: date,\r\n        name: examName,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status === \"OK\") {\r\n          this.setState({\r\n            showToast: true,\r\n            examCreateMessage: \"Exam Created Successfully\",\r\n          });\r\n        } else\r\n          this.setState({\r\n            showToast: true,\r\n            examCreateMessage: \"Exam Created Successfully\",\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          showToast: true,\r\n          examCreateMessage: \"Something Went Wrong!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  initialPanes = [\r\n    {\r\n      title: \"Question 1\",\r\n      content: (\r\n        <Question\r\n          onAdd={this.addQuestion}\r\n          createExam={this.createExam}\r\n          totalMarks={this.totalMarks}\r\n          totalTime={this.totalTime}\r\n          examType={this.examType}\r\n        />\r\n      ),\r\n      key: \"1\",\r\n      closable: false,\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    activeKey: this.initialPanes[0].key,\r\n    panes: this.initialPanes,\r\n    showToast: false,\r\n    examCreateMessage: null,\r\n    create: true,\r\n  };\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      create: false,\r\n    })\r\n  }\r\n  onChange = (activeKey) => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = () => {\r\n    const { panes } = this.state;\r\n    const activeKey = `question${this.newTabIndex++}`;\r\n    const newPanes = [...panes];\r\n    newPanes.push({\r\n      title: `Question ${this.quesNo++}`,\r\n      content: (\r\n        <Question\r\n          onAdd={this.addQuestion}\r\n          createExam={this.createExam}\r\n          totalMarks={this.totalMarks}\r\n          totalTime={this.totalTime}\r\n        />\r\n      ),\r\n      key: activeKey,\r\n    });\r\n    this.setState({\r\n      panes: newPanes,\r\n      activeKey,\r\n    });\r\n  };\r\n\r\n  remove = (targetKey) => {\r\n    const { panes, activeKey } = this.state;\r\n    let newActiveKey = activeKey;\r\n    let lastIndex;\r\n    panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const newPanes = panes.filter((pane) => pane.key !== targetKey);\r\n    if (newPanes.length && newActiveKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        newActiveKey = newPanes[lastIndex].key;\r\n      } else {\r\n        newActiveKey = newPanes[0].key;\r\n      }\r\n    }\r\n    this.setState({\r\n      panes: newPanes,\r\n      activeKey: newActiveKey,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { panes, activeKey } = this.state;\r\n    return (\r\n      <Container fluid className=\"justify-content-center\">\r\n        {this.state.create ? (\r\n          <Row>\r\n            <Col>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <h3>Create Exam</h3>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <h4>Instructions</h4>\r\n                  <ul>\r\n                    <li>\r\n                      Select exam type from below form and then click Create\r\n                      Exam to proceed.\r\n                    </li>\r\n                    <li>You can create as many queston as you like.</li>\r\n                    <li>\r\n                      For every queston you have to set a specific time limit\r\n                      for your student to answer that question.\r\n                    </li>\r\n                    <li>Also you have to specify marks for every question.</li>\r\n                    <li>When your question set is ready click Lock Exam.</li>\r\n                    <li>\r\n                      Then you'll need to give your exam a name and a start\r\n                      schedule.\r\n                    </li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <Row>\r\n                  <Col xs={12}>\r\n                    <FormControl style={{ minWidth: \"13%\" }} required>\r\n                      <InputLabel id=\"examType\">Exam Type</InputLabel>\r\n                      <Select\r\n                        id=\"examType\"\r\n                        value={this.examType}\r\n                        onChange={this.handleChange}\r\n                      >\r\n                        <MenuItem disabled>Exam Type</MenuItem>\r\n                        <MenuItem value=\"mcq\">MCQ</MenuItem>\r\n                        <MenuItem value=\"CQ\">CQ</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={{ span: 2, offset: 5 }}>\r\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\r\n                      Create Exam\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <>\r\n            <Toast\r\n              autohide\r\n              className=\"toast-modify\"\r\n              onClose={() => this.setState({ showToast: false })}\r\n              show={this.state.showToast}\r\n            >\r\n              <Toast.Header>\r\n                <img\r\n                  src=\"holder.js/20x20?text=%20\"\r\n                  className=\"rounded mr-2\"\r\n                  alt=\"\"\r\n                />\r\n                <strong className=\"mr-auto\">Create Message</strong>\r\n                <small>just now</small>\r\n              </Toast.Header>\r\n              <Toast.Body>{this.state.examCreateMessage}</Toast.Body>\r\n            </Toast>\r\n            <Tabs\r\n              type=\"editable-card\"\r\n              onChange={this.onChange}\r\n              activeKey={activeKey}\r\n              onEdit={this.onEdit}\r\n            >\r\n              {panes.map((pane) => (\r\n                <TabPane\r\n                  tab={pane.title}\r\n                  key={pane.key}\r\n                  closable={pane.closable}\r\n                >\r\n                  {pane.content}\r\n                </TabPane>\r\n              ))}\r\n            </Tabs>\r\n          </>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Course\\CreateExam\\Question.js",["216","217","218"],"import React, { useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Forms from \"../../Generic/Forms\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { getRenderPropValue } from \"antd/lib/_util/getRenderPropValue\";\r\nimport axios from \"axios\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport \"./CreateExam.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  leftTextField: {\r\n    marginTop: theme.spacing(6),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(10),\r\n    // backgroundColor: '#3F7CAC',\r\n  },\r\n}));\r\n\r\nconst leftStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginTop: theme.spacing(3.5),\r\n  },\r\n  timeField: {\r\n    marginTop: theme.spacing(2.9),\r\n  },\r\n}));\r\n\r\nexport default function Question(props) {\r\n  const classes = useStyles();\r\n  const leftClasses = leftStyles();\r\n\r\n  let questionsCreated = 0;\r\n\r\n  const [values, setValues] = useState({\r\n    description: \"\",\r\n    question: null,\r\n    optA: null,\r\n    optB: null,\r\n    optC: null,\r\n    optD: null,\r\n    ans: null,\r\n    marks: null,\r\n    min: null,\r\n    sec: null,\r\n    date: Date.now(),\r\n    name: null,\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [questionEditDisable, setQuestionEditDisable] = useState(false);\r\n\r\n  const [showToast, setShowToast] = useState(false);\r\n\r\n  console.log(\"questionEditDisable\", questionEditDisable);\r\n\r\n  const handleClickOpen = () => {\r\n    if (\r\n      values.question &&\r\n      values.optA &&\r\n      values.optB &&\r\n      values.optC &&\r\n      values.optD &&\r\n      values.ans &&\r\n      values.marks &&\r\n      values.min &&\r\n      values.sec\r\n    ) {\r\n      setOpen(true);\r\n    } else {\r\n      setShowToast(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const createExam = () => {\r\n    console.log(values.name);\r\n    if (values.name) {\r\n      props.createExam(values.date, values.name);\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    console.log(\"Triggered\", event.target.value);\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleQuestionAdd = (id) => {\r\n    props.onAdd(\r\n      id,\r\n      values.marks,\r\n      parseInt(values.min, 10) * 60 + parseInt(values.sec, 10)\r\n    );\r\n  };\r\n\r\n  function sendQuestion(e) {\r\n    e.preventDefault();\r\n\r\n    console.log(\"Form Values \", values);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"teacher/question/mcq/create\",\r\n\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: JSON.stringify({\r\n        description: values.description,\r\n        mainQuestion: values.question,\r\n        options: [\r\n          {\r\n            option: values.optA,\r\n          },\r\n          {\r\n            option: values.optB,\r\n          },\r\n          {\r\n            option: values.optC,\r\n          },\r\n          {\r\n            option: values.optD,\r\n          },\r\n        ],\r\n        correctAnswers: [\r\n          {\r\n            answer:\r\n              values.ans === \"A\"\r\n                ? values.optA\r\n                : values.ans === \"B\"\r\n                ? values.optB\r\n                : values.ans === \"C\"\r\n                ? values.optC\r\n                : values.optD,\r\n          },\r\n        ],\r\n        time: parseInt(values.min, 10) * 60 + parseInt(values.sec, 10),\r\n        marks: parseInt(values.marks, 10),\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status === \"OK\") {\r\n          handleQuestionAdd(response.data.result.data._id);\r\n          setQuestionEditDisable(true);\r\n          questionsCreated++;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"justify-content-flex-start\">\r\n      <Toast\r\n        className=\"toast-modify\"\r\n        autohide\r\n        onClose={() => setShowToast(false)}\r\n        show={showToast}\r\n      >\r\n        <Toast.Header>\r\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n          <strong className=\"mr-auto\">Alert Message</strong>\r\n          <small>just now</small>\r\n        </Toast.Header>\r\n        <Toast.Body>You Have To Create At Least One Question !</Toast.Body>\r\n      </Toast>\r\n\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs=\"auto\">\r\n          <h3>Create Your Question Here</h3>\r\n        </Col>\r\n      </Row>\r\n      <form onSubmit={sendQuestion}>\r\n        <Row>\r\n          <Col xs={6}>\r\n            <Col lg={12}>\r\n              <Row className=\"justify-content-flex-start\">\r\n                <Col xs={12} md={6} lg={12}>\r\n                  <Forms\r\n                    id=\"description\"\r\n                    type=\"textField\"\r\n                    label=\"Description\"\r\n                    labelWidth={80}\r\n                    values={values.description}\r\n                    handleChange={handleChange}\r\n                    rows={4}\r\n                    classes={classes}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-flex-start\">\r\n                <Col xs={12} md={6} lg={12}>\r\n                  <Forms\r\n                    id=\"question\"\r\n                    type=\"textField\"\r\n                    label=\"Question\"\r\n                    labelWidth={75}\r\n                    values={values.question}\r\n                    handleChange={handleChange}\r\n                    required={true}\r\n                    rows={3}\r\n                    classes={classes}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-flex-start\">\r\n                <Col xs={6}>\r\n                  <Forms\r\n                    id=\"optA\"\r\n                    type=\"text\"\r\n                    label=\"Option A\"\r\n                    labelWidth={75}\r\n                    values={values.optA}\r\n                    handleChange={handleChange}\r\n                    required={true}\r\n                    classes={classes}\r\n                  />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Forms\r\n                    id=\"optB\"\r\n                    type=\"text\"\r\n                    label=\"Option B\"\r\n                    labelWidth={75}\r\n                    values={values.optB}\r\n                    handleChange={handleChange}\r\n                    required={true}\r\n                    classes={classes}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-flex-start\">\r\n                <Col xs={6}>\r\n                  <Forms\r\n                    id=\"optC\"\r\n                    type=\"text\"\r\n                    label=\"Option C\"\r\n                    labelWidth={75}\r\n                    values={values.optC}\r\n                    handleChange={handleChange}\r\n                    required={true}\r\n                    classes={classes}\r\n                  />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Forms\r\n                    id=\"optD\"\r\n                    type=\"text\"\r\n                    label=\"Option D\"\r\n                    labelWidth={75}\r\n                    values={values.optD}\r\n                    handleChange={handleChange}\r\n                    required={true}\r\n                    classes={classes}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n          <Col>\r\n            <Row className=\"justify-content-flex-start\">\r\n              <Col>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className={classes.textField}\r\n                  required\r\n                >\r\n                  <FormLabel component=\"legend\">Select Correct Ans</FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"ans\"\r\n                    name=\"ans\"\r\n                    value={values.ans}\r\n                    onChange={handleChange(\"ans\")}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"A\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"A\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"B\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"B\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"C\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"C\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"D\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"D\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  label=\"Marks\"\r\n                  variant=\"outlined\"\r\n                  value={values.marks}\r\n                  onChange={handleChange(\"marks\")}\r\n                  className={leftClasses.textField}\r\n                  required\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {/*             <Row className=\"justify-content-flex-start\">\r\n              <Col>\r\n                <FormLabel component=\"legend\" className={leftClasses.timeField}>\r\n                  Time Limit\r\n                </FormLabel>\r\n              </Col>\r\n            </Row> */}\r\n            <Row className=\"justify-content-flex-start\">\r\n              <Col xs={4}>\r\n                <TextField\r\n                  id=\"min\"\r\n                  type=\"number\"\r\n                  placeholder=\"00\"\r\n                  label=\"Minutes\"\r\n                  variant=\"outlined\"\r\n                  value={values.min}\r\n                  onChange={handleChange(\"min\")}\r\n                  className={classes.textField}\r\n                  required\r\n                />\r\n              </Col>\r\n              <Col xs={4}>\r\n                <TextField\r\n                  id=\"sec\"\r\n                  min=\"0\"\r\n                  type=\"number\"\r\n                  max=\"59\"\r\n                  placeholder=\"00\"\r\n                  label=\"Seconds\"\r\n                  variant=\"outlined\"\r\n                  value={values.sec}\r\n                  onChange={handleChange(\"sec\")}\r\n                  className={classes.textField}\r\n                  required\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <ButtonGroup size=\"large\" color=\"primary\">\r\n            <Button\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<EditIcon />}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              disabled={questionEditDisable}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<LockIcon />}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Lock Exam\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Row>\r\n      </form>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Lock This Exam</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            id=\"exam-name\"\r\n            type=\"text\"\r\n            label=\"Exam Name\"\r\n            value={values.name}\r\n            onChange={handleChange(\"name\")}\r\n            required={true}\r\n            classes={classes.textField}\r\n          />\r\n\r\n          <br /><br/>\r\n\r\n          <TextField\r\n            id=\"datetime-local\"\r\n            label=\"Schedule Exam\"\r\n            type=\"datetime-local\"\r\n            value={values.date}\r\n            onChange={handleChange(\"date\")}\r\n            defaultValue=\"2021-05-01T10:30\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <DialogContentText>\r\n            <br />\r\n            Total Marks: {props.totalMarks}\r\n            <br />\r\n            Total Time: {props.totalTime}\r\n            <br />\r\n            <br />\r\n            By clicking confirm this exam will be created as schedule.\r\n            <br />\r\n            <br />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={createExam} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\LiveExam.js",["219"],"import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from '@material-ui/core/Button';\r\nimport './LiveExam.scss';\r\n\r\n\r\nexport default function LiveExam(props) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [index, setIndex] = React.useState(0);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  \r\n  const questions = [\r\n    {\r\n      q: \"what is the question?\",\r\n      optA: \"option a\",\r\n      optB: \"option b\",\r\n      optC: \"option c\",\r\n      optD: \"option d\",\r\n    },\r\n    {\r\n      q: \"what is the question? 2\",\r\n      optA: \"option a\",\r\n      optB: \"option b\",\r\n      optC: \"option c\",\r\n      optD: \"option d\",\r\n    },\r\n  ];\r\n\r\n  const nextQuestion = (event) => {\r\n      if(index <= questions.length) setIndex(index + 1);\r\n      else setIndex(index);\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"root \">\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={7} className=\"exam\">\r\n          <Row className=\"exam__title justify-content-center\">\r\n            <Col xs=\"auto\">\r\n              <h4>Exam Name</h4>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"exam__question\">\r\n            <Col>\r\n              <h5>{questions[index].q}</h5>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"exam__options\">\r\n            <Col xs={12}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <RadioGroup\r\n                  aria-label=\"ans\"\r\n                  name=\"ans\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                >\r\n                  <Row className=\"option\" xs={12}>\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optA\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option A\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"option\">\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optB\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option B\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"option\">\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optC\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option C\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"option\">\r\n                    <Col xs={12}>\r\n                      <FormControlLabel\r\n                        value=\"optD\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Option D\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"exam__buttons d-flex justify-content-between\">\r\n            <Col>\r\n              <span className=\"timer\">\r\n                <b>00:00</b>\r\n              </span>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"contained\" color=\"default\" onClick={nextQuestion} disableElevation disabled={index+1 == questions.length && true}>\r\n                Next\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","E:\\Project 350\\WillChange\\client\\src\\Components\\Exam\\Exam.js",["220","221","222","223","224"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Exam(props) {\r\n  // const { match } = props;\r\n\r\n  // console.log(\"Exam id\",match);\r\n  console.log(\"props... \", props);\r\n\r\n  let { id } = useParams();\r\n  console.log(\"ID\", id);\r\n\r\n  const [examData, setExamData] = useState(null);\r\n\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props.userInfo)\r\n      axios.get(`${props.userInfo.role}/exam/${id}`).then((response) => {\r\n        const data = response.data;\r\n        setExamData(data.result.data);\r\n      });\r\n  }, []);\r\n\r\n  console.log(\"Exam Data\", examData);\r\n\r\n  let examQuestionUi;\r\n\r\n  if (examData && examData.mcqQuestions) {\r\n    examQuestionUi = examData.mcqQuestions.map((question) => {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography>{question.mcqQuestionId.description}</Typography>\r\n\r\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\r\n\r\n            <List>\r\n              {question.mcqQuestionId.options.map((options) => {\r\n                return (\r\n                  <ListItem>\r\n                    <CardActions Button>{options.option}</CardActions>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </CardContent>\r\n          <Divider />\r\n        </Card>\r\n      );\r\n    });\r\n  } else if (examData && examData.cqQuestions) {\r\n    examQuestionUi = examData.cqQuestions.map((question) => {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography>{question.cqQuestionId.description}</Typography>\r\n\r\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\r\n            <TextField\r\n              id=\"outlined-textarea\"\r\n              label=\"Ans\"\r\n              placeholder=\"Write here\"\r\n              multiline\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n          <Divider />\r\n        </Card>\r\n      );\r\n    });\r\n  }\r\n\r\n  let x = 0;\r\n\r\n  if (examData)\r\n    setInterval(() => {\r\n      const date = new Date();\r\n      setTimer(date.getSeconds());\r\n    }, 1000);\r\n\r\n  if (examData)\r\n    return (\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <Paper>\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                {examData.name}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper>\r\n              {\" \"}\r\n              <h3>{timer}</h3>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid>{examQuestionUi}</Grid>\r\n        <Button onClick={() => x++}>Next</Button>\r\n      </Container>\r\n    );\r\n  else return <CircularProgress />;\r\n}\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\LiveExam\\Result.js",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Spinner,\r\n  Card,\r\n  Alert,\r\n  Jumbotron,\r\n  Table,\r\n  TabContainer,\r\n  ListGroup,\r\n  TabContent,\r\n  TabPane,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport \"./LiveExam.scss\";\r\n\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  Box,\r\n  CardContent,\r\n  CardHeader,\r\n  List,\r\n  ListItem,\r\n  Menu,\r\n  MenuList,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nimport {\r\n  DataGrid,\r\n  getNumericColumnOperators,\r\n  PreferencePanelsValue,\r\n} from \"@material-ui/data-grid\";\r\n\r\nconst Result = (props) => {\r\n  if (props.result)\r\n    return (\r\n      <Container fluid className=\"root \">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={7} className=\"exam\">\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs=\"auto\">\r\n               <br></br>\r\n                <Jumbotron>\r\n                  <h1>Exam Finished!</h1>\r\n                  <p>\r\n                    <div className=\"justify-content-center\">\r\n                      <Alert\r\n                        variant={props.result.mark > 0 ? \"success\" : \"danger\"}\r\n                      >\r\n                        {props.result.mark > 0\r\n                          ? `Congrats You have Scored ${props.result.mark}`\r\n                          : `Oho! You have Scored ${props.result.mark}`}\r\n                      </Alert>\r\n                    </div>\r\n                  </p>\r\n                </Jumbotron>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n","E:\\Project 350\\WillChange\\client\\src\\Components\\Generic\\Loader.js",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"266","line":19,"column":8,"nodeType":"264","messageId":"265","endLine":19,"endColumn":24},{"ruleId":"262","severity":1,"message":"267","line":29,"column":9,"nodeType":"264","messageId":"265","endLine":29,"endColumn":24},{"ruleId":"262","severity":1,"message":"268","line":89,"column":9,"nodeType":"264","messageId":"265","endLine":89,"endColumn":26},{"ruleId":"269","severity":1,"message":"270","line":26,"column":3,"nodeType":"271","messageId":"272","endLine":26,"endColumn":7},{"ruleId":"273","severity":1,"message":"274","line":120,"column":30,"nodeType":"275","messageId":"276","endLine":120,"endColumn":52,"fix":"277"},{"ruleId":"273","severity":1,"message":"274","line":122,"column":30,"nodeType":"275","messageId":"276","endLine":122,"endColumn":43,"fix":"278"},{"ruleId":"279","severity":1,"message":"280","line":69,"column":43,"nodeType":"281","endLine":69,"endColumn":66},{"ruleId":"282","severity":1,"message":"283","line":103,"column":32,"nodeType":"284","messageId":"272","endLine":103,"endColumn":34},{"ruleId":"279","severity":1,"message":"280","line":152,"column":13,"nodeType":"281","endLine":152,"endColumn":34},{"ruleId":"262","severity":1,"message":"266","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"285","line":3,"column":17,"nodeType":"264","messageId":"265","endLine":3,"endColumn":23},{"ruleId":"262","severity":1,"message":"286","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":11},{"ruleId":"262","severity":1,"message":"287","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":11},{"ruleId":"262","severity":1,"message":"288","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":12},{"ruleId":"262","severity":1,"message":"289","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":11},{"ruleId":"262","severity":1,"message":"290","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":17},{"ruleId":"262","severity":1,"message":"291","line":11,"column":10,"nodeType":"264","messageId":"265","endLine":11,"endColumn":20},{"ruleId":"262","severity":1,"message":"292","line":12,"column":8,"nodeType":"264","messageId":"265","endLine":12,"endColumn":14},{"ruleId":"262","severity":1,"message":"293","line":15,"column":8,"nodeType":"264","messageId":"265","endLine":15,"endColumn":18},{"ruleId":"262","severity":1,"message":"294","line":16,"column":8,"nodeType":"264","messageId":"265","endLine":16,"endColumn":11},{"ruleId":"295","severity":1,"message":"296","line":37,"column":6,"nodeType":"297","endLine":37,"endColumn":8,"suggestions":"298"},{"ruleId":"262","severity":1,"message":"285","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":23},{"ruleId":"262","severity":1,"message":"299","line":1,"column":35,"nodeType":"264","messageId":"265","endLine":1,"endColumn":44},{"ruleId":"262","severity":1,"message":"266","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"300","line":7,"column":10,"nodeType":"264","messageId":"265","endLine":7,"endColumn":21},{"ruleId":"262","severity":1,"message":"301","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":22},{"ruleId":"262","severity":1,"message":"302","line":13,"column":27,"nodeType":"264","messageId":"265","endLine":13,"endColumn":33},{"ruleId":"262","severity":1,"message":"303","line":32,"column":7,"nodeType":"264","messageId":"265","endLine":32,"endColumn":11},{"ruleId":"262","severity":1,"message":"304","line":50,"column":10,"nodeType":"264","messageId":"265","endLine":50,"endColumn":23},{"ruleId":"262","severity":1,"message":"305","line":50,"column":25,"nodeType":"264","messageId":"265","endLine":50,"endColumn":41},{"ruleId":"262","severity":1,"message":"306","line":169,"column":11,"nodeType":"264","messageId":"265","endLine":169,"endColumn":24},{"ruleId":"307","severity":1,"message":"308","line":222,"column":51,"nodeType":"309","messageId":"310","endLine":222,"endColumn":53},{"ruleId":"282","severity":1,"message":"311","line":223,"column":15,"nodeType":"284","messageId":"272","endLine":223,"endColumn":17},{"ruleId":"262","severity":1,"message":"299","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"312","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"313","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"314","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"315","line":9,"column":3,"nodeType":"264","messageId":"265","endLine":9,"endColumn":7},{"ruleId":"262","severity":1,"message":"263","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"316","line":11,"column":3,"nodeType":"264","messageId":"265","endLine":11,"endColumn":7},{"ruleId":"262","severity":1,"message":"317","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"318","line":18,"column":8,"nodeType":"264","messageId":"265","endLine":18,"endColumn":14},{"ruleId":"262","severity":1,"message":"319","line":19,"column":8,"nodeType":"264","messageId":"265","endLine":19,"endColumn":18},{"ruleId":"262","severity":1,"message":"320","line":20,"column":8,"nodeType":"264","messageId":"265","endLine":20,"endColumn":16},{"ruleId":"262","severity":1,"message":"321","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"266","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":24},{"ruleId":"262","severity":1,"message":"322","line":24,"column":3,"nodeType":"264","messageId":"265","endLine":24,"endColumn":14},{"ruleId":"262","severity":1,"message":"323","line":25,"column":3,"nodeType":"264","messageId":"265","endLine":25,"endColumn":13},{"ruleId":"262","severity":1,"message":"324","line":26,"column":3,"nodeType":"264","messageId":"265","endLine":26,"endColumn":7},{"ruleId":"262","severity":1,"message":"325","line":27,"column":3,"nodeType":"264","messageId":"265","endLine":27,"endColumn":11},{"ruleId":"262","severity":1,"message":"326","line":28,"column":3,"nodeType":"264","messageId":"265","endLine":28,"endColumn":7},{"ruleId":"262","severity":1,"message":"327","line":29,"column":3,"nodeType":"264","messageId":"265","endLine":29,"endColumn":11},{"ruleId":"262","severity":1,"message":"293","line":30,"column":3,"nodeType":"264","messageId":"265","endLine":30,"endColumn":13},{"ruleId":"307","severity":1,"message":"328","line":66,"column":39,"nodeType":"309","messageId":"329","endLine":66,"endColumn":41},{"ruleId":"307","severity":1,"message":"328","line":68,"column":38,"nodeType":"309","messageId":"329","endLine":68,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":70,"column":27,"nodeType":"284","messageId":"272","endLine":70,"endColumn":29},{"ruleId":"307","severity":1,"message":"328","line":75,"column":39,"nodeType":"309","messageId":"329","endLine":75,"endColumn":41},{"ruleId":"282","severity":1,"message":"283","line":77,"column":27,"nodeType":"284","messageId":"272","endLine":77,"endColumn":29},{"ruleId":"262","severity":1,"message":"313","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"314","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"263","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"317","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"330","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":15},{"ruleId":"262","severity":1,"message":"331","line":18,"column":3,"nodeType":"264","messageId":"265","endLine":18,"endColumn":13},{"ruleId":"262","severity":1,"message":"332","line":19,"column":3,"nodeType":"264","messageId":"265","endLine":19,"endColumn":10},{"ruleId":"262","severity":1,"message":"333","line":68,"column":9,"nodeType":"264","messageId":"265","endLine":68,"endColumn":15},{"ruleId":"262","severity":1,"message":"334","line":75,"column":10,"nodeType":"264","messageId":"265","endLine":75,"endColumn":21},{"ruleId":"282","severity":1,"message":"283","line":88,"column":34,"nodeType":"284","messageId":"272","endLine":88,"endColumn":36},{"ruleId":"282","severity":1,"message":"283","line":105,"column":34,"nodeType":"284","messageId":"272","endLine":105,"endColumn":36},{"ruleId":"295","severity":1,"message":"335","line":113,"column":6,"nodeType":"297","endLine":113,"endColumn":8,"suggestions":"336"},{"ruleId":"262","severity":1,"message":"337","line":95,"column":10,"nodeType":"264","messageId":"265","endLine":95,"endColumn":21},{"ruleId":"262","severity":1,"message":"338","line":4,"column":16,"nodeType":"264","messageId":"265","endLine":4,"endColumn":23},{"ruleId":"262","severity":1,"message":"291","line":14,"column":10,"nodeType":"264","messageId":"265","endLine":14,"endColumn":20},{"ruleId":"262","severity":1,"message":"292","line":15,"column":8,"nodeType":"264","messageId":"265","endLine":15,"endColumn":14},{"ruleId":"262","severity":1,"message":"288","line":16,"column":8,"nodeType":"264","messageId":"265","endLine":16,"endColumn":12},{"ruleId":"262","severity":1,"message":"289","line":17,"column":8,"nodeType":"264","messageId":"265","endLine":17,"endColumn":11},{"ruleId":"262","severity":1,"message":"339","line":48,"column":10,"nodeType":"264","messageId":"265","endLine":48,"endColumn":19},{"ruleId":"262","severity":1,"message":"340","line":60,"column":12,"nodeType":"264","messageId":"265","endLine":60,"endColumn":17},{"ruleId":"262","severity":1,"message":"341","line":62,"column":11,"nodeType":"264","messageId":"265","endLine":62,"endColumn":23},{"ruleId":"295","severity":1,"message":"342","line":38,"column":30,"nodeType":"264","endLine":38,"endColumn":37},{"ruleId":"282","severity":1,"message":"283","line":15,"column":18,"nodeType":"284","messageId":"272","endLine":15,"endColumn":20},{"ruleId":"262","severity":1,"message":"299","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"312","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"313","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"314","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"315","line":9,"column":3,"nodeType":"264","messageId":"265","endLine":9,"endColumn":7},{"ruleId":"262","severity":1,"message":"263","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"317","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"289","line":15,"column":3,"nodeType":"264","messageId":"265","endLine":15,"endColumn":6},{"ruleId":"262","severity":1,"message":"330","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":15},{"ruleId":"262","severity":1,"message":"343","line":17,"column":3,"nodeType":"264","messageId":"265","endLine":17,"endColumn":12},{"ruleId":"262","severity":1,"message":"331","line":18,"column":3,"nodeType":"264","messageId":"265","endLine":18,"endColumn":13},{"ruleId":"262","severity":1,"message":"332","line":19,"column":3,"nodeType":"264","messageId":"265","endLine":19,"endColumn":10},{"ruleId":"262","severity":1,"message":"344","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":13},{"ruleId":"262","severity":1,"message":"318","line":27,"column":8,"nodeType":"264","messageId":"265","endLine":27,"endColumn":14},{"ruleId":"262","severity":1,"message":"319","line":28,"column":8,"nodeType":"264","messageId":"265","endLine":28,"endColumn":18},{"ruleId":"262","severity":1,"message":"321","line":30,"column":8,"nodeType":"264","messageId":"265","endLine":30,"endColumn":19},{"ruleId":"262","severity":1,"message":"266","line":31,"column":8,"nodeType":"264","messageId":"265","endLine":31,"endColumn":24},{"ruleId":"262","severity":1,"message":"323","line":35,"column":3,"nodeType":"264","messageId":"265","endLine":35,"endColumn":13},{"ruleId":"262","severity":1,"message":"324","line":36,"column":3,"nodeType":"264","messageId":"265","endLine":36,"endColumn":7},{"ruleId":"262","severity":1,"message":"325","line":37,"column":3,"nodeType":"264","messageId":"265","endLine":37,"endColumn":11},{"ruleId":"262","severity":1,"message":"326","line":38,"column":3,"nodeType":"264","messageId":"265","endLine":38,"endColumn":7},{"ruleId":"262","severity":1,"message":"345","line":42,"column":10,"nodeType":"264","messageId":"265","endLine":42,"endColumn":19},{"ruleId":"262","severity":1,"message":"346","line":45,"column":3,"nodeType":"264","messageId":"265","endLine":45,"endColumn":11},{"ruleId":"262","severity":1,"message":"347","line":46,"column":3,"nodeType":"264","messageId":"265","endLine":46,"endColumn":28},{"ruleId":"262","severity":1,"message":"348","line":47,"column":3,"nodeType":"264","messageId":"265","endLine":47,"endColumn":24},{"ruleId":"262","severity":1,"message":"349","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":13},{"ruleId":"262","severity":1,"message":"350","line":13,"column":8,"nodeType":"264","messageId":"265","endLine":13,"endColumn":22},{"ruleId":"262","severity":1,"message":"351","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":12},{"ruleId":"262","severity":1,"message":"352","line":24,"column":10,"nodeType":"264","messageId":"265","endLine":24,"endColumn":28},{"ruleId":"262","severity":1,"message":"353","line":175,"column":11,"nodeType":"264","messageId":"265","endLine":175,"endColumn":27},{"ruleId":"282","severity":1,"message":"283","line":113,"column":117,"nodeType":"284","messageId":"272","endLine":113,"endColumn":119},{"ruleId":"262","severity":1,"message":"285","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":23},{"ruleId":"262","severity":1,"message":"326","line":15,"column":3,"nodeType":"264","messageId":"265","endLine":15,"endColumn":7},{"ruleId":"262","severity":1,"message":"320","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":11},{"ruleId":"262","severity":1,"message":"354","line":45,"column":9,"nodeType":"264","messageId":"265","endLine":45,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":53,"column":6,"nodeType":"297","endLine":53,"endColumn":8,"suggestions":"355"},{"ruleId":"262","severity":1,"message":"299","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"312","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"313","line":4,"column":3,"nodeType":"264","messageId":"265","endLine":4,"endColumn":9},{"ruleId":"262","severity":1,"message":"314","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":8},{"ruleId":"262","severity":1,"message":"315","line":9,"column":3,"nodeType":"264","messageId":"265","endLine":9,"endColumn":7},{"ruleId":"262","severity":1,"message":"263","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":10},{"ruleId":"262","severity":1,"message":"316","line":11,"column":3,"nodeType":"264","messageId":"265","endLine":11,"endColumn":7},{"ruleId":"262","severity":1,"message":"356","line":12,"column":3,"nodeType":"264","messageId":"265","endLine":12,"endColumn":8},{"ruleId":"262","severity":1,"message":"317","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":12},{"ruleId":"262","severity":1,"message":"357","line":14,"column":3,"nodeType":"264","messageId":"265","endLine":14,"endColumn":8},{"ruleId":"262","severity":1,"message":"330","line":15,"column":3,"nodeType":"264","messageId":"265","endLine":15,"endColumn":15},{"ruleId":"262","severity":1,"message":"343","line":16,"column":3,"nodeType":"264","messageId":"265","endLine":16,"endColumn":12},{"ruleId":"262","severity":1,"message":"331","line":17,"column":3,"nodeType":"264","messageId":"265","endLine":17,"endColumn":13},{"ruleId":"262","severity":1,"message":"332","line":18,"column":3,"nodeType":"264","messageId":"265","endLine":18,"endColumn":10},{"ruleId":"262","severity":1,"message":"344","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":13},{"ruleId":"262","severity":1,"message":"318","line":25,"column":8,"nodeType":"264","messageId":"265","endLine":25,"endColumn":14},{"ruleId":"262","severity":1,"message":"319","line":26,"column":8,"nodeType":"264","messageId":"265","endLine":26,"endColumn":18},{"ruleId":"262","severity":1,"message":"320","line":27,"column":8,"nodeType":"264","messageId":"265","endLine":27,"endColumn":16},{"ruleId":"262","severity":1,"message":"321","line":28,"column":8,"nodeType":"264","messageId":"265","endLine":28,"endColumn":19},{"ruleId":"262","severity":1,"message":"266","line":29,"column":8,"nodeType":"264","messageId":"265","endLine":29,"endColumn":24},{"ruleId":"262","severity":1,"message":"294","line":31,"column":3,"nodeType":"264","messageId":"265","endLine":31,"endColumn":6},{"ruleId":"262","severity":1,"message":"322","line":32,"column":3,"nodeType":"264","messageId":"265","endLine":32,"endColumn":14},{"ruleId":"262","severity":1,"message":"323","line":33,"column":3,"nodeType":"264","messageId":"265","endLine":33,"endColumn":13},{"ruleId":"262","severity":1,"message":"324","line":34,"column":3,"nodeType":"264","messageId":"265","endLine":34,"endColumn":7},{"ruleId":"262","severity":1,"message":"325","line":35,"column":3,"nodeType":"264","messageId":"265","endLine":35,"endColumn":11},{"ruleId":"262","severity":1,"message":"326","line":36,"column":3,"nodeType":"264","messageId":"265","endLine":36,"endColumn":7},{"ruleId":"262","severity":1,"message":"327","line":37,"column":3,"nodeType":"264","messageId":"265","endLine":37,"endColumn":11},{"ruleId":"262","severity":1,"message":"358","line":38,"column":3,"nodeType":"264","messageId":"265","endLine":38,"endColumn":8},{"ruleId":"262","severity":1,"message":"293","line":39,"column":3,"nodeType":"264","messageId":"265","endLine":39,"endColumn":13},{"ruleId":"262","severity":1,"message":"345","line":41,"column":10,"nodeType":"264","messageId":"265","endLine":41,"endColumn":19},{"ruleId":"262","severity":1,"message":"346","line":46,"column":3,"nodeType":"264","messageId":"265","endLine":46,"endColumn":11},{"ruleId":"262","severity":1,"message":"347","line":47,"column":3,"nodeType":"264","messageId":"265","endLine":47,"endColumn":28},{"ruleId":"262","severity":1,"message":"348","line":48,"column":3,"nodeType":"264","messageId":"265","endLine":48,"endColumn":24},"no-native-reassign",["359"],"no-negated-in-lhs",["360"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'handleShowModal' is assigned a value but never used.","'createCourseModal' is assigned a value but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"361","text":"362"},{"range":"363","text":"362"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useRef' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["364"],"'useEffect' is defined but never used.","'HiClipboard' is defined but never used.","'AssignmentIcon' is defined but never used.","'Router' is defined but never used.","'days' is assigned a value but never used.","'timerDeadline' is assigned a value but never used.","'setTimerDeadLine' is assigned a value but never used.","'reloadHandler' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'Jumbotron' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'TabContainer' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'userId' is assigned a value but never used.","'cqExamsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array.",["365"],"'isApiLoaded' is assigned a value but never used.","'NavLink' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'ListGroup' is defined but never used.","'axios' is defined but never used.","'useParams' is defined but never used.","'DataGrid' is defined but never used.","'getNumericColumnOperators' is defined but never used.","'PreferencePanelsValue' is defined but never used.","'Forms' is defined but never used.","'FormHelperText' is defined but never used.","'Grid' is defined but never used.","'getRenderPropValue' is defined but never used.","'questionsCreated' is assigned a value but never used.","'classes' is assigned a value but never used.",["366"],"'Alert' is defined but never used.","'Table' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",[2995,3004],"\"error\"",[3064,3073],{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"367","fix":"371"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"372","text":"373"},"Update the dependencies array to be: [id, role]",{"range":"374","text":"375"},{"range":"376","text":"373"},[1314,1316],"[id, props.userInfo]",[2525,2527],"[id, role]",[1090,1092]]