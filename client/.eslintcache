[{"/home/jspw/Documents/Projects/Project 350/client/src/index.js":"1","/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js":"2","/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js":"3","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js":"4","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js":"5","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js":"6","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js":"7","/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js":"8","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js":"9","/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js":"10","/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js":"11","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js":"12","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js":"13","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js":"14","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js":"15","/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js":"16","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js":"17","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js":"18","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js":"19","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js":"20","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/ExamType.js":"21","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js":"22","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js":"23","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Exams.js":"24","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Students.js":"25","/home/jspw/Documents/Projects/Project 350/client/src/Components/Profile/Profile.js":"26","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/Examine.js":"27","/home/jspw/Documents/Projects/Project 350/client/src/Components/404/Error404.js":"28","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Teacher.js":"29","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Info.js":"30"},{"size":582,"mtime":1612986795083,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1611434180840,"results":"33","hashOfConfig":"32"},{"size":4127,"mtime":1613015888197,"results":"34","hashOfConfig":"32"},{"size":3118,"mtime":1612748682822,"results":"35","hashOfConfig":"32"},{"size":9348,"mtime":1613047468033,"results":"36","hashOfConfig":"32"},{"size":2701,"mtime":1612942178175,"results":"37","hashOfConfig":"32"},{"size":1034,"mtime":1612987197886,"results":"38","hashOfConfig":"32"},{"size":3621,"mtime":1613081745223,"results":"39","hashOfConfig":"32"},{"size":4198,"mtime":1613029845290,"results":"40","hashOfConfig":"32"},{"size":20210,"mtime":1613078788426,"results":"41","hashOfConfig":"32"},{"size":9675,"mtime":1613029845286,"results":"42","hashOfConfig":"32"},{"size":12934,"mtime":1613013394303,"results":"43","hashOfConfig":"32"},{"size":16829,"mtime":1613082235214,"results":"44","hashOfConfig":"32"},{"size":4835,"mtime":1613034623518,"results":"45","hashOfConfig":"32"},{"size":511,"mtime":1612852176912,"results":"46","hashOfConfig":"32"},{"size":2651,"mtime":1613034790270,"results":"47","hashOfConfig":"32"},{"size":6926,"mtime":1613002385454,"results":"48","hashOfConfig":"32"},{"size":3225,"mtime":1613016268843,"results":"49","hashOfConfig":"32"},{"size":1780,"mtime":1613082509331,"results":"50","hashOfConfig":"32"},{"size":13535,"mtime":1613013310296,"results":"51","hashOfConfig":"32"},{"size":2869,"mtime":1612942178171,"results":"52","hashOfConfig":"32"},{"size":5312,"mtime":1613076313803,"results":"53","hashOfConfig":"32"},{"size":15066,"mtime":1613077099726,"results":"54","hashOfConfig":"32"},{"size":4729,"mtime":1613081132818,"results":"55","hashOfConfig":"32"},{"size":2287,"mtime":1612972660959,"results":"56","hashOfConfig":"32"},{"size":7743,"mtime":1613004175503,"results":"57","hashOfConfig":"32"},{"size":11687,"mtime":1613046518950,"results":"58","hashOfConfig":"32"},{"size":714,"mtime":1613012721054,"results":"59","hashOfConfig":"32"},{"size":914,"mtime":1613034623518,"results":"60","hashOfConfig":"32"},{"size":879,"mtime":1613034623514,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"kvcbqu",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"64"},"/home/jspw/Documents/Projects/Project 350/client/src/index.js",[],["140","141"],"/home/jspw/Documents/Projects/Project 350/client/src/reportWebVitals.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Containers/App.js",["142","143","144","145"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport socketIOClient from \"socket.io-client\";\nimport Navigation from \"../Components/Navbar/Navbar\";\nimport SignIn from \"../Components/Authentication/SignIn\";\nimport SignUp from \"../Components/Authentication/SignUp\";\nimport Home from \"../Components/Home/Home\";\nimport Profile from \"../Components/Profile/Profile\";\nimport axios from \"axios\";\nimport Layout from \"../Components/Layout/Layout\";\nimport Course from \"../Components/Course/Course\";\nimport Exam from \"../Components/Exam/Exam\";\nimport LiveExam from \"../Components/LiveExam/LiveExam\";\nimport PreviousExam from \"../Components/PreviousExam/PreviousExam\";\nimport UpcomingExam from \"../Components/UpcomingExam/UpcomingExam\";\nimport Examine from \"../Components/PreviousExam/Examine\";\nimport Error404 from \"../Components/404/Error404\";\nimport \"./App.css\";\n\nlet userdata = localStorage.getItem(\"data\");\nuserdata = JSON.parse(userdata);\n\nfunction App() {\n  const [loginStatus, setloginStatus] = useState(null);\n\n  const [universityInfo, setUniversityInfo] = useState(null);\n\n  const [userInfo, setUserInfo] = useState(null);\n\n  const ENDPOINT = \"http://127.0.0.1:8080/\";\n\n  const [notifications, setnotifications] = useState(null);\n\n  let socketRef = useRef(null);\n\n  useEffect(() => {\n    if (userdata) {\n      axios\n        .get(`${userdata.role}/user/${userdata.id}`)\n        .then((result) => {\n          setloginStatus(result.data.status);\n          setUserInfo(result.data.result.data);\n          localStorage.setItem(\"data\", JSON.stringify(result.data.result.data));\n          console.log(\"UserInfo api call\", result);\n        })\n        .catch((error) => {\n          console.log(error);\n          setloginStatus(\"Failed\");\n          console.log(\"Error api call\", error);\n        });\n    } else setloginStatus(\"Failed\");\n    axios\n      .get(\"/notifications\")\n      .then((result) => {\n        console.log(\"Notifications \", result.data.result.data);\n        setnotifications(result.data.result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    axios\n      .get(\"university/all\")\n      .then((response) => {\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversityInfo(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navigation\n          loginStatus={loginStatus}\n          notifications={notifications}\n          userInfo={userInfo}\n        />\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Home universityInfo={universityInfo} userInfo={userInfo} />\n            )}\n          />\n          <Route path=\"/examine/:id\" exact render={() => <Examine />} />\n          <Route\n            path=\"/profile\"\n            exact\n            render={() => <Profile userInfo={userInfo} />}\n          />\n\n          <Route path=\"/signUp\" exact component={SignUp} />\n          <Route path=\"/signIn\" exact component={SignIn} />\n          <Route\n            path=\"/course/:id\"\n            render={() => (\n              <Course universityInfo={universityInfo} userInfo={userInfo} />\n            )}\n          />\n\n          <Route\n            path=\"/live-exam/:id\"\n            exact\n            render={() => <LiveExam userInfo={userInfo} />}\n          />\n\n          <Route\n            path=\"/exam/:id\"\n            exact\n            render={() => <Exam userInfo={userInfo} />}\n          />\n          <Route\n            path=\"/previous-exam/:id\"\n            exact\n            render={() => <PreviousExam userInfo={userInfo} />}\n          />\n          <Route\n            path=\"/upcoming-exam/:id\"\n            exact\n            render={() => <UpcomingExam userInfo={userInfo} />}\n          />\n\n          <Route path=\"*\" exact={true} component={Error404} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Exam/Exam.js",["146","147","148","149","150"],"import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Exam(props) {\n  // const { match } = props;\n\n  // console.log(\"Exam id\",match);\n  console.log(\"props... \", props);\n\n  let { id } = useParams();\n  console.log(\"ID\", id);\n\n  const [examData, setExamData] = useState(null);\n\n  const [timer, setTimer] = useState(null);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (props.userInfo)\n      axios.get(`${props.userInfo.role}/exam/${id}`).then((response) => {\n        const data = response.data;\n        setExamData(data.result.data);\n      });\n  }, []);\n\n  console.log(\"Exam Data\", examData);\n\n  let examQuestionUi;\n\n  if (examData && examData.mcqQuestions) {\n    examQuestionUi = examData.mcqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.mcqQuestionId.description}</Typography>\n\n            <Typography>{question.mcqQuestionId.mainQuestion}</Typography>\n\n            <List>\n              {question.mcqQuestionId.options.map((options) => {\n                return (\n                  <ListItem>\n                    <CardActions Button>{options.option}</CardActions>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  } else if (examData && examData.cqQuestions) {\n    examQuestionUi = examData.cqQuestions.map((question) => {\n      return (\n        <Card>\n          <CardContent>\n            <Typography>{question.cqQuestionId.description}</Typography>\n\n            <Typography>{question.cqQuestionId.mainQuestion}</Typography>\n            <TextField\n              id=\"outlined-textarea\"\n              label=\"Ans\"\n              placeholder=\"Write here\"\n              multiline\n              variant=\"outlined\"\n            />\n          </CardContent>\n          <Divider />\n        </Card>\n      );\n    });\n  }\n\n  let x = 0;\n\n  if (examData)\n    setInterval(() => {\n      const date = new Date();\n      setTimer(date.getSeconds());\n    }, 1000);\n\n  if (examData)\n    return (\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={8}>\n            <Paper>\n              <Typography variant=\"h2\" component=\"h2\">\n                {examData.name}\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper>\n              {\" \"}\n              <h3>{timer}</h3>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid>{examQuestionUi}</Grid>\n        <Button onClick={() => x++}>Next</Button>\n      </Container>\n    );\n  else return <CircularProgress />;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Navbar/Navbar.js",["151","152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { FaBell } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from \"axios\";\nimport { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nconst ENDPOINT = \"http://localhost:8080\";\n\nlet navElements;\n\nexport default function Navigation(props) {\n  let history = useHistory();\n  const [showSign, setShowSign] = useState(true);\n  const navChange = () => setShowSign(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [anchor, setAnchor] = React.useState(null);\n  const isNotificationOpen = Boolean(anchor);\n\n  const [response, setResponse] = useState([]);\n\n  const [notifies, setnotifies] = useState([]);\n\n  let socketRef = useRef(null);\n\n  const [opensnack, setopensnack] = React.useState(false);\n\n  const [snackbarMsg, setsnackbarMsg] = useState(false);\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setopensnack(false);\n  };\n\n  console.log(notifies);\n\n  let userdata;\n\n  useEffect(() => {\n    userdata = localStorage.getItem(\"data\");\n    userdata = JSON.parse(userdata);\n    // if (userdata) userdata = userdata;\n  }, []);\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n\n    axios\n      .get(\"/notifications\")\n      .then((result) => {\n        console.log(\"Notifications \", result.data.result.data);\n        setnotifies(result.data.result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    if (userdata) {\n      console.log(userdata.department);\n      socket.on(userdata.department, (data, error) => {\n        // setResponse(data);\n        console.log(\"data from socket\", data);\n        console.log(\"data from socket\", error);\n        if (userdata.role === \"Student\") {\n          // const bal = notifies;\n          // bal.push(data);\n          // setnotifies(data);\n\n          if (userdata.role === \"Student\") {\n            if (data.type === \"course\") {\n              setopensnack(true);\n              setsnackbarMsg(`New Course ${data.name} Invitation For You.`);\n              setTimeout(function () {\n                window.location.reload();\n              }, 2000);\n            } else if (data.type === `exam`) {\n              setopensnack(true);\n              setsnackbarMsg(`A new exam  ${data.name} is set to your course.`);\n              setTimeout(function () {\n                window.location.reload();\n              }, 2000);\n            } else if (data.type === `result`) {\n              setopensnack(true);\n              setsnackbarMsg(\n                `Your CQ Exam (${data.name}) result has been published.`\n              );\n              setTimeout(function () {\n                window.location.reload();\n              }, 2000);\n            }\n          }\n        }\n      });\n    }\n  }, []);\n\n  const joinCourse = (courseID) => {\n    handleMenuClose();\n\n    axios({\n      method: \"POST\",\n      url: `student/course/add`,\n\n      headers: { \"Content-Type\": \"application/json\" },\n      data: JSON.stringify({\n        course: courseID,\n      }),\n    })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status === \"OK\") {\n          setTimeout(function () {\n            window.location.reload();\n          }, 1000);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // if (props.notifications) {\n  //   props.notifications.forEach((notification) => {\n  //     // notifies.push(notification);\n  //     setnotifies(props.notifications);\n  //   });\n  // }\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleNotificationMenuOpen = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setAnchor(null);\n  };\n\n  const handleSignout = () => {\n    // props.login.isLogin = \"Failed\";\n\n    history.push(\"/signIn\");\n    window.location.reload();\n  };\n  let notificationsUI;\n\n  const renderProfileMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"profile-menu\"\n      keepMounted\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      style={{ width: \"340px\" }}\n    >\n      <MenuItem\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        component={Link}\n        to=\"/profile\"\n        onClick={handleMenuClose} /*style={{width: \"340px\"}}*/\n      >\n        Profile\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>My Schedule</MenuItem>\n      <MenuItem onClick={handleMenuClose} onClick={handleSignout}>\n        Sign Out\n      </MenuItem>\n    </Menu>\n  );\n  let x = 0;\n  if (notifies.length > 0)\n    notificationsUI = notifies.map((not) => {\n      if (not.type === \"course\")\n        return (\n          <MenuItem onClick={() => joinCourse(not.typeID)}>\n            You are invited to a new course {not.name}.<br></br>\n            {/* <div className=\"btn-group btn-group-sm\">\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                // onClick={joinCourse(not.typeID)}\n              >\n                Join\n              </button>\n              <p> </p>\n              <button type=\"button\" class=\"btn btn-warning\">\n                Reject\n              </button>\n            </div> */}\n            <hr />\n          </MenuItem>\n        );\n      else if (not.type === \"exam\") {\n        return (\n          <MenuItem>\n            <a href={`/course/${not.typeID}`}>\n              A new exam is created {not.name}.\n            </a>\n          </MenuItem>\n        );\n      } else if (not.type === \"result\") {\n        return (\n          <MenuItem>\n            <a href={`/course/${not.typeID}`}>\n              Your CQ Exam {not.name} result has been published.\n            </a>\n          </MenuItem>\n        );\n      }\n    });\n\n  let renderNotificationMenu;\n\n  renderNotificationMenu = (\n    <Menu\n      anchorEl={anchor}\n      id={`{notification menu}{x++}`}\n      open={isNotificationOpen}\n      onClose={handleMenuClose}\n      // onClick={joinCourse}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      {notifies ? notificationsUI : <MenuItem>No Notifications</MenuItem>}\n    </Menu>\n  );\n\n  if (props.loginStatus == null) {\n    navElements = (\n      <>\n        <Spinner animation=\"grow\" />\n      </>\n    );\n  } else if (props.loginStatus == \"OK\") {\n    navElements = (\n      <>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotificationMenuOpen}\n        >\n          <Badge\n            badgeContent={notifies ? notifies.length : 0}\n            color=\"secondary\"\n          >\n            <FaBell style={{ color: \"white\" }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          // aria-controls={menuId}\n          aria-haspopup=\"true\"\n          onClick={handleProfileMenuOpen}\n          color=\"inherit\"\n        >\n          <FaUserAlt style={{ color: \"white\" }} />\n        </IconButton>\n        {/* <MenuItem onClick={handleSignout}>Signout</MenuItem> */}\n        {renderNotificationMenu}\n        {renderProfileMenu}\n      </>\n    );\n  } else {\n    navElements = (\n      <>\n        <Link to=\"signUp\" onClick={navChange}>\n          <MenuItem> Sign Up</MenuItem>\n        </Link>\n        <Link to=\"signIn\" onClick={navChange}>\n          <MenuItem>Sign In</MenuItem>\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Snackbar\n        open={opensnack}\n        onClose={handleSnackClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        // anchorPosition ={ { right: 10, top: 100 }}\n      >\n        <Alert onClose={handleSnackClose} severity=\"info\">\n          {snackbarMsg}\n        </Alert>\n      </Snackbar>\n      <Navbar bg=\"\" style={{ backgroundColor: \"#010302\" }} variant=\"dark\">\n        <Navbar.Brand href=\"/\" className={showSign ? null : \"m-auto\"}>\n          <>\n            <img\n              src={\"/static/paper.png\"}\n              width={\"38\"}\n              height={\"38\"}\n              className={\"d-inline-block align-top\"}\n              className=\"nav__logo\"\n              alt={\"logo\"}\n            />\n            <span className=\"nav__heading\" style={{ fontSize: \"122%\" }}>\n              paper\n            </span>\n          </>\n        </Navbar.Brand>\n        {showSign ? <Nav className=\"ml-auto\">{navElements}</Nav> : null}\n      </Navbar>\n    </>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Layout/Layout.js",["161"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst Layout = (props) => {\n  const [showModal, setShowModal] = useState(true);\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  const SelectForm = () => {\n    let items = [];\n\n    if (props.universityInfo) {\n      props.universityInfo.forEach((element) => {\n        if (element.shortform === props.userInfo.varsity) {\n          element.departments.forEach((dept) => {\n            // console.log(dept);\n            items.push({\n              id: dept._id,\n              value: dept.shortform,\n            });\n          });\n        }\n      });\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl variant=\"outlined\" fullWidth required>\n        <InputLabel>{props.label}</InputLabel>\n        <Select value={props.values} label={props.label}>\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  const createCourseModal = (\n    <Modal\n      show={showModal}\n      onHide={handleCloseModal}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Create Course</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Control placeholder=\"Course Name\" />\n            </Col>\n            <Col>\n              <Form.Control placeholder=\"Code\" />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                readOnly\n                defaultValue={\n                  props.userInfo ? props.userInfo.varsity : \"Loading\"\n                }\n              />\n            </Col>\n            <Col>\n              <SelectForm />\n            </Col>\n          </Row>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\">Understood</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n\n  return (\n    <Container>\n      <Button onClick={handleShowModal}>Create Course </Button>;\n    </Container>\n  );\n};\n\nexport default Layout;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Course.js",["162","163"],"import axios from \"axios\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport \"./Course.scss\";\nimport LinearIndeterminate from \"../Generic/Loader\";\n\nlet userdata = localStorage.getItem(\"data\");\nuserdata = JSON.parse(userdata);\n\nexport default function Course(props) {\n  let { id } = useParams();\n\n  const [courseData, setCourseData] = useState(null);\n\n  console.log(userdata);\n\n  useEffect(() => {\n    if (userdata)\n      axios\n        .get(`${userdata.role}/course/${id}`)\n        .then((response) => {\n          const data = response.data;\n          console.log(data);\n          if (data.status === \"OK\") setCourseData(data.result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }, []);\n\n  if (courseData)\n    return (\n      <div className=\"course\">\n        <Sidebar courseData={courseData} userInfo={userdata} />\n      </div>\n    );\n  else return <LinearIndeterminate></LinearIndeterminate>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/UpcomingExam/UpcomingExam.js",["164","165","166","167","168"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignIn.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Home/Home.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Authentication/SignUp.js",["189","190","191"],"import React, { useState } from \"react\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Forms from \"../Generic/Forms\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./SignIn.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    // margin: theme.spacing(1),\n  },\n  textField: {\n    // width: \"15vw\",\n    // margin: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  shadows: [\"none\"],\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    role: \"\",\n    designation: \"\",\n    university: \"\",\n    department: \"\",\n    session: \"\",\n    regNo: \"\",\n    result: \"\",\n    error: \"\",\n  });\n\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: apiDomain + \"university/all\",\n  //   })\n  //     .then((response) => {\n  //       // console.log(\"All Universites..\");\n\n  //       // console.log(response.data);\n\n  //       const data = response.data;\n\n  //       if (data.status === \"OK\") {\n  //         setUniversities(data.result.data);\n  //       }\n  //     })\n  //     .catch((error) => console.log(error));\n  // }, []);\n\n  // console.log(\"API CALL DATA\", universities);\n  let history = useHistory();\n\n  const obj = {\n    role: values.role,\n    username: values.username,\n    email: values.email,\n    password: values.password,\n    repassword: values.confirmPassword,\n    firstName: values.firstName,\n    lastName: values.lastName,\n    department: values.department,\n    registrationNo: parseInt(values.regNo, 10),\n    session: values.session,\n    varsity: values.university,\n    designation: values.designation,\n  };\n\n  const body = JSON.stringify(obj);\n\n  const handleSignUp = (e) => {\n    // console.log('hello')\n    fetchData();\n    e.preventDefault();\n  };\n  const fetchData = async () => {\n    let endpoint;\n    if (values.role === \"Teacher\") endpoint = \"auth/create-teacher\";\n    else endpoint = \"auth/create-student\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: body,\n    };\n\n    const response = await fetch(`${apiDomain}${endpoint}`, requestOptions);\n\n    const data = await response.json();\n\n    console.log(\"API data\", data);\n\n    if (data.status === \"FAILED\")\n      setValues({ ...values, [\"error\"]: data.result });\n    else {\n      setValues({ ...values, [\"error\"]: \"\" });\n      // const userdata = {\n      //   token: data.result.jwt.token,\n      //   role: data.result.data.role.toLowerCase(),\n      //   id: data.result.data.id,\n      // };\n\n      localStorage.setItem(\"data\", JSON.stringify(data.result.data));\n\n      // console.log(userdata);\n\n      // localStorage.setItem(\"data\", JSON.stringify(userdata));\n      history.push(\"/\");\n      window.location.reload();\n    }\n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  // if (universities)\n  return (\n    <Container>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.textField}>\n            <h2>Hello There!!</h2>\n            <p>Lets Sign Up to continue</p>\n          </Grid>\n        </Grid>\n        {values.error !== \"\" ? (\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.root}\n          >\n            <Alert elevation={0} severity=\"error\">\n              {values.error}\n            </Alert>\n          </Grid>\n        ) : null}\n        <form onSubmit={handleSignUp}>\n          <Grid item xs={12}>\n            <Forms\n              id=\"role\"\n              type=\"select\"\n              label=\"Role\"\n              classes={classes}\n              values={values.role}\n              handleChange={handleChange}\n            />\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"university\"\n                type=\"select\"\n                label=\"University\"\n                labelWidth={117}\n                classes={classes}\n                values={values.university}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                selectedUniversity={values.university}\n                id=\"department\"\n                type=\"select\"\n                label=\"Department\"\n                labelWidth={117}\n                classes={classes}\n                values={values.department}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          {values.role !== \"Teacher\" ? (\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"session\"\n                  type=\"select\"\n                  label=\"Session\"\n                  labelWidth={117}\n                  classes={classes}\n                  values={values.session}\n                  handleChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Forms\n                  id=\"regNo\"\n                  type=\"text\"\n                  label=\"Registration No\"\n                  labelWidth={120}\n                  classes={classes}\n                  values={values.regNo}\n                  handleChange={handleChange}\n                  required={true}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12}>\n              <Forms\n                id=\"designation\"\n                type=\"select\"\n                label=\"Designation\"\n                labelWidth={117}\n                classes={classes}\n                values={values.designation}\n                handleChange={handleChange}\n              />\n            </Grid>\n          )}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"firstName\"\n                type=\"text\"\n                label=\"First Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.firstName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"lastName\"\n                type=\"text\"\n                label=\"Last Name\"\n                labelWidth={78}\n                classes={classes}\n                values={values.lastName}\n                handleChange={handleChange}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"username\"\n                type=\"text\"\n                label=\"Username\"\n                labelWidth={84}\n                classes={classes}\n                values={values.username}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                labelWidth={110}\n                classes={classes}\n                values={values.email}\n                handleChange={handleChange}\n                required={true}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                labelWidth={80}\n                classes={classes}\n                values={values.password}\n                handleChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Forms\n                id=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                labelWidth={140}\n                classes={classes}\n                values={values.confirmPassword}\n                handleChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.textField}>\n            <Button variant=\"contained\" value=\"Sign Up\" type=\"submit\" fullWidth>\n              Sign Up\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n  // else return <h1>Loading</h1>;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/PreviousExam.js",["192","193","194","195","196","197","198","199","200","201","202"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nimport axios from \"axios\";\n\nimport \"./PreviousExam.css\";\n\nimport MarkSheet from \"./MarkSheet\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LinearIndeterminate from \"../Generic/Loader\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Box, CardContent, MenuList, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport ExamInfo from \"./ExamInfo\";\n\nconst PreviousExam = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const { id } = useParams();\n\n  let userdata;\n  userdata = localStorage.getItem(\"data\");\n  userdata = JSON.parse(userdata);\n\n  let role ;\n  \n  role = userdata.role;\n\n  const [mcqExamData, setMcqExamData] = useState(null);\n  const [cqExamData, setCqExamData] = useState(null);\n  const [mcqExamsData, setMcqExamsData] = useState(null);\n  const [cqExamsData, setCqExamsData] = useState(null);\n\n  const [onlyExamInfo, setOnlyExamInfo] = useState(null);\n\n  let mcq;\n  let cq;\n\n  useEffect(() => {\n    let examType = \"mcq\";\n    let endpoint;\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\n\n    axios\n      .get(endpoint)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status == \"OK\") {\n          if (role === \"Teacher\") setMcqExamsData(response.data.result.data);\n          else setMcqExamData(response.data.result.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        axios\n          .get(`${role}/exam/${id}`)\n          .then((response) => {\n            setOnlyExamInfo(response.data.result.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n\n    examType = \"cq\";\n    if (role === \"Teacher\") endpoint = `teacher/exam/${examType}/submits/${id}`;\n    else endpoint = `${role}/exam/${examType}/submit/${id}`;\n\n    axios\n      .get(endpoint)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status == \"OK\") {\n          if (role === \"Teacher\") setCqExamsData(response.data.result.data);\n          else setCqExamData(response.data.result.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        axios\n          .get(`${role}/exam/${id}`)\n          .then((response) => {\n            setOnlyExamInfo(response.data.result.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  }, []);\n\n  if (mcqExamData)\n    mcq = mcqExamData.studentAnswers.map((test) => {\n      return (\n        <div>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{test.mcqQuestion.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{test.mcqQuestion.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n              <MenuList>\n                {test.mcqQuestion.options.map((op) => {\n                  if (test.mcqQuestion.correctAnswers[0].answer === op.option)\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n                  if (test.studentAnswer === op.option)\n                    return <Alert variant=\"danger\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent>\n          </Card>\n          <br></br>\n        </div>\n      );\n    });\n  else if (cqExamData)\n    cq = cqExamData.cqExam.cqQuestions.map((cqx, i) => {\n      console.log(cqExamData);\n      return (\n        <div>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question : [ {`Marks : ${cqx.cqQuestionId.marks} || `}\n              {`Time : ${cqx.cqQuestionId.time / 60}  min  ${\n                cqx.cqQuestionId.time % 60\n              } sec `}\n              ]\n            </Box>\n\n            <div className=\"card card-body bg-light\">\n              <Typography>\n                {\" \"}\n                {cqx.cqQuestionId.description\n                  ? cqx.cqQuestionId.description\n                  : \"\"}\n              </Typography>\n\n              <Typography> {cqx.cqQuestionId.mainQuestion} </Typography>\n            </div>\n            <CardContent>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                    Ans :{\" \"}\n                  </Box>\n                </Form.Label>\n                <Form.Control\n                  value={cqExamData.studentAnswers[i] ? cqExamData.studentAnswers[i].studentAnswer : ''}\n                  disabled\n                  as=\"textarea\"\n                  rows={3}\n                />\n              </Form.Group>\n            </CardContent>\n          </Card>\n          <br></br>\n        </div>\n      );\n    });\n\n  if (role === \"Teacher\" && (mcqExamsData || onlyExamInfo || cqExamData)) {\n    return (\n      <Tab.Container\n        className=\"scroll-off\"\n        id=\"list-group-tabs-example\"\n        defaultActiveKey=\"#exam-info\"\n      >\n        <Row>\n          <Col sm={2}>\n            <ListGroup variant=\"flush\" className=\"align-items-center\">\n              <ListGroup.Item action href=\"#exam-info\">\n                Exam Info\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#mark-sheet\">\n                Mark Sheet\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#reviews\">\n                Reviews\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col sm={10}>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"#exam-info\">\n                <ExamInfo\n                  onlyExamInfo={onlyExamInfo}\n                  mcqExamData={mcqExamsData ? mcqExamsData[0] : null}\n                  cqExamData={cqExamsData ? cqExamsData[0] : null}\n                />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"#mark-sheet\">\n                <MarkSheet\n                  mcqExamsData={mcqExamsData}\n                  cqExamsData={cqExamsData}\n                />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"#reviews\">Reports</Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    );\n  }\n  // else if()\n  else if (role === \"Student\" && (mcqExamData || cqExamData))\n    return (\n      <Container style={{ marginTop: \"5px\", backgroundColor: \"white\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">\n            {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\n          </h1>\n        </Alert>\n\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Participated On</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getDate()}\n                        th{\" \"}\n                        {\n                          months[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getMonth()\n                          ]\n                        }\n                        ,\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getFullYear()}{\" \"}\n                        (\n                        {\n                          days[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getDay()\n                          ]\n                        }\n                        )\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getHours() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()}\n                        :\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getMinutes() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Total Time</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalTime\n                          : cqExamData.cqExam.totalTime}{\" \"}\n                        min\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>\n                        {mcqExamData ? mcqExamData.mark : cqExamData.mark}/\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalMarks\n                          : cqExamData.cqExam.totalMarks}\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <td>Solved</td>\n                      <td>{mcqExamData ? mcqExamData.solved : \"\"}</td>\n                    </tr>\n\n                    <tr>\n                      <td>Wrong</td>\n                      <td>{mcqExamData ? mcqExamData.wrong : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col></Col>\n\n          <Col></Col>\n        </Row>\n        <Container fluid>{mcq ? mcq : cq}</Container>\n      </Container>\n    );\n  else if (onlyExamInfo && role === \"Student\")\n    return (\n      <Container>\n        <div className=\"d-flex justify-content-center\">\n          <Alert variant=\"danger\">You Haven't Participated In This Exam</Alert>\n        </div>\n        <ExamInfo onlyExamInfo={onlyExamInfo} />\n      </Container>\n    );\n  else return <LinearIndeterminate />;\n};\n\nexport default PreviousExam;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/LiveExam.js",["203","204","205","206","207","208"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Sidebar.js",["209","210","211"],"import React, { useState ,useEffect} from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { IoCreate } from \"react-icons/io5\";\nimport { IoClipboard } from \"react-icons/io5\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport \"./Sidebar.scss\";\nimport ExamType from \"./CreateExam/ExamType\";\nimport Students from './Students';\nimport Exams from \"./Exams\";\nimport Teacher from \"./Teacher\";\nimport Info from \"./Info\";\n\nexport default function Sidebar(props) {\n\n\n\n  let userdata;\n  userdata = localStorage.getItem(\"data\");\n  userdata = JSON.parse(userdata);\n\n  console.log(props.courseData);\n\n\n  let displayContent;\n\n  const [sidebar, setSidebar] = useState(false);\n  const showSidebar = () => setSidebar(!sidebar);\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const [content, setContent] = useState(\"\");\n  const handleClick = (prop) => (event) => {\n    setContent(prop);\n  };\n  console.log(content);\n  if (content === \"createExam\")\n    displayContent = (\n      <ExamType className=\"content\" courseData={props.courseData} />\n    );\n  else if (content === \"exams\")\n    displayContent = (\n      <Exams\n        className=\"content\"\n        userInfo={userdata}\n        courseData={props.courseData}\n      />\n    );\n  else if (content === \"students\")\n    displayContent = (\n      <Students\n        className=\"content\"\n        userInfo={userdata}\n        courseData={props.courseData}\n      />\n    );\n  else if(content === \"teacher\") {\n    displayContent = (\n      <Teacher\n        className=\"content\"\n        userInfo={userdata}\n        courseData={props.courseData}\n      />\n    );\n  }\n  else if(content === \"info\") {\n    displayContent = (\n      <Info\n        className=\"content\"\n        userInfo={userdata}\n        courseData={props.courseData}\n      />\n    );\n  }\n\n  return (\n    <div className=\"parent\">\n      <div className={sidebar ? \"sidebar active\" : \"sidebar\"}>\n        <ul className=\"sidebar__nav\">\n          <li className=\"sidebar__logo\">\n            <Row>\n              <span className=\"sidebar__item__link\" onClick={showSidebar}>\n                <Col xs={4} className=\"sidebar__item__text\">\n                  {props.courseData.code}\n                </Col>\n                <Col xs={sidebar ? { span: 4, offset: 2 } : {}}>\n                  <FaAngleDoubleRight className=\"sidebar__item__icon\" />\n                </Col>\n              </span>\n            </Row>\n          </li>\n          {userdata.role === \"Teacher\" ? (\n            <li className=\"sidebar__item\">\n              <a\n                href=\"#create-exam\"\n                id=\"create-exam\"\n                className=\"sidebar__item__link\"\n                onClick={handleClick(\"createExam\")}\n              >\n                <IoCreate className=\"sidebar__item__icon\" />\n                <span className=\"sidebar__item__text\">Create Exam</span>\n              </a>\n            </li>\n          ) : (\n            \"\"\n          )}\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#exams\"\n              id=\"exams\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"exams\")}\n            >\n              <IoClipboard className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Exams</span>\n            </a>\n          </li>\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#students\"\n              id=\"students\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"students\")}\n            >\n              <FaUsers className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Students</span>\n            </a>\n          </li>\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#teacher\"\n              id=\"teacher\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"teacher\")}\n            >\n              <FaChalkboardTeacher className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Teacher</span>\n            </a>\n          </li>\n          <li className=\"sidebar__item\">\n            <a\n              href=\"#info\"\n              id=\"info\"\n              className=\"sidebar__item__link\"\n              onClick={handleClick(\"info\")}\n            >\n              <FaInfoCircle className=\"sidebar__item__icon\" />\n              <span className=\"sidebar__item__text\">Course Info</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div className={sidebar ? \"content__small\" : \"content__large\"}>\n        {displayContent}\n      </div>\n    </div>\n  );\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Loader.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Timer/Timer.js",["212","213","214","215","216","217"],"import { useRef, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from '@material-ui/core/Button';\nimport \"./Timer.css\";\n\nconst Timer = (props) => {\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n  //   console.log(props.deadline)\n  let interval = useRef();\n\n  const timer = (props) => {\n    const seconds = 1000;\n    const minutes = seconds * 60;\n    const hours = minutes * 60;\n    const days = hours * 24;\n    const deadline = new Date(props.deadline).getTime();\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = deadline - now;\n      if (timeLeft < 0) {\n        clearInterval(interval.current);\n      } else {\n        setTimerDays(Math.floor(timeLeft / days));\n        setTimerHours(Math.floor((timeLeft % days) / hours));\n        setTimerMinutes(Math.floor((timeLeft % hours) / minutes));\n        setTimerSeconds(Math.floor((timeLeft % minutes) / seconds));\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    timer(props);\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  if (timerDays == 0 && timerHours == 0 && timerMinutes == 0 && timerSeconds == 0)\n    return (\n      <Container className=\"enterExam\">\n        <Row className=\"d-flex justify-content-center enterHeading\">\n          <Col xs=\"auto\">\n            <h4>Your Exam is Running!</h4>\n          </Col>\n        </Row>\n        <Row className=\"d-flex justify-content-center\">\n          <Col xs=\"auto\">\n            <Link\n              to={`/live-exam/${props.examID}`}\n              style={{ textDecoration: \"none\", color: \"black\" }}\n            >\n              <Button variant=\"contained\" color=\"primary\" disableElevation style={{backgroundColor: \"#3F7CAC\"}}>Enter Exam</Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  else\n    return (\n      <div className=\"timer-container\">\n        <ul>\n          <li>\n            <span id=\"days\">{timerDays}</span> Days\n          </li>\n          <li>\n            <span id=\"hours\">{timerHours}</span> Hours\n          </li>\n          <li>\n            <span id=\"minutes\">{timerMinutes}</span> Minutes\n          </li>\n          <li>\n            <span id=\"seconds\">{timerSeconds}</span> Seconds\n          </li>\n        </ul>\n      </div>\n    );\n};\n\nexport default Timer;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Generic/Forms.js",["218"],"import React, { useState, useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport \"./Forms.scss\";\n\nconst apiDomain = \"http://localhost:8080/\";\n\nconst TextFieldForm = (props) => (\n  <TextField\n  id={props.id}\n  label={props.label}\n  multiline\n  rows={props.rows}\n  variant=\"outlined\"\n  onChange={props.handleChange(props.id)}\n  labelWidth={props.labelWidth}\n  value={props.values}\n  fullWidth\n  className={props.classes.textField}\n  required={props.required}\n/>\n)\n\nconst TextForm = (props) => (\n  <FormControl\n    className={props.classes.textField}\n    variant=\"outlined\"\n    fullWidth\n    required={props.required}\n  >\n    <InputLabel>{props.label}</InputLabel>\n    <OutlinedInput\n      id={props.id}\n      onChange={props.handleChange(props.id)}\n      value={props.values}\n      labelWidth={props.labelWidth}\n    />\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      className={props.classes.textField}\n      variant=\"outlined\"\n      fullWidth\n      required\n    >\n      <InputLabel>{props.label}</InputLabel>\n      <OutlinedInput\n        id={props.id}\n        type={showPassword ? \"text\" : \"password\"}\n        value={props.values}\n        onChange={props.handleChange(props.id)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label={\"password\"}\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={props.labelWidth}\n      />\n    </FormControl>\n  );\n};\n\nconst Forms = (props) => {\n  const type = props.type;\n\n  const [universities, setUniversities] = useState(null);\n  const [isApiLoaded, setIsApiLoaded] = useState(true);\n\n  // console.log(props);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: apiDomain + \"university/all\",\n    })\n      .then((response) => {\n        // console.log(\"All Universites..\");\n\n        // console.log(response.data);\n\n        const data = response.data;\n\n        if (data.status === \"OK\") {\n          setUniversities(data.result.data.universities);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsApiLoaded(false);\n      });\n  }, []);\n\n  const SelectForm = (props) => {\n    // console.log(\"COMPONENT : select form\");\n    let items = [];\n    const id = props.id;\n\n    if (universities) {\n      // console.log(\"Univbersity\", universities);\n\n      // for (let i = 0; i < universities.length; i++) {\n      //   console.log(\"Loop\");\n      //   console.log(universities[i]);\n      // }\n\n      if (id === \"role\")\n        items = [\n          {\n            id: \"Teacher\",\n            value: \"Teacher\",\n          },\n          {\n            id: \"Student\",\n            value: \"Student\",\n          },\n        ];\n      else if (id === \"university\") {\n        items = [];\n        universities.forEach((element) => {\n          items.push({\n            id: element._id,\n            value: element.shortform,\n          });\n        });\n      } else if (id === \"department\") {\n        items = [];\n\n        if (props.selectedUniversity) {\n          // console.log(\"Selected University \", props.selectedUniversity);\n          universities.forEach((element) => {\n            if (element._id === props.selectedUniversity) {\n              element.departments.forEach((dept) => {\n                // console.log(dept);\n                items.push({\n                  id: dept._id,\n                  value: dept.shortform,\n                });\n              });\n            }\n          });\n        }\n      } else if (id === \"session\") {\n        items = [];\n        items = [\n          {\n            id: \"2016-2017\",\n            value: \"2016-2017\",\n          },\n          {\n            id: \"2017-2018\",\n            value: \"2017-2018\",\n          },\n          {\n            id: \"2018-2019\",\n            value: \"2018-2019\",\n          },\n          {\n            id: \"2020-2021\",\n            value: \"2020-2021\",\n          },\n        ];\n      } else if (id === \"designation\") {\n        items = [];\n        items = [\n          {\n            id: \"Department Head\",\n            value: \"Department Head\",\n          },\n          {\n            id: \"Professor\",\n            value: \"Professor\",\n          },\n          {\n            id: \"Assistant Professor\",\n            value: \"Assistant Professor\",\n          },\n          {\n            id: \"Lecturer\",\n            value: \"Lecturer\",\n          },\n        ];\n      } else if(id === \"options\") {\n        items = [];\n        items = [\n          {\n            id: \"optA\",\n            value: \"A\",\n          },\n          {\n            id: \"optB\",\n            value: \"B\",\n          },\n          {\n            id: \"optC\",\n            value: \"C\",\n          },\n          {\n            id: \"optD\",\n            value: \"D\",\n          },\n        ];\n      }\n    }\n\n    const menuItems = items.map((item, i) => {\n      // console.log(items);\n      return (\n        <MenuItem key={i} value={item.id}>\n          {item.value}\n        </MenuItem>\n      );\n    });\n\n    return (\n      <FormControl\n      disabled = {props.disable ?  props.disable : false}\n        variant=\"outlined\"\n        className={props.classes.textField}\n        fullWidth\n        required\n      >\n        <InputLabel>{props.label}</InputLabel>\n        <Select\n          id={id}\n          value={props.values}\n          onChange={props.handleChange(id)}\n          label={props.label}\n        >\n          <MenuItem disabled>\n            <em>{props.label}</em>\n          </MenuItem>\n          {menuItems}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  if (type === \"text\") {\n    return <TextForm {...props} />;\n  } else if (type === \"password\") {\n    return <PasswordForm {...props} />;\n  } else if (type === \"select\") {\n    return <SelectForm {...props} />;\n  } else {\n    return <TextFieldForm {...props}/>\n  }\n};\n\nexport default Forms;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/MarkSheet.js",["219","220"],"import React from \"react\";\nimport {  Container } from \"react-bootstrap\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst MarkSheet = (props) => {\n  const mcqExamsData = props.mcqExamsData;\n  const cqExamsData = props.cqExamsData;\n\n  let tableBody;\n  let x = 1;\n\n  if (mcqExamsData) {\n    mcqExamsData.sort(function (a, b) {\n      return a.mark - b.mark;\n    });\n\n    console.log(\"Exam Data\", mcqExamsData);\n\n    tableBody = mcqExamsData.map((data) => {\n      console.log(data);\n      return (\n        <>\n          <tr>\n            <td>{x++}</td>\n            <td>\n              <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\n                {x == 2 ? \"👑\" : \"\"}\n              </span>\n              {`${data.student.firstName ? data.student.firstName : \"\"} ${\n                data.student.lastName ? data.student.lastName : \"\"\n              } ${data.student.username}`}\n            </td>\n            <td>{data.student.registrationNo}</td>\n\n            <td>\n              <a href={`mailto: ${data.student.email}`}>{data.student.email}</a>\n            </td>\n            <td>{data.solved}</td>\n            <td>{data.wrong}</td>\n            <td>{data.mark}</td>\n            <td>\n              <a href={`${data.student._id}`}>View</a>\n            </td>\n          </tr>\n        </>\n      );\n    });\n  } else if (cqExamsData) {\n    cqExamsData.sort(function (a, b) {\n      return a.mark - b.mark;\n    });\n\n    console.log(\"Exam Data\", cqExamsData);\n\n    tableBody = cqExamsData.map((data) => {\n      console.log(data);\n      return (\n        <>\n          <tr>\n            <td>{x++}</td>\n            <td>\n              <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\n                {x == 2 ? \"👑\" : \"\"}\n              </span>\n              {`${data.student.firstName ? data.student.firstName : \"\"} ${\n                data.student.lastName ? data.student.lastName : \"\"\n              } ${data.student.username}`}\n            </td>\n            <td>{data.student.registrationNo}</td>\n\n            <td>\n              <a href={`mailto: ${data.student.email}`}>{data.student.email}</a>\n            </td>\n            <td>{data.totalMarks}</td>\n            <td>{data.wrong}</td>\n            <td>{data.mark}</td>\n            <td>\n              <a href={`/examine/${data.cqExam._id}`}>View</a>\n            </td>\n          </tr>\n        </>\n      );\n    });\n  }\n\n  if (mcqExamsData || cqExamsData)\n    return (\n      <table\n        className=\"table table-hover table-striped table-light\"\n        style={{ textAlign: \"center\" }}\n      >\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Registration No</th>\n            <th>Email</th>\n            <th>Solved</th>\n            <th>Wrong</th>\n            <th>Mark</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>{tableBody}</tbody>\n      </table>\n    );\n  else\n    return (\n      <Container>\n        <div className=\"d-flex justify-content-center\">\n          <Alert variant=\"warning\">No Participants</Alert>\n        </div>\n      </Container>\n    );\n};\n\nexport default MarkSheet;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/LiveExam/Result.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/ExamInfo.js",["221","222","223","224","225","226","227","228","229"],"import React from \"react\";\nimport { Col, Container, Row, Card, Alert, Table } from \"react-bootstrap\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Box, CardContent, MenuList, Typography } from \"@material-ui/core\";\n\nimport {\n  Button,\n  Modal,\n  Form,\n  Spinner,\n  Jumbotron,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nimport \"./PreviousExam.css\";\n\nconst ExamInfo = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const mcqExamData = props.mcqExamData;\n  const cqExamData = props.cqExamData;\n  const onlyExamInfo = props.onlyExamInfo;\n  let mcq;\n  let cq;\n\n  console.log(\"mcqExamData\", mcqExamData);\n  console.log(\"cqExamData\", cqExamData);\n  console.log(\"onlyExamInfo\", onlyExamInfo);\n\n  if (mcqExamData) {\n    mcq = mcqExamData.mcqExam.mcqQuestions.map((questions) => {\n      return (\n        <div>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{questions.mcqQuestionId.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{questions.mcqQuestionId.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n\n            <CardContent>\n              {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n              <MenuList>\n                {questions.mcqQuestionId.options.map((op) => {\n                  if (\n                    questions.mcqQuestionId.correctAnswers[0].answer ===\n                    op.option\n                  )\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent>\n          </Card>\n          <br></br>\n        </div>\n      );\n    });\n  } else if (cqExamData) {\n    cq = cqExamData.cqExam.cqQuestions.map((cqx, i) => {\n      console.log(cqExamData);\n      return (\n        <div>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question : [ {`Marks : ${cqx.cqQuestionId.marks} || `}\n              {`Time : ${cqx.cqQuestionId.time / 60}  min  ${\n                cqx.cqQuestionId.time % 60\n              } sec `}\n              ]\n            </Box>\n\n            <div className=\"card card-body bg-light\">\n              <Typography>\n                {\" \"}\n                {cqx.cqQuestionId.description\n                  ? cqx.cqQuestionId.description\n                  : \"\"}\n              </Typography>\n\n              <Typography> {cqx.cqQuestionId.mainQuestion} </Typography>\n            </div>\n            <CardContent>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                    Ans :{\" \"}\n                  </Box>\n                </Form.Label>\n                <Form.Control\n                  value={\n                    cqExamData.studentAnswers[i]\n                      ? cqExamData.studentAnswers[i].studentAnswer\n                      : \"\"\n                  }\n                  disabled\n                  as=\"textarea\"\n                  rows={3}\n                />\n              </Form.Group>\n            </CardContent>\n          </Card>\n          <br></br>\n        </div>\n      );\n    });\n  }\n\n  if (onlyExamInfo) {\n    if (onlyExamInfo.mcqQuestions)\n      mcq = onlyExamInfo.mcqQuestions.map((questions) => {\n        return (\n          <div>\n            <Card>\n              <Box fontWeight=\"fontWeightBold\" m={1}>\n                {\" \"}\n                Question :{\" \"}\n              </Box>\n              <div className=\"card card-body bg-light\">\n                <Typography>{questions.mcqQuestionId.description}</Typography>\n                {/* <Alert variant=\"primary\"> */}\n                <Typography>{questions.mcqQuestionId.mainQuestion}</Typography>\n                {/* </Alert> */}\n              </div>\n\n              <CardContent>\n                {/* <Box fontWeight=\"fontWeightBold\" m={1}> Options :  </Box> */}\n                <MenuList>\n                  {questions.mcqQuestionId.options.map((op) => {\n                    if (\n                      questions.mcqQuestionId.correctAnswers[0].answer ===\n                      op.option\n                    )\n                      return <Alert variant=\"success\">{op.option}</Alert>;\n\n                    return <MenuItem>{op.option}</MenuItem>;\n                  })}\n                </MenuList>\n              </CardContent>\n            </Card>\n            <br></br>\n          </div>\n        );\n      });\n\n    if (onlyExamInfo.cqQuestions)\n      cq = onlyExamInfo.cqQuestions.map((questions) => {\n        return (\n          <div>\n            <Card>\n              <Box fontWeight=\"fontWeightBold\" m={1}>\n                {\" \"}\n                Question :{\" \"}\n              </Box>\n              <div className=\"card card-body bg-light\">\n                <Typography>{questions.cqQuestionId.description}</Typography>\n                {/* <Alert variant=\"primary\"> */}\n                <Typography>{questions.cqQuestionId.mainQuestion}</Typography>\n                {/* </Alert> */}\n              </div>\n\n              {/* <CardContent>\n              <MenuList>\n                {questions.mcqQuestionId.options.map((op) => {\n                  if (\n                    questions.mcqQuestionId.correctAnswers[0].answer ===\n                    op.option\n                  )\n                    return <Alert variant=\"success\">{op.option}</Alert>;\n\n                  return <MenuItem>{op.option}</MenuItem>;\n                })}\n              </MenuList>\n            </CardContent> */}\n            </Card>\n            <br></br>\n          </div>\n        );\n      });\n\n    return (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">Exam Name : {onlyExamInfo.name}</h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getDate()}\n                        th {months[new Date(onlyExamInfo.date).getMonth()]},\n                        {new Date(onlyExamInfo.date).getFullYear()} (\n                        {days[new Date(onlyExamInfo.date).getDay()]})\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getHours() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getHours()\n                          : new Date(onlyExamInfo.date).getHours()}\n                        :\n                        {new Date(onlyExamInfo.date).getMinutes() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getMinutes()\n                          : new Date(onlyExamInfo.date).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>{onlyExamInfo.totalMarks}</td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>{onlyExamInfo.totalTime} min</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Container>{mcq ? mcq : cq}</Container>\n      </Container>\n    );\n  } else\n    return (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">\n            Exam Name :{\" \"}\n            {mcqExamData ? mcqExamData.mcqExam.name : cqExamData.cqExam.name}\n          </h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getDate()}\n                        th{\" \"}\n                        {\n                          months[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getMonth()\n                          ]\n                        }\n                        ,\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.submitOn\n                            : cqExamData.submitOn\n                        ).getFullYear()}{\" \"}\n                        (\n                        {\n                          days[\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.submitOn\n                                : cqExamData.submitOn\n                            ).getDay()\n                          ]\n                        }\n                        )\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getHours() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getHours()}\n                        :\n                        {new Date(\n                          mcqExamData\n                            ? mcqExamData.mcqExam.date\n                            : cqExamData.cqExam.date\n                        ).getMinutes() < 10\n                          ? \"0\" +\n                            new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()\n                          : new Date(\n                              mcqExamData\n                                ? mcqExamData.mcqExam.date\n                                : cqExamData.cqExam.date\n                            ).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalMarks\n                          : cqExamData.cqExam.totalMarks}\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>\n                        {mcqExamData\n                          ? mcqExamData.mcqExam.totalTime\n                          : cqExamData.cqExam.totalTime}{\" \"}\n                        min\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Container className=\"scroll\">{mcq}</Container>\n      </Container>\n    );\n};\n\nexport default ExamInfo;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/ExamType.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/CreateExam.js",["230"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/CreateExam/Question.js",["231"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Exams.js",["232","233","234","235","236","237","238","239"],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Students.js",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"import React from \"react\";\nimport { Col, Container, Row, Card, Alert, Table } from \"react-bootstrap\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Box, CardContent, MenuList, Typography } from \"@material-ui/core\";\n\nimport {\n  Button,\n  Modal,\n  Form,\n  Spinner,\n  Jumbotron,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nconst Students = (props) => {\n  console.log(props.userInfo);\n  console.log(props.courseData);\n\n  let x = 1;\n  const tableBody = props.courseData.students.map((students) => {\n    return (\n      <>\n        <tr>\n          <td>{x++}</td>\n          {/* <td> */}\n          {/* <span class=\"crown badge\" style={{ fontSize: \"20px\" }}>\n              {x == 2 ? \"👑\" : \"\"}\n            </span> */}\n          {/* {students.student} */}\n          {/* </td> */}\n          {/*   <td>{exam.examType}</td>\n          <td>{exam.totalMarks}</td>\n          <td>{`${Math.round(exam.totalTime / 60)} min : ${\n            exam.totalTime % 60\n          } sec`}</td>\n          <td>{exam.when}</td>\n          <td>{exam.date.toString()}</td>\n          {props.userInfo.role === \"Teacher\" ? (\n            <td>\n              <Button href={`/profile/${tudents.student}`} variant=\"primary\">\n                Examine\n              </Button>\n            </td>\n          ) : (\n            null\n          )} */}\n\n          <td>\n            <Button href={`/profile/${students.student}`} variant=\"primary\">\n              Examine\n            </Button>\n          </td>\n\n          {/* <td>\n            <Button href={`/${exam.when}-exam/${exam._id}`} variant=\"info\">\n              View\n            </Button>\n          </td> */}\n        </tr>\n      </>\n    );\n  });\n\n  return (\n    <table\n      className=\"table table-hover table-striped table-light\"\n      style={{ textAlign: \"center\" }}\n    >\n      <thead className=\"thead-dark\">\n        <tr>\n          <th>#</th>\n          {/* <th>Exam Name</th>\n          <th>Exam Type</th>\n          <th>Total Marks</th>\n          <th>Total Time</th>\n\n          <th>Condition</th>\n          <th>Date</th>\n          {props.userInfo.role === \"Teacher\" ? <th>Check</th> : null} */}\n          <th>Action</th>\n        </tr>\n      </thead>\n\n      <tbody>{tableBody}</tbody>\n    </table>\n  );\n};\n\nexport default Students;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/Profile/Profile.js",["260","261","262"],"import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Forms from \"../Generic/Forms\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport \"./Profile.scss\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    // margin: theme.spacing(1),\n  },\n  textField: {\n    // width: \"15vw\",\n    // margin: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  shadows: [\"none\"],\n}));\n\nexport default function Profile(props) {\n  let userdata;\n\n  useEffect(() => {\n    userdata = localStorage.getItem(\"data\");\n    userdata = JSON.parse(userdata);\n    // if (userdata) userdata = userdata;\n  }, []);\n\n  console.log(props.userInfo);\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    error: \"\",\n  });\n  console.log(values.firstName);\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  if (props.userInfo)\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Row className=\"userName\">\n              <Col>\n                <h3>{props.userInfo.username}</h3>\n                <p>{props.userInfo.role}</p>\n              </Col>\n            </Row>\n            <Row className=\"about\">\n              <Col>\n                <h4>About</h4>\n                <hr />\n                <form>\n                  <Row>\n                    <Col>\n                      <Forms\n                        id=\"firstName\"\n                        type=\"textField\"\n                        label=\"First Name\"\n                        labelWidth={78}\n                        classes={classes}\n                        handleChange={handleChange}\n                        required={false}\n                        defaultValue={props.userInfo.firstName}\n                      />\n                    </Col>\n                    <Col>\n                      <Forms\n                        id=\"lastName\"\n                        type=\"textField\"\n                        label=\"Last Name\"\n                        labelWidth={78}\n                        classes={classes}\n                        defaultValue={props.userInfo.lastName}\n                        handleChange={handleChange}\n                        required={false}\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Forms\n                        id=\"regNo\"\n                        type=\"textField\"\n                        label=\"Registration No\"\n                        labelWidth={120}\n                        classes={classes}\n                        defaultValue={props.userInfo.registrationNo}\n                        handleChange={handleChange}\n                        disabled={true}\n                      />\n                    </Col>\n                    <Col>\n                      <Forms\n                        id=\"session\"\n                        type=\"textField\"\n                        label=\"Session\"\n                        labelWidth={117}\n                        classes={classes}\n                        handleChange={handleChange}\n                        defaultValue={props.userInfo.session}\n                        disabled={true}\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Forms\n                        id=\"university\"\n                        type=\"textField\"\n                        label=\"University\"\n                        labelWidth={117}\n                        classes={classes}\n                        handleChange={handleChange}\n                        defaultValue={props.userInfo.varsity}\n                        disabled={true}\n                      />\n                    </Col>\n                    <Col>\n                      <Forms\n                        id=\"department\"\n                        type=\"textField\"\n                        label=\"Department\"\n                        labelWidth={120}\n                        classes={classes}\n                        defaultValue={props.userInfo.department}\n                        handleChange={handleChange}\n                        disabled={true}\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Forms\n                        id=\"designation\"\n                        type=\"textField\"\n                        label=\"Designation\"\n                        labelWidth={117}\n                        classes={classes}\n                        handleChange={handleChange}\n                        defaultValue={\n                          props.userInfo.role === \"Student\"\n                            ? props.userInfo.role\n                            : props.userInfo.designation\n                        }\n                        disabled={true}\n                      />\n                    </Col>\n                    <Col>\n                      <Forms\n                        id=\"email\"\n                        type=\"textField\"\n                        label=\"Email Address\"\n                        labelWidth={120}\n                        classes={classes}\n                        defaultValue={props.userInfo.email}\n                        handleChange={handleChange}\n                        disabled={true}\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Forms\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        labelWidth={80}\n                        classes={classes}\n                        values={values.password}\n                        handleChange={handleChange}\n                      />\n                    </Col>\n                    <Col>\n                      <Forms\n                        id=\"confirmPassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        labelWidth={140}\n                        classes={classes}\n                        values={values.confirmPassword}\n                        handleChange={handleChange}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<SaveIcon />}\n                        type=\"submit\"\n                        style={{\n                          marginTop: \"15%\",\n                          marginBottom: \"10%\",\n                          backgroundColor: \"#3F7CAC\",\n                        }}\n                      >\n                        Save Changes\n                      </Button>\n                    </Col>\n                  </Row>\n                </form>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  else return <LinearProgress />;\n}\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/PreviousExam/Examine.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Modal,\n  Form,\n  Spinner,\n  Card,\n  Alert,\n  Jumbotron,\n  Table,\n  Tab,\n  TabContainer,\n  ListGroup,\n  TabContent,\n  TabPane,\n} from \"react-bootstrap\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport axios from \"axios\";\n\nimport MarkSheet from \"./MarkSheet\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LinearIndeterminate from \"../Generic/Loader\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  Box,\n  CardContent,\n  Grid,\n  MenuList,\n  Typography,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport ExamInfo from \"./ExamInfo\";\n\nconst Examine = (props) => {\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const { id } = useParams();\n\n  let userdata;\n  userdata = localStorage.getItem(\"data\");\n  userdata = JSON.parse(userdata);\n\n  let role;\n\n  role = userdata.role;\n\n  const [cqExamsData, setCqExamsData] = useState(null);\n\n  const [onlyExamInfo, setOnlyExamInfo] = useState(null);\n\n  const [index, setindex] = useState(0);\n  const [mark, setmark] = useState(\"\");\n\n  const marks = [];\n\n  let cq;\n\n  useEffect(() => {\n    let examType = \"mcq\";\n    const endpoint = `teacher/exam/cq/submits/${id}`;\n\n    axios\n      .get(endpoint)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status == \"OK\") {\n          console.log(\"ONCQ?\", response.data.result.data);\n          setCqExamsData(response.data.result.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        axios\n          .get(`teacher/exam/${id}`)\n          .then((response) => {\n            setOnlyExamInfo(response.data.result.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  }, []);\n\n  const addMark = (id) => {\n    console.log(cqExamsData[index].cqExam._id, \" X \", mark);\n    if (mark)\n      marks.push({\n        cqQuestion: cqExamsData[index].cqExam._id,\n        mark: parseInt(mark, 10),\n      });\n  };\n\n  const handleChange = (e) => {\n    setmark(e.target.value);\n  };\n\n  const postMarks = () => {\n    const url = `teacher/examine/cq/${cqExamsData[index]._id}`;\n\n    let totalMarks;\n\n    marks.forEach((marxk) => {\n      totalMarks += marxk.mark;\n    });\n    console.log(marks);\n\n    const data = JSON.stringify({\n      marks: marks,\n      totalMarks: totalMarks,\n    });\n\n    axios({\n      method: \"POST\",\n      url: url,\n\n      headers: { \"Content-Type\": \"application/json\" },\n      data: data,\n    })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status === \"OK\") {\n          setindex((index) => index + 1);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  if (cqExamsData) {\n    const examInfoUI = (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">\n            Exam Name : {cqExamsData[0].cqExam.name}\n          </h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(cqExamsData[0].cqExam.date).getDate()}\n                        th{\" \"}\n                        {\n                          months[\n                            new Date(cqExamsData[0].cqExam.date).getMonth()\n                          ]\n                        }\n                        ,{new Date(cqExamsData[0].cqExam.date).getFullYear()} (\n                        {days[new Date(cqExamsData[0].cqExam.date).getDay()]})\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(cqExamsData[0].cqExam.date).getHours() < 10\n                          ? \"0\" +\n                            new Date(cqExamsData[0].cqExam.date).getHours()\n                          : new Date(cqExamsData[0].cqExam.date).getHours()}\n                        :\n                        {new Date(cqExamsData[0].cqExam.date).getMinutes() < 10\n                          ? \"0\" +\n                            new Date(cqExamsData[0].cqExam.date).getMinutes()\n                          : new Date(\n                              cqExamsData[0].cqExam.date\n                            ).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>{cqExamsData[0].totalMarks}</td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>{cqExamsData[0].totalTime} min</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n\n    cq = cqExamsData[index].cqExam.cqQuestions.map((cqx, i) => {\n      return (\n        <div>\n          <Card>\n            <Grid justify=\"space-between\">\n              <Box fontWeight=\"fontWeightBold\" m={1}>\n                {\" \"}\n                Question : [ {`Marks : ${cqx.cqQuestionId.marks} || `}\n                {`Time : ${Math.round(cqx.cqQuestionId.time / 60)}  min  ${\n                  cqx.cqQuestionId.time % 60\n                } sec `}\n                ]\n              </Box>\n            </Grid>\n\n            <div className=\"card card-body bg-light\">\n              <Typography>\n                {\" \"}\n                {cqx.cqQuestionId.description\n                  ? cqx.cqQuestionId.description\n                  : \"\"}\n              </Typography>\n\n              <Typography> {cqx.cqQuestionId.mainQuestion} </Typography>\n            </div>\n            <CardContent>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                    Ans :{\" \"}\n                  </Box>\n                </Form.Label>\n                <Form.Control\n                  value={\n                    cqExamsData[index].studentAnswers[i]\n                      ? cqExamsData[index].studentAnswers[i].studentAnswer\n                      : \"\"\n                  }\n                  disabled\n                  as=\"textarea\"\n                  rows={3}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <TextField\n                  label=\"Mark\"\n                  id={cqExamsData[index].cqExam._id}\n                  //   defaultValue=\"Small\"\n                  type=\"Number\"\n                  value={mark}\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                  size=\"small\"\n                  required\n                />\n                <button onClick={addMark} type=\"input\" className=\"btn btn-info\">\n                  {\" \"}\n                  Add{\" \"}\n                </button>\n              </Form.Group>\n            </CardContent>\n          </Card>\n          <br></br>\n        </div>\n      );\n    });\n\n    return (\n      <Container>\n        {examInfoUI}\n        {cq}\n        <button onClick={postMarks} className=\"btn btn-primary\">\n          Submit\n        </button>\n        <br />\n        <br />\n      </Container>\n    );\n  }\n\n  if (onlyExamInfo) {\n    cq = onlyExamInfo.cqQuestions.map((questions) => {\n      return (\n        <div>\n          <Card>\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n              {\" \"}\n              Question :{\" \"}\n            </Box>\n            <div className=\"card card-body bg-light\">\n              <Typography>{questions.cqQuestionId.description}</Typography>\n              {/* <Alert variant=\"primary\"> */}\n              <Typography>{questions.cqQuestionId.mainQuestion}</Typography>\n              {/* </Alert> */}\n            </div>\n          </Card>\n          <br></br>\n        </div>\n      );\n    });\n\n    return (\n      <Container fluid style={{ marginTop: \"5px\" }}>\n        <Container>\n          <div className=\"d-flex justify-content-center\">\n            <Alert variant=\"warning\">No Participants</Alert>\n          </div>\n        </Container>\n\n        <Alert variant=\"light\">\n          <h1 className=\"text-center\">Exam Name : {onlyExamInfo.name}</h1>\n        </Alert>\n        <Row>\n          <Col>\n            <Row>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Date</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getDate()}\n                        th {months[new Date(onlyExamInfo.date).getMonth()]},\n                        {new Date(onlyExamInfo.date).getFullYear()} (\n                        {days[new Date(onlyExamInfo.date).getDay()]})\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>At</td>\n                      <td>\n                        {new Date(onlyExamInfo.date).getHours() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getHours()\n                          : new Date(onlyExamInfo.date).getHours()}\n                        :\n                        {new Date(onlyExamInfo.date).getMinutes() < 10\n                          ? \"0\" + new Date(onlyExamInfo.date).getMinutes()\n                          : new Date(onlyExamInfo.date).getMinutes()}{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row>\n              <Col></Col>\n              <Col>\n                <Table\n                  // variant=\"dark\"\n                  responsive\n                  hover\n                  bordered\n                  size=\"sm\"\n                  bsPrefix=\"table\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>Total Marks</td>\n                      <td>{onlyExamInfo.totalMarks}</td>\n                    </tr>\n\n                    <tr>\n                      <td>Total Time</td>\n                      <td>{onlyExamInfo.totalTime} min</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Container>{cq}</Container>\n      </Container>\n    );\n  } else return <LinearIndeterminate />;\n};\n\nexport default Examine;\n","/home/jspw/Documents/Projects/Project 350/client/src/Components/404/Error404.js",[],"/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Teacher.js",["281"],"import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function(props) {\n    const name = `${props.userInfo.firstName} ${props.userInfo.lastName}`\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1>Teacher Info</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5>Name</h5>\n          </Col>\n          <Col>\n            <h5>{name}</h5>\n          </Col>\n        </Row>\n        <Row>\n        <Col>\n            <h5>Department</h5>\n          </Col>\n          <Col>\n            <h5>{props.userInfo.department}</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5>University</h5>\n          </Col>\n          <Col>\n            <h5>{props.userInfo.varsity}</h5>\n          </Col>\n        </Row>\n      </Container>\n    );\n}","/home/jspw/Documents/Projects/Project 350/client/src/Components/Course/Info.js",["282"],"import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function(props) {\n    const name = props.courseData.name;\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1>Course Info</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5>Name</h5>\n          </Col>\n          <Col>\n            <h5>{name}</h5>\n          </Col>\n        </Row>\n        <Row>\n        <Col>\n            <h5>Department</h5>\n          </Col>\n          <Col>\n            <h5>{props.userInfo.department}</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5>University</h5>\n          </Col>\n          <Col>\n            <h5>{props.userInfo.varsity}</h5>\n          </Col>\n        </Row>\n      </Container>\n    );\n}",{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":22},{"ruleId":"287","severity":1,"message":"291","line":11,"column":8,"nodeType":"289","messageId":"290","endLine":11,"endColumn":14},{"ruleId":"287","severity":1,"message":"292","line":31,"column":9,"nodeType":"289","messageId":"290","endLine":31,"endColumn":17},{"ruleId":"287","severity":1,"message":"293","line":35,"column":7,"nodeType":"289","messageId":"290","endLine":35,"endColumn":16},{"ruleId":"287","severity":1,"message":"294","line":1,"column":17,"nodeType":"289","messageId":"290","endLine":1,"endColumn":23},{"ruleId":"287","severity":1,"message":"295","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":7},{"ruleId":"287","severity":1,"message":"296","line":16,"column":3,"nodeType":"289","messageId":"290","endLine":16,"endColumn":11},{"ruleId":"287","severity":1,"message":"297","line":45,"column":9,"nodeType":"289","messageId":"290","endLine":45,"endColumn":16},{"ruleId":"298","severity":1,"message":"299","line":53,"column":6,"nodeType":"300","endLine":53,"endColumn":8,"suggestions":"301"},{"ruleId":"287","severity":1,"message":"302","line":32,"column":10,"nodeType":"289","messageId":"290","endLine":32,"endColumn":18},{"ruleId":"287","severity":1,"message":"303","line":32,"column":20,"nodeType":"289","messageId":"290","endLine":32,"endColumn":31},{"ruleId":"287","severity":1,"message":"293","line":36,"column":7,"nodeType":"289","messageId":"290","endLine":36,"endColumn":16},{"ruleId":"298","severity":1,"message":"304","line":55,"column":16,"nodeType":"305","endLine":55,"endColumn":44},{"ruleId":"298","severity":1,"message":"306","line":110,"column":6,"nodeType":"300","endLine":110,"endColumn":8,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":192,"column":43,"nodeType":"310","endLine":192,"endColumn":66},{"ruleId":"287","severity":1,"message":"311","line":197,"column":7,"nodeType":"289","messageId":"290","endLine":197,"endColumn":8},{"ruleId":"312","severity":1,"message":"313","line":199,"column":42,"nodeType":"314","messageId":"315","endLine":199,"endColumn":44},{"ruleId":"316","severity":1,"message":"317","line":268,"column":32,"nodeType":"318","messageId":"319","endLine":268,"endColumn":34},{"ruleId":"308","severity":1,"message":"309","line":331,"column":15,"nodeType":"310","endLine":331,"endColumn":36},{"ruleId":"287","severity":1,"message":"320","line":60,"column":9,"nodeType":"289","messageId":"290","endLine":60,"endColumn":26},{"ruleId":"287","severity":1,"message":"294","line":2,"column":17,"nodeType":"289","messageId":"290","endLine":2,"endColumn":23},{"ruleId":"298","severity":1,"message":"321","line":30,"column":6,"nodeType":"300","endLine":30,"endColumn":8,"suggestions":"322"},{"ruleId":"312","severity":1,"message":"323","line":40,"column":35,"nodeType":"314","messageId":"324","endLine":40,"endColumn":37},{"ruleId":"312","severity":1,"message":"323","line":42,"column":40,"nodeType":"314","messageId":"324","endLine":42,"endColumn":42},{"ruleId":"316","severity":1,"message":"317","line":44,"column":29,"nodeType":"318","messageId":"319","endLine":44,"endColumn":31},{"ruleId":"312","severity":1,"message":"323","line":49,"column":41,"nodeType":"314","messageId":"324","endLine":49,"endColumn":43},{"ruleId":"316","severity":1,"message":"317","line":51,"column":29,"nodeType":"318","messageId":"319","endLine":51,"endColumn":31},{"ruleId":"287","severity":1,"message":"325","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"326","line":2,"column":26,"nodeType":"289","messageId":"290","endLine":2,"endColumn":35},{"ruleId":"327","severity":1,"message":"328","line":45,"column":3,"nodeType":"329","messageId":"319","endLine":45,"endColumn":7},{"ruleId":"287","severity":1,"message":"330","line":64,"column":10,"nodeType":"289","messageId":"290","endLine":64,"endColumn":22},{"ruleId":"287","severity":1,"message":"331","line":64,"column":24,"nodeType":"289","messageId":"290","endLine":64,"endColumn":39},{"ruleId":"287","severity":1,"message":"332","line":99,"column":7,"nodeType":"289","messageId":"290","endLine":99,"endColumn":11},{"ruleId":"287","severity":1,"message":"333","line":117,"column":10,"nodeType":"289","messageId":"290","endLine":117,"endColumn":23},{"ruleId":"287","severity":1,"message":"334","line":117,"column":25,"nodeType":"289","messageId":"290","endLine":117,"endColumn":41},{"ruleId":"287","severity":1,"message":"335","line":119,"column":10,"nodeType":"289","messageId":"290","endLine":119,"endColumn":21},{"ruleId":"336","severity":1,"message":"337","line":230,"column":22,"nodeType":"318","messageId":"338","endLine":230,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":232,"column":22,"nodeType":"318","messageId":"338","endLine":232,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":244,"column":22,"nodeType":"318","messageId":"338","endLine":244,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":246,"column":22,"nodeType":"318","messageId":"338","endLine":246,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":277,"column":22,"nodeType":"318","messageId":"338","endLine":277,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":279,"column":22,"nodeType":"318","messageId":"338","endLine":279,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":291,"column":22,"nodeType":"318","messageId":"338","endLine":291,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":293,"column":22,"nodeType":"318","messageId":"338","endLine":293,"endColumn":23},{"ruleId":"287","severity":1,"message":"339","line":311,"column":11,"nodeType":"289","messageId":"290","endLine":311,"endColumn":24},{"ruleId":"312","severity":1,"message":"313","line":364,"column":51,"nodeType":"314","messageId":"315","endLine":364,"endColumn":53},{"ruleId":"316","severity":1,"message":"340","line":365,"column":15,"nodeType":"318","messageId":"319","endLine":365,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":26,"column":3,"nodeType":"329","messageId":"319","endLine":26,"endColumn":7},{"ruleId":"341","severity":1,"message":"342","line":120,"column":30,"nodeType":"343","messageId":"344","endLine":120,"endColumn":52,"fix":"345"},{"ruleId":"341","severity":1,"message":"342","line":122,"column":30,"nodeType":"343","messageId":"344","endLine":122,"endColumn":43,"fix":"346"},{"ruleId":"287","severity":1,"message":"347","line":4,"column":3,"nodeType":"289","messageId":"290","endLine":4,"endColumn":9},{"ruleId":"287","severity":1,"message":"348","line":8,"column":3,"nodeType":"289","messageId":"290","endLine":8,"endColumn":8},{"ruleId":"287","severity":1,"message":"349","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":10},{"ruleId":"287","severity":1,"message":"350","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":12},{"ruleId":"287","severity":1,"message":"351","line":16,"column":3,"nodeType":"289","messageId":"290","endLine":16,"endColumn":15},{"ruleId":"287","severity":1,"message":"352","line":18,"column":3,"nodeType":"289","messageId":"290","endLine":18,"endColumn":13},{"ruleId":"287","severity":1,"message":"353","line":19,"column":3,"nodeType":"289","messageId":"290","endLine":19,"endColumn":10},{"ruleId":"287","severity":1,"message":"354","line":31,"column":8,"nodeType":"289","messageId":"290","endLine":31,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":92,"column":34,"nodeType":"318","messageId":"319","endLine":92,"endColumn":36},{"ruleId":"316","severity":1,"message":"317","line":117,"column":34,"nodeType":"318","messageId":"319","endLine":117,"endColumn":36},{"ruleId":"298","severity":1,"message":"355","line":133,"column":6,"nodeType":"300","endLine":133,"endColumn":8,"suggestions":"356"},{"ruleId":"287","severity":1,"message":"357","line":10,"column":8,"nodeType":"289","messageId":"290","endLine":10,"endColumn":25},{"ruleId":"287","severity":1,"message":"358","line":19,"column":10,"nodeType":"289","messageId":"290","endLine":19,"endColumn":24},{"ruleId":"287","severity":1,"message":"297","line":41,"column":9,"nodeType":"289","messageId":"290","endLine":41,"endColumn":16},{"ruleId":"287","severity":1,"message":"359","line":134,"column":15,"nodeType":"289","messageId":"290","endLine":134,"endColumn":22},{"ruleId":"298","severity":1,"message":"360","line":148,"column":6,"nodeType":"300","endLine":148,"endColumn":8,"suggestions":"361"},{"ruleId":"362","severity":1,"message":"363","line":440,"column":23,"nodeType":"364","endLine":440,"endColumn":55},{"ruleId":"287","severity":1,"message":"325","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"365","line":33,"column":10,"nodeType":"289","messageId":"290","endLine":33,"endColumn":15},{"ruleId":"287","severity":1,"message":"366","line":35,"column":9,"nodeType":"289","messageId":"290","endLine":35,"endColumn":21},{"ruleId":"287","severity":1,"message":"367","line":2,"column":27,"nodeType":"289","messageId":"290","endLine":2,"endColumn":33},{"ruleId":"298","severity":1,"message":"368","line":42,"column":30,"nodeType":"289","endLine":42,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":46,"column":17,"nodeType":"318","messageId":"319","endLine":46,"endColumn":19},{"ruleId":"316","severity":1,"message":"317","line":46,"column":36,"nodeType":"318","messageId":"319","endLine":46,"endColumn":38},{"ruleId":"316","severity":1,"message":"317","line":46,"column":57,"nodeType":"318","messageId":"319","endLine":46,"endColumn":59},{"ruleId":"316","severity":1,"message":"317","line":46,"column":78,"nodeType":"318","messageId":"319","endLine":46,"endColumn":80},{"ruleId":"287","severity":1,"message":"369","line":95,"column":10,"nodeType":"289","messageId":"290","endLine":95,"endColumn":21},{"ruleId":"316","severity":1,"message":"317","line":32,"column":20,"nodeType":"318","messageId":"319","endLine":32,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":68,"column":20,"nodeType":"318","messageId":"319","endLine":68,"endColumn":22},{"ruleId":"287","severity":1,"message":"347","line":7,"column":3,"nodeType":"289","messageId":"290","endLine":7,"endColumn":9},{"ruleId":"287","severity":1,"message":"348","line":8,"column":3,"nodeType":"289","messageId":"290","endLine":8,"endColumn":8},{"ruleId":"287","severity":1,"message":"349","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":10},{"ruleId":"287","severity":1,"message":"350","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":12},{"ruleId":"287","severity":1,"message":"370","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":6},{"ruleId":"287","severity":1,"message":"351","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":15},{"ruleId":"287","severity":1,"message":"371","line":14,"column":3,"nodeType":"289","messageId":"290","endLine":14,"endColumn":12},{"ruleId":"287","severity":1,"message":"352","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":13},{"ruleId":"287","severity":1,"message":"353","line":16,"column":3,"nodeType":"289","messageId":"290","endLine":16,"endColumn":10},{"ruleId":"372","severity":1,"message":"373","line":13,"column":3,"nodeType":"374","messageId":"375","endLine":15,"endColumn":4},{"ruleId":"287","severity":1,"message":"376","line":178,"column":11,"nodeType":"289","messageId":"290","endLine":178,"endColumn":27},{"ruleId":"336","severity":1,"message":"337","line":26,"column":18,"nodeType":"318","messageId":"338","endLine":26,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":28,"column":18,"nodeType":"318","messageId":"338","endLine":28,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":42,"column":18,"nodeType":"318","messageId":"338","endLine":42,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":44,"column":18,"nodeType":"318","messageId":"338","endLine":44,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":67,"column":18,"nodeType":"318","messageId":"338","endLine":67,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":69,"column":18,"nodeType":"318","messageId":"338","endLine":69,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":83,"column":18,"nodeType":"318","messageId":"338","endLine":83,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":85,"column":18,"nodeType":"318","messageId":"338","endLine":85,"endColumn":19},{"ruleId":"287","severity":1,"message":"377","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":13},{"ruleId":"287","severity":1,"message":"378","line":2,"column":15,"nodeType":"289","messageId":"290","endLine":2,"endColumn":24},{"ruleId":"287","severity":1,"message":"379","line":2,"column":26,"nodeType":"289","messageId":"290","endLine":2,"endColumn":29},{"ruleId":"287","severity":1,"message":"380","line":2,"column":31,"nodeType":"289","messageId":"290","endLine":2,"endColumn":35},{"ruleId":"287","severity":1,"message":"381","line":2,"column":37,"nodeType":"289","messageId":"290","endLine":2,"endColumn":42},{"ruleId":"287","severity":1,"message":"382","line":2,"column":44,"nodeType":"289","messageId":"290","endLine":2,"endColumn":49},{"ruleId":"287","severity":1,"message":"296","line":3,"column":8,"nodeType":"289","messageId":"290","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"383","line":4,"column":10,"nodeType":"289","messageId":"290","endLine":4,"endColumn":13},{"ruleId":"287","severity":1,"message":"384","line":4,"column":15,"nodeType":"289","messageId":"290","endLine":4,"endColumn":26},{"ruleId":"287","severity":1,"message":"385","line":4,"column":28,"nodeType":"289","messageId":"290","endLine":4,"endColumn":36},{"ruleId":"287","severity":1,"message":"386","line":4,"column":38,"nodeType":"289","messageId":"290","endLine":4,"endColumn":48},{"ruleId":"287","severity":1,"message":"348","line":8,"column":3,"nodeType":"289","messageId":"290","endLine":8,"endColumn":8},{"ruleId":"287","severity":1,"message":"387","line":9,"column":3,"nodeType":"289","messageId":"290","endLine":9,"endColumn":7},{"ruleId":"287","severity":1,"message":"349","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":10},{"ruleId":"287","severity":1,"message":"350","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":12},{"ruleId":"287","severity":1,"message":"370","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":6},{"ruleId":"287","severity":1,"message":"351","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":15},{"ruleId":"287","severity":1,"message":"371","line":14,"column":3,"nodeType":"289","messageId":"290","endLine":14,"endColumn":12},{"ruleId":"287","severity":1,"message":"352","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":13},{"ruleId":"287","severity":1,"message":"353","line":16,"column":3,"nodeType":"289","messageId":"290","endLine":16,"endColumn":10},{"ruleId":"287","severity":1,"message":"350","line":3,"column":8,"nodeType":"289","messageId":"290","endLine":3,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":27,"column":3,"nodeType":"329","messageId":"319","endLine":27,"endColumn":7},{"ruleId":"298","severity":1,"message":"304","line":40,"column":16,"nodeType":"305","endLine":40,"endColumn":44},{"ruleId":"287","severity":1,"message":"347","line":4,"column":3,"nodeType":"289","messageId":"290","endLine":4,"endColumn":9},{"ruleId":"287","severity":1,"message":"348","line":8,"column":3,"nodeType":"289","messageId":"290","endLine":8,"endColumn":8},{"ruleId":"287","severity":1,"message":"349","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":10},{"ruleId":"287","severity":1,"message":"350","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":12},{"ruleId":"287","severity":1,"message":"370","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":6},{"ruleId":"287","severity":1,"message":"351","line":16,"column":3,"nodeType":"289","messageId":"290","endLine":16,"endColumn":15},{"ruleId":"287","severity":1,"message":"371","line":17,"column":3,"nodeType":"289","messageId":"290","endLine":17,"endColumn":12},{"ruleId":"287","severity":1,"message":"352","line":18,"column":3,"nodeType":"289","messageId":"290","endLine":18,"endColumn":13},{"ruleId":"287","severity":1,"message":"353","line":19,"column":3,"nodeType":"289","messageId":"290","endLine":19,"endColumn":10},{"ruleId":"287","severity":1,"message":"388","line":26,"column":8,"nodeType":"289","messageId":"290","endLine":26,"endColumn":17},{"ruleId":"287","severity":1,"message":"296","line":28,"column":8,"nodeType":"289","messageId":"290","endLine":28,"endColumn":16},{"ruleId":"287","severity":1,"message":"354","line":31,"column":8,"nodeType":"289","messageId":"290","endLine":31,"endColumn":24},{"ruleId":"287","severity":1,"message":"385","line":36,"column":3,"nodeType":"289","messageId":"290","endLine":36,"endColumn":11},{"ruleId":"287","severity":1,"message":"389","line":41,"column":8,"nodeType":"289","messageId":"290","endLine":41,"endColumn":16},{"ruleId":"287","severity":1,"message":"390","line":76,"column":3,"nodeType":"289","messageId":"290","endLine":76,"endColumn":7},{"ruleId":"287","severity":1,"message":"391","line":90,"column":9,"nodeType":"289","messageId":"290","endLine":90,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":97,"column":34,"nodeType":"318","messageId":"319","endLine":97,"endColumn":36},{"ruleId":"298","severity":1,"message":"321","line":113,"column":6,"nodeType":"300","endLine":113,"endColumn":8,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":6,"column":1,"nodeType":"395","endLine":41,"endColumn":2},{"ruleId":"393","severity":1,"message":"394","line":6,"column":1,"nodeType":"395","endLine":41,"endColumn":2},"no-native-reassign",["396"],"no-negated-in-lhs",["397"],"no-unused-vars","'socketIOClient' is defined but never used.","Identifier","unusedVar","'Layout' is defined but never used.","'ENDPOINT' is assigned a value but never used.","'socketRef' is assigned a value but never used.","'useRef' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["398"],"'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","Assignments to the 'userdata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'userdata'. Either include it or remove the dependency array.",["399"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'x' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createCourseModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["400"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'useEffect' is defined but never used.","'TextField' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","'snackbarOpen' is assigned a value but never used.","'setSnackbarOpen' is assigned a value but never used.","'days' is assigned a value but never used.","'timerDeadline' is assigned a value but never used.","'setTimerDeadLine' is assigned a value but never used.","'snackbarMsg' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'reloadHandler' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-useless-computed-key","Unnecessarily computed property [\"error\"] found.","Property","unnecessarilyComputedProperty",{"range":"401","text":"402"},{"range":"403","text":"402"},"'Button' is defined but never used.","'Modal' is defined but never used.","'Spinner' is defined but never used.","'Jumbotron' is defined but never used.","'TabContainer' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array.",["404"],"'DialogContentText' is defined but never used.","'LinearProgress' is defined but never used.","'timeout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'questionIndex', 'seconds', and 'submitAnswers'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSeconds' needs the current value of 'questionIndex'.",["405"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Router' is defined but never used.","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'isApiLoaded' is assigned a value but never used.","'Tab' is defined but never used.","'ListGroup' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'questionsCreated' is assigned a value but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'Alert' is defined but never used.","'Table' is defined but never used.","'Box' is defined but never used.","'CardContent' is defined but never used.","'MenuList' is defined but never used.","'Typography' is defined but never used.","'Form' is defined but never used.","'MarkSheet' is defined but never used.","'ExamInfo' is defined but never used.","'role' is assigned a value but never used.","'examType' is assigned a value but never used.",["406"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},[2877,2886],"\"error\"",[2944,2953],{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"411","fix":"417"},"Update the dependencies array to be: [id, props.userInfo]",{"range":"418","text":"419"},"Update the dependencies array to be: [userdata]",{"range":"420","text":"421"},"Update the dependencies array to be: [id]",{"range":"422","text":"423"},"Update the dependencies array to be: [id, role]",{"range":"424","text":"425"},"Update the dependencies array to be: [id, questionIndex, seconds, submitAnswers]",{"range":"426","text":"427"},{"range":"428","text":"423"},[1038,1040],"[id, props.userInfo]",[3352,3354],"[userdata]",[821,823],"[id]",[3054,3056],"[id, role]",[4196,4198],"[id, questionIndex, seconds, submitAnswers]",[2132,2134]]